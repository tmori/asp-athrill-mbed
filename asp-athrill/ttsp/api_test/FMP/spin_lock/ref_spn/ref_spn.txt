
	ref_spn テストシート

----------------------------------------------------------------------
 TTSP
     TOPPERS Test Suite Package

 Copyright (C) 2009-2011 by Center for Embedded Computing Systems
             Graduate School of Information Science, Nagoya Univ., JAPAN
 Copyright (C) 2009-2011 by Digital Craft Inc.
 Copyright (C) 2009-2011 by NEC Communication Systems, Ltd.
 Copyright (C) 2009-2011 by FUJISOFT INCORPORATED
 Copyright (C) 2009-2010 by Mitsuhiro Matsuura

 上記著作権者は，以下の (1)〜(3) の条件を満たす場合に限り，本ドキュメ
 ント（本ドキュメントを改変したものを含む．以下同じ）を使用・複製・改
 変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 (1) 本ドキュメントを利用する場合には，上記の著作権表示，この利用条件
     および下記の無保証規定が，そのままの形でドキュメント中に含まれて
     いること．
 (2) 本ドキュメントを改変する場合には，ドキュメントを改変した旨の記述
     を，改変後のドキュメント中に含めること．ただし，改変後のドキュメ
     ントが，TOPPERSプロジェクト指定の開発成果物である場合には，この限
     りではない．
 (3) 本ドキュメントの利用により直接的または間接的に生じるいかなる損害
     からも，上記著作権者およびTOPPERSプロジェクトを免責すること．また，
     本ドキュメントのユーザまたはエンドユーザからのいかなる理由に基づ
     く請求からも，上記著作権者およびTOPPERSプロジェクトを免責すること．

 本ドキュメントは，無保証で提供されているものである．上記著作権者およ
 びTOPPERSプロジェクトは，本ドキュメントに関して，特定の使用目的に対す
 る適合性も含めて，いかなる保証も行わない．また，本ドキュメントの利用
 により直接的または間接的に生じたいかなる損害に関しても，その責任を負
 わない．

 $Id: ref_spn.txt 2 2012-05-09 02:23:52Z nces-shigihara $
----------------------------------------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

0. API仕様

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

ref_spn		スピンロックの状態参照〔TM〕

【C言語API】
	ER ercd = ref_spn(ID spnid, T_RSPN *pk_rspn)

【パラメータ】
	ID			spnid		対象スピンロックのID番号
	T_RSPN *	pk_rspn		スピンロックの現在状態を入れるパケットへの
							ポインタ

【リターンパラメータ】
	ER			ercd		正常終了（E_OK）またはエラーコード

　＊スピンロックの現在状態（パケットの内容）
	STAT		spnstat		ロック状態

【エラーコード】
	E_CTX			コンテキストエラー（非タスクコンテキストからの呼出
					し，CPUロック状態からの呼出し）
	E_ID			不正ID番号（spnidが不正）
	E_NOEXS〔D〕	オブジェクト未登録（対象スピンロックが未登録）
	E_OACV〔P〕		オブジェクトアクセス違反（対象スピンロックに対する
					参照操作が許可されていない）
	E_MACV〔P〕		メモリアクセス違反（pk_rspnが指すメモリ領域への書込
					みアクセスが許可されていない）

【機能】

spnidで指定したスピンロック（対象スピンロック）の現在状態を参照する．参
照した現在状態は，pk_rspnで指定したパケットに返される．

spnstatには，対象スピンロックの現在のロック状態を表す次のいずれかの値が
返される．

	TSPN_UNL	0x01U		取得されていない状態
	TSPN_LOC	0x02U		取得されている状態

【使用上の注意】

ref_spnはデバッグ時向けの機能であり，その他の目的に使用することは推奨し
ない．これは，ref_spnを呼び出し，対象スピンロックの現在状態を参照した直
後に割込みが発生した場合，ref_spnから戻ってきた時には対象スピンロックの
状態が変化している可能性があるためである．


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

1. 仕様ベースのブラックボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.1. エラー条件のテストケース(FMP)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(F-a) ディスパッチ保留状態で呼出す場合．

      (F-a-1) 非タスクコンテキストから呼び出して，E_CTXエラーが返ること．

      (F-a-2) CPUロック状態で呼び出して，E_CTXエラーが返ること．

      (F-a-3) 対象スピンロック取得中に呼び出して，E_CTXエラーが返ること．

(F-b) spnidが不正の時にE_IDが返ること．

      (F-b-1) spnidが許容される最小値-1(=0)の時にE_IDが返ること．

      (F-b-2) spnidが許容される最大値+1(TNUM_SPNID+1)の時にE_IDが返るこ
              と．

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.2. 正常条件のテストケース(FMP)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(F-c) spnstatに，対象スピンロックの現在のロック状態を表す値が返されるこ
      と．

      (F-c-1) 対象スピンロックが取得されていない状態の場合．

      (F-c-2) 対象スピンロックが取得されている状態の場合．


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

2. ソースコードの条件網羅確認

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.1. ソースコード
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
[TTYPE_SPN == NATIVE_SPN]

ref_spn(ID spnid, T_RSPN *pk_rspn)
{
	ER		ercd;
	SPNCB   *p_spncb;

	LOG_REF_SPN_ENTER(spnid, pk_rspn);
	CHECK_TSKCTX_UNL()
	CHECK_SPNID(spnid);
	p_spncb = get_spncb(spnid);

	pk_rspn->spnstat = (p_spncb->lock_flg) ? TSPN_LOC : TSPN_UNL;
	ercd = E_OK;

  error_exit:
	LOG_REF_SPN_LEAVE(ercd, pk_rspn);
	return(ercd);
}


[TTYPE_SPN == EMULATE_SPN]

ER
ref_spn(ID spnid, T_RSPN *pk_rspn)
{
	ER		ercd;
	SPNCB   *p_spncb;

	LOG_REF_SPN_ENTER(spnid, pk_rspn);
	CHECK_TSKCTX_UNL()
	CHECK_SPNID(spnid);
	p_spncb = get_spncb(spnid);

	pk_rspn->spnstat = (p_spncb->lock_flg) ? TSPN_LOC : TSPN_UNL;
	ercd = E_OK;

  error_exit:
	LOG_REF_SPN_LEAVE(ercd, pk_rspn);
	return(ercd);
}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.2. マクロを展開したAPIと呼び出す内部関数
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
[A] ref_spn(TTYPE_SPN == NATIVE_SPN)

00 : ER
01 : ref_spn(ID spnid, T_RSPN *pk_rspn)
02 : {
03 : 	ER		ercd;
04 : 	SPNCB   *p_spncb;
05 : 
06 : 	if (!sense_tskctx_unl()) {
07 : 		ercd = E_CTX;
08 : 		goto error_exit;
09 : 	}
10 : 	if (!(TMIN_SPNID <= (spnid) && (spnid) <= tmax_spnid)) {
11 : 		ercd = E_ID;
12 : 		goto error_exit;
13 : 	}
14 : 	p_spncb = p_spncb_table[(uint_t)((spnid) - TMIN_SPNID)];
15 : 
16 : 	pk_rspn->spnstat = (p_spncb->lock_flg) ? TSPN_LOC : TSPN_UNL;
17 : 	ercd = E_OK;
18 : 
19 :   error_exit:
20 : 	return(ercd);
21 : }


[B] ref_spn(TTYPE_SPN == EMULATE_SPN)

00 : ER
01 : ref_spn(ID spnid, T_RSPN *pk_rspn)
02 : {
03 : 	ER		ercd;
04 : 	SPNCB   *p_spncb;
05 : 
06 : 	if (!sense_tskctx_unl()) {
07 : 		ercd = E_CTX;
08 : 		goto error_exit;
09 : 	}
10 : 	if (!(TMIN_SPNID <= (spnid) && (spnid) <= tmax_spnid)) {
11 : 		ercd = E_ID;
12 : 		goto error_exit;
13 : 	}
14 : 	p_spncb = p_spncb_table[(uint_t)((spnid) - TMIN_SPNID)];
15 : 
16 : 	pk_rspn->spnstat = (p_spncb->lock_flg) ? TSPN_LOC : TSPN_UNL;
17 : 	ercd = E_OK;
18 : 
19 :   error_exit:
20 : 	return(ercd);
21 : }

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.3. 条件式
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(A1)  06 : !sense_tskctx_unl()
(A2)  10 : TMIN_SPNID <= (spnid)
(A3)  10 : (spnid) <= tmax_spnid
(A4)  16 : (p_spncb->lock_flg) ? TSPN_LOC : TSPN_UNL

(B1)  06 : !sense_tskctx_unl()
(B2)  10 : TMIN_SPNID <= (spnid)
(B3)  10 : (spnid) <= tmax_spnid
(B4)  16 : (p_spncb->lock_flg) ? TSPN_LOC : TSPN_UNL

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.4. 条件網羅表
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
[TTYPE_SPN == NATIVE_SPN]

         (A1) (A2) (A3) (A4)
(F-a-1)   T    D    D    D  
(F-a-2)   T    D    D    D  
(F-a-3)   T    D    D    D  
(F-b-1)   F    F   D/T   D  
(F-b-2)   F    T    F    D  
(F-c-1)   F    T    T    F  
(F-c-2)   F    T    T    T  
----------------------------
網羅      O    O    O    O  


[TTYPE_SPN == EMULATE_SPN]

         (B1) (B2) (B3) (B4)
(F-a-1)   T    D    D    D  
(F-a-2)   T    D    D    D  
(F-a-3)   T    D    D    D  
(F-b-1)   F    F   D/T   D  
(F-b-2)   F    T    F    D  
(F-c-1)   F    T    T    F  
(F-c-2)   F    T    T    T  
----------------------------
網羅      O    O    O    O  


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

3. ホワイトボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
必要なし．



以上．
