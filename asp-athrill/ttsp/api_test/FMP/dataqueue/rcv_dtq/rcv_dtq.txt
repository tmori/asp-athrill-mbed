
	rcv_dtq テストシート

----------------------------------------------------------------------
 TTSP
     TOPPERS Test Suite Package

 Copyright (C) 2009-2011 by Center for Embedded Computing Systems
             Graduate School of Information Science, Nagoya Univ., JAPAN
 Copyright (C) 2009-2011 by Digital Craft Inc.
 Copyright (C) 2009-2011 by NEC Communication Systems, Ltd.
 Copyright (C) 2009-2011 by FUJISOFT INCORPORATED
 Copyright (C) 2009-2010 by Mitsuhiro Matsuura

 上記著作権者は，以下の (1)〜(3) の条件を満たす場合に限り，本ドキュメ
 ント（本ドキュメントを改変したものを含む．以下同じ）を使用・複製・改
 変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 (1) 本ドキュメントを利用する場合には，上記の著作権表示，この利用条件
     および下記の無保証規定が，そのままの形でドキュメント中に含まれて
     いること．
 (2) 本ドキュメントを改変する場合には，ドキュメントを改変した旨の記述
     を，改変後のドキュメント中に含めること．ただし，改変後のドキュメ
     ントが，TOPPERSプロジェクト指定の開発成果物である場合には，この限
     りではない．
 (3) 本ドキュメントの利用により直接的または間接的に生じるいかなる損害
     からも，上記著作権者およびTOPPERSプロジェクトを免責すること．また，
     本ドキュメントのユーザまたはエンドユーザからのいかなる理由に基づ
     く請求からも，上記著作権者およびTOPPERSプロジェクトを免責すること．

 本ドキュメントは，無保証で提供されているものである．上記著作権者およ
 びTOPPERSプロジェクトは，本ドキュメントに関して，特定の使用目的に対す
 る適合性も含めて，いかなる保証も行わない．また，本ドキュメントの利用
 により直接的または間接的に生じたいかなる損害に関しても，その責任を負
 わない．

 $Id: rcv_dtq.txt 2 2012-05-09 02:23:52Z nces-shigihara $
----------------------------------------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

0. API仕様

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

rcv_dtq		データキューからの受信〔T〕
prcv_dtq	データキューからの受信（ポーリング）〔T〕
trcv_dtq	データキューからの受信（タイムアウト付き）〔T〕

【C言語API】
	ER ercd = rcv_dtq(ID dtqid, intptr_t *p_data)
	ER ercd = prcv_dtq(ID dtqid, intptr_t *p_data)
	ER ercd = trcv_dtq(ID dtqid, intptr_t *p_data, TMO tmout)

【パラメータ】
	ID			dtqid		対象データキューのID番号
	intptr_t *	p_data		受信データを入れるメモリ領域へのポインタ
	TMO			tmout		タイムアウト時間（trcv_dtqの場合）

【リターンパラメータ】
	ER			ercd		正常終了（E_OK）またはエラーコード
	intptr_t	data		受信データ

【エラーコード】
	E_CTX			コンテキストエラー（非タスクコンテキストからの呼出
					し，CPUロック状態からの呼出し，ディスパッチ保留状態
					からの呼出し：prcv_dtqを除く）
	E_NOSPT			未サポート機能（制約タスクからの呼出し：prcv_dtqを除
					く）
	E_ID			不正ID番号（dtqidが不正）
	E_PAR			パラメータエラー（tmoutが不正：trcv_dtqの場合）
	E_NOEXS〔D〕	オブジェクト未登録（対象データキューが未登録）
	E_OACV〔P〕		オブジェクトアクセス違反（対象データキューに対する
					通常操作2が許可されていない）
	E_MACV〔P〕		メモリアクセス違反（p_dataが指すメモリ領域への書込
					みアクセスが許可されていない）
	E_TMOUT			ポーリング失敗またはタイムアウト（rcv_dtqを除く）
	E_RLWAI			待ち禁止状態または待ち状態の強制解除（prcv_dtqを除く）
	E_DLT			待ちオブジェクトの削除または再初期化（prcv_dtqを除く）

【機能】

dtqidで指定したデータキュー（対象データキュー）からデータを受信する．受
信したデータは，p_dataで指定したメモリ領域に返される．具体的な振舞いは
以下の通り．

対象データキューのデータキュー管理領域にデータが格納されている場合には，
データキュー管理領域の先頭に格納されたデータが取り出され，p_dataで指定
したメモリ領域に返される．また，送信待ち行列にタスクが存在する場合には，
送信待ち行列の先頭のタスクの送信データが，FIFO順でデータキュー管理領域
に格納され，そのタスクは待ち解除される．待ち解除されたタスクには，待ち
状態となったサービスコールからE_OKが返る．

対象データキューのデータキュー管理領域にデータが格納されておらず，送信
待ち行列にタスクが存在する場合には，送信待ち行列の先頭のタスクの送信デー
タが，p_dataで指定したメモリ領域に返される．送信待ち行列の先頭のタスク
は，待ち解除される．待ち解除されたタスクには，待ち状態となったサービス
コールからE_OKが返る．

対象データキューのデータキュー管理領域にデータが格納されておらず，送信
待ち行列にタスクが存在しない場合には，自タスクはデータキューからの受信
待ち状態となり，対象データキューの受信待ち行列につながれる．


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

1. 仕様ベースのブラックボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.1. エラー条件のテストケース(FMP)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.2. 正常条件のテストケース(FMP)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

2. ソースコードの条件網羅確認

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.1. ソースコード
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ER
rcv_dtq(ID dtqid, intptr_t *p_data)
{
	DTQCB	*p_dtqcb;
	bool_t	dspreq = false;
	ER		ercd;
	TCB		*p_tcb;
	PCB		*my_p_pcb;
	PCB		*p_pcb;
	TCB		*p_runtsk;

	LOG_RCV_DTQ_ENTER(dtqid, p_data);
	CHECK_TSKCTX_UNL();
	CHECK_DTQID(dtqid);
	p_dtqcb = get_dtqcb(dtqid);

	t_lock_cpu();
	my_p_pcb = get_my_p_pcb();
	T_CHECK_DISPATCH(my_p_pcb);

  retry:
	t_acquire_obj_lock(&GET_OBJLOCK(p_dtqcb));
	if (!queue_empty(&(p_dtqcb->swait_queue))) {
		/* 送信待ちタスクあり */
		p_tcb = (TCB *)(p_dtqcb->swait_queue.p_next);
		if ((p_pcb = t_acquire_nested_tsk_lock(p_tcb, &GET_OBJLOCK(p_dtqcb))) == NULL){
			goto retry;
		}
		queue_delete((QUEUE *) p_tcb);
		if (p_dtqcb->count > 0U) {
			dequeue_data(p_dtqcb, p_data);
			enqueue_data(p_dtqcb, p_tcb->winfo_obj.dtq.data);
		}
		else {
			*p_data = p_tcb->winfo_obj.dtq.data;
		}
		if (wait_complete(p_tcb)) {
			dspreq = dispatch_request(p_pcb);
		}
		release_nested_tsk_lock(p_pcb);
		release_obj_lock(&GET_OBJLOCK(p_dtqcb));
		if (dspreq) {
			dispatch();
		}
		ercd = E_OK;
	}
	else if (p_dtqcb->count > 0U) {
		/* バッファにデータがあり，送信待ちタスクなし */
		dequeue_data(p_dtqcb, p_data);
		release_obj_lock(&GET_OBJLOCK(p_dtqcb));
		ercd = E_OK;
	}
	else {
		/* バッファが空かつ送信待ちタスクなし */
		if ((my_p_pcb = t_acquire_nested_tsk_lock_self(&GET_OBJLOCK(p_dtqcb))) == NULL) {
			goto retry;
		}
		p_runtsk = my_p_pcb->p_runtsk;
		p_runtsk->tstat = (TS_WAITING | TS_WAIT_RDTQ);
		make_wait(p_runtsk);
		queue_insert_prev(&(p_dtqcb->rwait_queue), &(p_runtsk->task_queue));
		p_runtsk->p_wobjcb = (WOBJCB*)p_dtqcb;
		LOG_TSKSTAT(p_runtsk);
		release_nested_tsk_lock(my_p_pcb);
		release_obj_lock(&GET_OBJLOCK(p_dtqcb));
		dispatch();
		ercd = p_runtsk->wercd;
		if (ercd == E_OK) {
			*p_data = p_runtsk->winfo_obj.dtq.data;
		}
	}
	t_unlock_cpu();

  error_exit:
	LOG_RCV_DTQ_LEAVE(ercd, *p_data);
	return(ercd);
}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.2. マクロを展開したAPIと呼び出す内部関数
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
[A] rcv_dtq

00 : ER
01 : rcv_dtq(ID dtqid, intptr_t *p_data)
02 : {
03 : 	DTQCB	*p_dtqcb;
04 : 	bool_t	dspreq = false;
05 : 	ER		ercd;
06 : 	TCB		*p_tcb;
07 : 	PCB		*my_p_pcb;
08 : 	PCB		*p_pcb;
09 : 	TCB		*p_runtsk;
10 ; 
11 : 	if (!sense_tskctx_unl()) {
12 : 		ercd = E_CTX;
13 : 		goto error_exit;
14 : 	}
15 : 	if (!(TMIN_DTQID <= (dtqid) && (dtqid) <= tmax_dtqid)) {
16 : 		ercd = E_ID;
17 : 		goto error_exit;
18 : 	}
19 : 	p_dtqcb = p_dtqcb_table[(uint_t)((dtqid) - TMIN_DTQID)];
20 : 
21 : 	t_lock_cpu();
22 : 	my_p_pcb = get_my_p_pcb();
23 : 	if (!(my_p_pcb->dspflg)) {
24 : 		ercd = E_CTX;
25 : 		t_unlock_cpu();
26 : 		goto error_exit;
27 : 	}
28 : 
29 :   retry:
30 : 	t_acquire_obj_lock(&GET_OBJLOCK(p_dtqcb));
31 : 	if (!queue_empty(&(p_dtqcb->swait_queue))) {
32 : 		/* 送信待ちタスクあり */
33 : 		p_tcb = (TCB *)(p_dtqcb->swait_queue.p_next);
34 : 		if ((p_pcb = t_acquire_nested_tsk_lock(p_tcb, &GET_OBJLOCK(p_dtqcb))) == NULL){
35 : 			goto retry;
36 : 		}
37 : 		queue_delete((QUEUE *) p_tcb);
38 : 		if (p_dtqcb->count > 0U) {
39 : 			dequeue_data(p_dtqcb, p_data);
40 : 			enqueue_data(p_dtqcb, p_tcb->winfo_obj.dtq.data);
41 : 		}
42 : 		else {
43 : 			*p_data = p_tcb->winfo_obj.dtq.data;
44 : 		}
45 : 		if (wait_complete(p_tcb)) {
46 : 			dspreq = dispatch_request(p_pcb);
47 : 		}
48 : 		release_nested_tsk_lock(p_pcb);
49 : 		release_obj_lock(&GET_OBJLOCK(p_dtqcb));
50 : 		if (dspreq) {
51 : 			dispatch();
52 : 		}
53 : 		ercd = E_OK;
54 : 	}
55 : 	else if (p_dtqcb->count > 0U) {
56 : 		/* バッファにデータがあり，送信待ちタスクなし */
57 : 		dequeue_data(p_dtqcb, p_data);
58 : 		release_obj_lock(&GET_OBJLOCK(p_dtqcb));
59 : 		ercd = E_OK;
60 : 	}
61 : 	else {
62 : 		/* バッファが空かつ送信待ちタスクなし */
63 : 		if ((my_p_pcb = t_acquire_nested_tsk_lock_self(&GET_OBJLOCK(p_dtqcb))) == NULL) {
64 : 			goto retry;
65 : 		}
66 : 		p_runtsk = my_p_pcb->p_runtsk;
67 : 		p_runtsk->tstat = (TS_WAITING | TS_WAIT_RDTQ);
68 : 		make_wait(p_runtsk);
69 : 		queue_insert_prev(&(p_dtqcb->rwait_queue), &(p_runtsk->task_queue));
70 : 		p_runtsk->p_wobjcb = (WOBJCB*)p_dtqcb;
71 : 		release_nested_tsk_lock(my_p_pcb);
72 : 		release_obj_lock(&GET_OBJLOCK(p_dtqcb));
73 : 		dispatch();
74 : 		ercd = p_runtsk->wercd;
75 : 		if (ercd == E_OK) {
76 : 			*p_data = p_runtsk->winfo_obj.dtq.data;
77 : 		}
78 : 	}
79 : 	t_unlock_cpu();
80 : 
81 :   error_exit:
82 : 	return(ercd);
83 : }


[B]dequeue_data

00 : void
01 : dequeue_data(DTQCB *p_dtqcb, intptr_t *p_data)
02 : {
03 : 	*p_data = (p_dtqcb->p_dtqinib->p_dtqmb + p_dtqcb->head)->data;
04 : 	p_dtqcb->count--;
05 : 	p_dtqcb->head++;
06 : 	if (p_dtqcb->head >= p_dtqcb->p_dtqinib->dtqcnt) {
07 : 		p_dtqcb->head = 0U;
08 : 	}
09 : }

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.3. 条件式
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(A1)  11 : !sense_tskctx_unl()
(A2)  15 : TMIN_DTQID <= (dtqid)
(A3)  15 : (dtqid) <= tmax_dtqid
(A4)  23 : !(my_p_pcb->dspflg)
(A5)  31 : !queue_empty(&(p_dtqcb->swait_queue))
(A6)  38 : p_dtqcb->count > 0U
(A7)  45 : wait_complete(p_tcb)
(A8)  50 : dspreq
(A9)  55 : p_dtqcb->count > 0U
(A10) 75 : ercd == E_OK

(B1) 06 : p_dtqcb->head >= p_dtqcb->p_dtqinib->dtqcnt

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.4. 条件網羅表
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

            (A1) (A2) (A3) (A4) (A5) (A6) (A7) (A8) (A9) (A10) (B1)
(a-1)        T    D    D    D    D    D    D    D    D    D     D
(a-2)        T    D    D    D    D    D    D    D    D    D     D
(a-3)        F    T    T    T    D    D    D    D    D    D     D
(a-4)        F    T    T    T    D    D    D    D    D    D     D
(b-1)        F    F   D/T   D    D    D    D    D    D    D     D
(b-2)        F    T    F    D    D    D    D    D    D    D     D
(c)          F    T    T    F    F    D    D    D    F    F     D
(d)          F    T    T    F    F    D    D    D    F    F     D
(e)          F    T    T    F    F    D    D    D    F    T     D
(f-1-1)      F    T    T    F    F    D    D    D    T    D     F
(f-1-2)      F    T    T    F    F    D    D    D    T    D     F
(f-2-1-1)    F    T    T    F    T    T    T    T    D    D     F
(f-2-1-2)    F    T    T    F    T    T    F    F    D    D     F
(f-2-1-3)    F    T    T    F    T    T    F    F    D    D     F
(f-2-1-4)    F    T    T    F    T    T    F    F    D    D     F
(f-2-2-1)    F    T    T    F    T    T    T    T    D    D     F
(f-2-2-2)    F    T    T    F    T    T    F    F    D    D     F
(f-2-2-3)    F    T    T    F    T    T    F    F    D    D     F
(f-2-2-4)    F    T    T    F    T    T    F    F    D    D     F
(g-1-1-1)    F    T    T    F    F    D    D    D    F    D     D
(g-1-1-2)    F    T    T    F    F    D    D    D    F    D     D
(g-1-1-3)    F    T    T    F    F    D    D    D    F    D     D
(g-1-1-4)    F    T    T    F    F    D    D    D    F    D     D
(g-1-2-1)    F    T    T    F    F    D    D    D    F    D     D
(g-1-2-2)    F    T    T    F    F    D    D    D    F    D     D
(g-1-2-3)    F    T    T    F    F    D    D    D    F    D     D
(g-1-2-4)    F    T    T    F    F    D    D    D    F    D     D
(g-2-1-1)    F    T    T    F    T    F    T    T    D    D     D
(g-2-1-2)    F    T    T    F    T    F    F    F    D    D     D
(g-2-1-3)    F    T    T    F    T    F    F    F    D    D     D
(g-2-1-4)    F    T    T    F    T    F    F    F    D    D     D
(g-2-2-1)    F    T    T    F    T    F    T    T    D    D     D
(g-2-2-2)    F    T    T    F    T    F    F    F    D    D     D
(g-2-2-3)    F    T    T    F    T    F    F    F    D    D     D
(g-2-2-4)    F    T    T    F    T    F    F    F    D    D     D
(W_a)        F    T    T    F    F    D    D    D    T    D     T
(F-a)        T    D    D    D    D    D    D    D    D    D     D
(F-b)        F    T    T    F    F    D    D    D    F    F     D
(F-c)        F    T    T    F    F    D    D    D    F    F     D
(F-d)        F    T    T    F    F    D    D    D    F    T     D
(F-e-1-1-1)  F    T    T    F    T    T    T    F    D    D     F
(F-e-1-1-2)  F    T    T    F    T    T    F    F    D    D     F
(F-e-1-1-3)  F    T    T    F    T    T    F    F    D    D     F
(F-e-1-1-4)  F    T    T    F    T    T    T    F    D    D     F
(F-e-1-1-5)  F    T    T    F    T    T    T    F    D    D     F
(F-e-1-1-6)  F    T    T    F    T    T    T    F    D    D     F
(F-e-1-2)    F    T    T    F    T    T    F    F    D    D     F
(F-e-1-3)    F    T    T    F    T    T    F    F    D    D     F
(F-e-1-4)    F    T    T    F    T    T    F    F    D    D     F
(F-e-1-5-1)  F    T    T    F    T    T    T    F    D    D     F
(F-e-1-5-2)  F    T    T    F    T    T    T    F    D    D     F
(F-e-1-5-3)  F    T    T    F    T    T    F    F    D    D     F
(F-e-2-1-1)  F    T    T    F    T    T    T    F    D    D     F
(F-e-2-1-2)  F    T    T    F    T    T    F    F    D    D     F
(F-e-2-1-3)  F    T    T    F    T    T    F    F    D    D     F
(F-e-2-1-4)  F    T    T    F    T    T    T    F    D    D     F
(F-e-2-1-5)  F    T    T    F    T    T    T    F    D    D     F
(F-e-2-1-6)  F    T    T    F    T    T    T    F    D    D     F
(F-e-2-2)    F    T    T    F    T    T    F    F    D    D     F
(F-e-2-3)    F    T    T    F    T    T    F    F    D    D     F
(F-e-2-4)    F    T    T    F    T    T    F    F    D    D     F
(F-e-2-5-1)  F    T    T    F    T    T    T    F    D    D     F
(F-e-2-5-2)  F    T    T    F    T    T    T    F    D    D     F
(F-e-2-5-3)  F    T    T    F    T    T    F    F    D    D     F
(F-f-1-1-1)  F    T    T    F    T    F    T    F    D    D     D
(F-f-1-1-2)  F    T    T    F    T    F    F    F    D    D     D
(F-f-1-1-3)  F    T    T    F    T    F    F    F    D    D     D
(F-f-1-1-4)  F    T    T    F    T    F    T    F    D    D     D
(F-f-1-1-5)  F    T    T    F    T    F    T    F    D    D     D
(F-f-1-1-6)  F    T    T    F    T    F    T    F    D    D     D
(F-f-1-2)    F    T    T    F    T    F    F    F    D    D     D
(F-f-1-3)    F    T    T    F    T    F    F    F    D    D     D
(F-f-1-4)    F    T    T    F    T    F    F    F    D    D     D
(F-f-1-5-1)  F    T    T    F    T    F    T    F    D    D     D
(F-f-1-5-2)  F    T    T    F    T    F    T    F    D    D     D
(F-f-1-5-3)  F    T    T    F    T    F    F    F    D    D     D
(F-f-2-1-1)  F    T    T    F    T    F    T    F    D    D     D
(F-f-2-1-2)  F    T    T    F    T    F    F    F    D    D     D
(F-f-2-1-3)  F    T    T    F    T    F    F    F    D    D     D
(F-f-2-1-4)  F    T    T    F    T    F    T    F    D    D     D
(F-f-2-1-5)  F    T    T    F    T    F    T    F    D    D     D
(F-f-2-1-6)  F    T    T    F    T    F    T    F    D    D     D
(F-f-2-2)    F    T    T    F    T    F    F    F    D    D     D
(F-f-2-3)    F    T    T    F    T    F    F    F    D    D     D
(F-f-2-4)    F    T    T    F    T    F    F    F    D    D     D
(F-f-2-5-1)  F    T    T    F    T    F    T    F    D    D     D
(F-f-2-5-2)  F    T    T    F    T    F    T    F    D    D     D
(F-f-2-5-3)  F    T    T    F    T    F    F    F    D    D     D
(F-g-1-1)    F    T    T    F    F    D    D    D    F    D     D
(F-g-1-2)    F    T    T    F    F    D    D    D    F    D     D
(F-g-1-3)    F    T    T    F    F    D    D    D    F    D     D
(F-g-2-1)    F    T    T    F    F    D    D    D    F    D     D
(F-g-2-2)    F    T    T    F    F    D    D    D    F    D     D
(F-g-2-3)    F    T    T    F    F    D    D    D    F    D     D
-------------------------------------------------------------------
網羅         O    O    O    O    O    O    O    O    O    O     O


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

3. ホワイトボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
必要なし．



以上．
