
	ini_dtq テストシート

----------------------------------------------------------------------
 TTSP
     TOPPERS Test Suite Package

 Copyright (C) 2009-2011 by Center for Embedded Computing Systems
             Graduate School of Information Science, Nagoya Univ., JAPAN
 Copyright (C) 2009-2011 by Digital Craft Inc.
 Copyright (C) 2009-2011 by NEC Communication Systems, Ltd.
 Copyright (C) 2009-2011 by FUJISOFT INCORPORATED
 Copyright (C) 2009-2010 by Mitsuhiro Matsuura

 上記著作権者は，以下の (1)〜(3) の条件を満たす場合に限り，本ドキュメ
 ント（本ドキュメントを改変したものを含む．以下同じ）を使用・複製・改
 変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 (1) 本ドキュメントを利用する場合には，上記の著作権表示，この利用条件
     および下記の無保証規定が，そのままの形でドキュメント中に含まれて
     いること．
 (2) 本ドキュメントを改変する場合には，ドキュメントを改変した旨の記述
     を，改変後のドキュメント中に含めること．ただし，改変後のドキュメ
     ントが，TOPPERSプロジェクト指定の開発成果物である場合には，この限
     りではない．
 (3) 本ドキュメントの利用により直接的または間接的に生じるいかなる損害
     からも，上記著作権者およびTOPPERSプロジェクトを免責すること．また，
     本ドキュメントのユーザまたはエンドユーザからのいかなる理由に基づ
     く請求からも，上記著作権者およびTOPPERSプロジェクトを免責すること．

 本ドキュメントは，無保証で提供されているものである．上記著作権者およ
 びTOPPERSプロジェクトは，本ドキュメントに関して，特定の使用目的に対す
 る適合性も含めて，いかなる保証も行わない．また，本ドキュメントの利用
 により直接的または間接的に生じたいかなる損害に関しても，その責任を負
 わない．

 $Id: ini_dtq.txt 2 2012-05-09 02:23:52Z nces-shigihara $
----------------------------------------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

0. API仕様

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

ini_dtq		データキューの再初期化〔T〕

【C言語API】
	ER ercd = ini_dtq(ID dtqid)

【パラメータ】
	ID			dtqid		対象データキューのID番号

【リターンパラメータ】
	ER			ercd		正常終了（E_OK）またはエラーコード

【エラーコード】
	E_CTX			コンテキストエラー（非タスクコンテキストからの呼出
					し，CPUロック状態からの呼出し）
	E_ID			不正ID番号（dtqidが不正）
	E_NOEXS〔D〕	オブジェクト未登録（対象データキューが未登録）
	E_OACV〔P〕		オブジェクトアクセス違反（対象データキューに対する
					管理操作が許可されていない）

【機能】

dtqidで指定したデータキュー（対象データキュー）を再初期化する．具体的な
振舞いは以下の通り．

対象データキューのデータキュー管理領域は，格納されているデータがない状
態に初期化される．また，対象データキューの送信待ち行列と受信待ち行列に
つながれたタスクは，それぞれの待ち行列の先頭のタスクから順に待ち解除さ
れる．待ち解除されたタスクには，待ち状態となったサービスコールから
E_DLTエラーが返る．

【補足説明】

送信待ち行列と受信待ち行列の両方にタスクがつながれていることはないため，
別の待ち行列で待っていたタスクの間の待ち解除の順序は，規定する必要がな
い．

【使用上の注意】

ini_dtqにより複数のタスクが待ち解除される場合，サービスコールの処理時間
およびカーネル内での割込み禁止時間が，待ち解除されるタスクの数に比例し
て長くなる．特に，多くのタスクが待ち解除される場合，カーネル内での割込
み禁止時間が長くなるため，注意が必要である．

データキューを再初期化した場合に，アプリケーションとの整合性を保つのは，
アプリケーションの責任である．

【μITRON4.0仕様との関係】

μITRON4.0仕様に定義されていないサービスコールである．


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

１．仕様ベースのブラックボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.1. エラー条件のテストケース(FMP)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.2. 正常条件のテストケース(FMP)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

2. ソースコードの条件網羅確認

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.1. ソースコード
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ER
ini_dtq(ID dtqid)
{
	DTQCB	*p_dtqcb;
	ER		ercd;
	bool_t	dspreq;

	LOG_INI_DTQ_ENTER(dtqid);
	CHECK_TSKCTX_UNL();
	CHECK_DTQID(dtqid);
	p_dtqcb = get_dtqcb(dtqid);

	t_lock_cpu();
	t_acquire_obj_lock(&GET_OBJLOCK(p_dtqcb));
	dspreq = init_wait_queue(&(p_dtqcb->swait_queue));
	if (init_wait_queue(&(p_dtqcb->rwait_queue))){
		dspreq = true;
	}
	p_dtqcb->count = 0U;
	p_dtqcb->head = 0U;
	p_dtqcb->tail = 0U;
	ercd = E_OK;
	release_obj_lock(&GET_OBJLOCK(p_dtqcb));
	if (dspreq) {
		dispatch();
	}
	t_unlock_cpu();

  error_exit:
	LOG_INI_DTQ_LEAVE(ercd);
	return(ercd);
}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.2. マクロを展開したAPIと呼び出す内部関数
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
[A] ini_dtq

00 : ER
01 : ini_dtq(ID dtqid)
02 : {
03 : 	DTQCB	*p_dtqcb;
04 : 	ER		ercd;
05 : 	bool_t	dspreq;	
06 : 			
07 : 	if (!sense_intctx_unl()) {
08 : 		ercd = E_CTX;
09 : 		goto error_exit;
10 : 	}
11 : 	if (!(TMIN_DTQID <= (dtqid) && (dtqid) <= tmax_dtqid)) {
12 : 		ercd = E_ID;
13 : 		goto error_exit;
14 : 	}
15 : 
16 : 	p_dtqcb = p_dtqcb_table[(uint_t)((dtqid) - TMIN_DTQID)];
17 : 
18 : 	t_lock_cpu();
19 : 	t_acquire_obj_lock(&GET_OBJLOCK(p_dtqcb));
20 : 	dspreq = init_wait_queue(&(p_dtqcb->swait_queue));
21 : 	if (init_wait_queue(&(p_dtqcb->rwait_queue))){
22 : 		dspreq = true;
23 : 	}
24 : 	p_dtqcb->count = 0U;
25 : 	p_dtqcb->head = 0U;
26 : 	p_dtqcb->tail = 0U;
27 : 	ercd = E_OK;
28 : 	release_obj_lock(&GET_OBJLOCK(p_dtqcb));
29 : 	if (dspreq) {
30 : 		dispatch();
31 : 	}
32 : 	t_unlock_cpu();
33 : 
34 :  error_exit:
35 : 	return(ercd);
36 : }

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.3. 条件式
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(A1) 07 : !sense_intctx_unl()
(A2) 11 : TMIN_DTQID <= (dtqid)
(A3) 11 : (dtqid) <= tmax_dtqid
(A4) 21 : init_wait_queue(&(p_dtqcb->rwait_queue))
(A5) 29 : dspreq

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.4. 条件網羅表
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

            (A1) (A2) (A3) (A4) (A5)
(a-1)        T    D    D    D    D
(a-2)        T    D    D    D    D
(b-1)        F    F   D/T   D    D
(b-2)        F    T    F    D    D
(c-1-1-1)    F    T    T    F    T
(c-1-1-2)    F    T    T    F    F
(c-1-1-3)    F    T    T    F    F
(c-1-2)      F    T    T    F    F
(c-1-3)      F    T    T    F    F
(c-1-4)      F    T    T    F    F
(c-2-1)      F    T    T    F    F
(c-2-2)      F    T    T    F    T
(d-1-1-1)    F    T    T    T    T
(d-1-1-2)    F    T    T    F    F
(d-1-1-3)    F    T    T    F    F
(d-1-2)      F    T    T    F    F
(d-1-3)      F    T    T    F    F
(d-1-4)      F    T    T    F    F
(d-2-1)      F    T    T    F    F
(d-2-2)      F    T    T    T    T
(e-1)        F    T    T    F    F
(e-2)        F    T    T    F    F
(F-a)        T    D    D    D    D
(F-b-1-1-1)  F    T    T    F    F
(F-b-1-1-2)  F    T    T    F    F
(F-b-1-1-3)  F    T    T    F    F
(F-b-1-1-4)  F    T    T    F    F
(F-b-1-1-5)  F    T    T    F    F
(F-b-1-1-6)  F    T    T    F    F
(F-b-1-2)    F    T    T    F    F
(F-b-1-3)    F    T    T    F    F
(F-b-1-4)    F    T    T    F    F
(F-b-1-5-1)  F    T    T    F    F
(F-b-1-5-2)  F    T    T    F    F
(F-b-1-5-3)  F    T    T    F    F
(F-b-2-1)    F    T    T    F    F
(F-b-2-2)    F    T    T    F    F
(F-b-2-3)    F    T    T    F    F
(F-b-2-4)    F    T    T    F    F
(F-c-1-1-1)  F    T    T    F    F
(F-c-1-1-2)  F    T    T    F    F
(F-c-1-1-3)  F    T    T    F    F
(F-c-1-1-4)  F    T    T    F    F
(F-c-1-1-5)  F    T    T    F    F
(F-c-1-1-6)  F    T    T    F    F
(F-c-1-2)    F    T    T    F    F
(F-c-1-3)    F    T    T    F    F
(F-c-1-4)    F    T    T    F    F
(F-c-1-5-1)  F    T    T    F    F
(F-c-1-5-2)  F    T    T    F    F
(F-c-1-5-3)  F    T    T    F    F
(F-c-2-1)    F    T    T    F    F
(F-c-2-2)    F    T    T    F    F
(F-c-2-3)    F    T    T    F    F
(F-c-2-4)    F    T    T    F    F
(F-d)        F    T    T    F    T
------------------------------------
網羅         O    O    O    O    O


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

3. ホワイトボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
必要なし．



以上．
