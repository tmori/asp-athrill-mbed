
	xsns_dpn テストシート

----------------------------------------------------------------------
 TTSP
     TOPPERS Test Suite Package

 Copyright (C) 2009-2011 by Center for Embedded Computing Systems
             Graduate School of Information Science, Nagoya Univ., JAPAN
 Copyright (C) 2009-2011 by Digital Craft Inc.
 Copyright (C) 2009-2011 by NEC Communication Systems, Ltd.
 Copyright (C) 2009-2011 by FUJISOFT INCORPORATED
 Copyright (C) 2009-2010 by Mitsuhiro Matsuura

 上記著作権者は，以下の (1)〜(3) の条件を満たす場合に限り，本ドキュメ
 ント（本ドキュメントを改変したものを含む．以下同じ）を使用・複製・改
 変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 (1) 本ドキュメントを利用する場合には，上記の著作権表示，この利用条件
     および下記の無保証規定が，そのままの形でドキュメント中に含まれて
     いること．
 (2) 本ドキュメントを改変する場合には，ドキュメントを改変した旨の記述
     を，改変後のドキュメント中に含めること．ただし，改変後のドキュメ
     ントが，TOPPERSプロジェクト指定の開発成果物である場合には，この限
     りではない．
 (3) 本ドキュメントの利用により直接的または間接的に生じるいかなる損害
     からも，上記著作権者およびTOPPERSプロジェクトを免責すること．また，
     本ドキュメントのユーザまたはエンドユーザからのいかなる理由に基づ
     く請求からも，上記著作権者およびTOPPERSプロジェクトを免責すること．

 本ドキュメントは，無保証で提供されているものである．上記著作権者およ
 びTOPPERSプロジェクトは，本ドキュメントに関して，特定の使用目的に対す
 る適合性も含めて，いかなる保証も行わない．また，本ドキュメントの利用
 により直接的または間接的に生じたいかなる損害に関しても，その責任を負
 わない．

 $Id: xsns_dpn.txt 2 2012-05-09 02:23:52Z nces-shigihara $
----------------------------------------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

0. API仕様

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

xsns_dpn	CPU例外発生時のディスパッチ保留状態の参照〔TI〕

【C言語API】
	bool_t stat = xsns_dpn(void *p_excinf)

【パラメータ】
	void *		p_excinf	CPU例外の情報を記憶しているメモリ領域の先頭
							番地

【リターンパラメータ】
	bool_t		state		ディスパッチ保留状態

【機能】

CPU例外発生時のディスパッチ保留状態を参照する．具体的な振舞いは以下の通
り．

実行中のCPU例外ハンドラの起動原因となったCPU例外が，カーネル管理外の
CPU例外でなく，タスクコンテキストで発生し，そのタスクがディスパッチ保留
状態でなかった場合にfalse，そうでない場合にtrueが返る．

保護機能対応のカーネルにおいて，xsns_dpnをタスクコンテキストから呼び出
した場合には，trueが返る．

p_excinfには，CPU例外ハンドラに渡されるp_excinfパラメータをそのまま渡す．

【使用方法】

xsns_dpnは，CPU例外ハンドラの中で，どのようなリカバリ処理が可能かを判別
したい場合に使用する．xsns_dpnがfalseを返した場合（trueを返した場合では
ないので注意すること），非タスクコンテキスト用のサービスコールを用いて
CPU例外を起こしたタスクよりも優先度の高いタスクを起動または待ち解除し，
そのタスクでリカバリ処理を行うことができる．ただし，CPU例外を起こしたタ
スクが最高優先度の場合には，この方法でリカバリ処理を行うことはできない．

【使用上の注意】

xsns_dpnは，E_CTXエラーを返すことがないために〔TI〕となっているが，CPU
例外ハンドラから呼び出すためのものである．CPU例外ハンドラ以外から呼び出
した場合や，p_excinfに正しい値を渡さなかった場合，xsns_dpnが返す値は意
味を持たない．

どちらの条件でtrueが返るか間違いやすいので注意すること．

【μITRON4.0仕様との関係】

μITRON4.0仕様に定義されていないサービスコールである．

【仕様決定の理由】

保護機能対応のカーネルにおいては，xsns_dpnをユーザドメインから呼び出す
ことは禁止すべきである．ユーザドメインの実行中は，必ずタスクコンテキス
トであるため，xsns_dpnをタスクコンテキストから呼び出した場合に必ずtrue
を返す仕様とすることで，xsns_dpnをユーザドメインから呼び出すことを実質
的に禁止している．


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

1. 仕様ベースのブラックボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.1. エラー条件のテストケース(FMP)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.2. 正常条件のテストケース(FMP)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━



■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

2. ソースコードの条件網羅確認

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.1. ソースコード
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
bool_t
xsns_dpn(void *p_excinf)
{
	bool_t	state;
	PCB		*my_p_pcb;

	LOG_XSNS_DPN_ENTER(p_excinf);
	my_p_pcb = get_my_p_pcb();
	state = (exc_sense_intmask(p_excinf) && !(my_p_pcb->disdsp))
	                                              ? false : true;
	LOG_XSNS_DPN_LEAVE(state);
	return(state);
}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.2. マクロを展開したAPIと呼び出す内部関数
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
[A] xsns_pdn

00 : bool_t
01 : xsns_dpn(void *p_excinf)
02 : {
03 : 	bool_t	state;
04 : 	PCB		*my_p_pcb;
05 : 
06 : 	my_p_pcb = get_my_p_pcb();
07 : 	state = (exc_sense_intmask(p_excinf) && !(my_p_pcb->disdsp))
08 : 	                                              ? false : true;
09 : 	return(state);
10 : }

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.3. 条件式
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(A1) 07 : (exc_sense_intmask(p_excinf)
(A2) 07 : !(my_p_pcb->disdsp)

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.4. 条件網羅表
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

        (A1) (A2)
(a)      T    T
(b-1)    F   D/T
(b-2)    F   D/T
(b-3)    F   D/T
(b-4)    T    F
(F-a)    T    T
(F-b-1)  F   D/T
(F-b-2)  F   D/T
(F-b-3)  F   D/T
(F-b-4)  F   D/T
(F-b-5)  T    F
-----------------
網羅     O    O


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

3. ホワイトボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
必要なし．



以上．
