
	sns_dpn テストシート

----------------------------------------------------------------------
 TTSP
     TOPPERS Test Suite Package

 Copyright (C) 2009-2011 by Center for Embedded Computing Systems
             Graduate School of Information Science, Nagoya Univ., JAPAN
 Copyright (C) 2009-2011 by Digital Craft Inc.
 Copyright (C) 2009-2011 by NEC Communication Systems, Ltd.
 Copyright (C) 2009-2011 by FUJISOFT INCORPORATED
 Copyright (C) 2009-2010 by Mitsuhiro Matsuura

 上記著作権者は，以下の (1)〜(3) の条件を満たす場合に限り，本ドキュメ
 ント（本ドキュメントを改変したものを含む．以下同じ）を使用・複製・改
 変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 (1) 本ドキュメントを利用する場合には，上記の著作権表示，この利用条件
     および下記の無保証規定が，そのままの形でドキュメント中に含まれて
     いること．
 (2) 本ドキュメントを改変する場合には，ドキュメントを改変した旨の記述
     を，改変後のドキュメント中に含めること．ただし，改変後のドキュメ
     ントが，TOPPERSプロジェクト指定の開発成果物である場合には，この限
     りではない．
 (3) 本ドキュメントの利用により直接的または間接的に生じるいかなる損害
     からも，上記著作権者およびTOPPERSプロジェクトを免責すること．また，
     本ドキュメントのユーザまたはエンドユーザからのいかなる理由に基づ
     く請求からも，上記著作権者およびTOPPERSプロジェクトを免責すること．

 本ドキュメントは，無保証で提供されているものである．上記著作権者およ
 びTOPPERSプロジェクトは，本ドキュメントに関して，特定の使用目的に対す
 る適合性も含めて，いかなる保証も行わない．また，本ドキュメントの利用
 により直接的または間接的に生じたいかなる損害に関しても，その責任を負
 わない．

 $Id: sns_dpn.txt 2 2012-05-09 02:23:52Z nces-shigihara $
----------------------------------------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

0. API仕様

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

sns_dpn		ディスパッチ保留状態の参照〔TI〕

【C言語API】
	bool_t state = sns_dpn()

【パラメータ】
	なし

【リターンパラメータ】
	bool_t	state		ディスパッチ保留状態

【機能】

ディスパッチ保留状態であるか否かを参照する．具体的な振舞いは以下の通り．

sns_dpnをディスパッチ保留状態で呼び出した場合にはtrue，ディスパッチ保留
状態でない状態で呼び出した場合にはfalseが返る．


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

1. 仕様ベースのブラックボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.1. エラー条件のテストケース(FMP)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
該当なし

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.2. 正常条件のテストケース(FMP)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(F-a) 他プロセッサがディスパッチ保留状態ではない，自プロセッサがディス
      パッチ保留状態で呼び出す場合，trueが返ること．

      (F-a-1) 非タスクコンテキストの場合．(ASP:a-1，EX_CARE_STATE)

      (F-a-2) CPUロック状態の場合．(ASP:a-2，EX_CARE_STATE)

      (F-a-3) スピンロック取得中の場合．(ASP:a，EX_NEW_STATE)

      (F-a-4) 割込み優先度マスクが全解除でない場合．
              (ASP:a-3，EX_CARE_STATE)

      (F-a-5) ディスパッチ禁止状態の場合．(ASP:a-4，EX_CARE_STATE)

(F-b) 他プロセッサがディスパッチ保留状態で，自プロセッサがディスパッチ
      保留状態でない状態で呼び出す場合，falseが返ること．
      (ASP:b，EX_CARE_STATE)


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

2. ソースコードの条件網羅確認

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.1. ソースコード
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
bool_t
sns_dpn(void)
{
	bool_t	state;
	bool_t	locked;

	LOG_SNS_DPN_ENTER();

	/*
	 *  PCBへアクセスするためCPUロック状態とする
	 */
	locked = t_sense_lock();
	if (!locked) {
		t_lock_cpu();
	}
	state = (sense_context() || locked || !((get_my_p_pcb())->dspflg)) ? true : false;
	if (!locked) {
		t_unlock_cpu();
	}

	LOG_SNS_DPN_LEAVE(state);
	return(state);
}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.2. マクロを展開したAPIと呼び出す内部関数
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
[A] sns_dpn

00 : bool_t
01 : sns_dpn(void)
02 : {
03 : 	bool_t	state;
04 : 	bool_t	locked;
05 : 
06 : 	/*
07 : 	 *  PCBへアクセスするためCPUロック状態とする
08 : 	 */
09 : 	locked = t_sense_lock();
10 : 	if (!locked) {
11 : 		t_lock_cpu();
12 : 	}
13 : 	state = (sense_context() || locked || !((get_my_p_pcb())->dspflg)) ? true : false;
14 : 	if (!locked) {
15 : 		t_unlock_cpu();
16 : 	}
17 : 
18 : 	return(state);
19 : }

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.3. 条件式
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(A1) 10 : !locked
(A2) 13 : sense_context()
(A3) 13 : locked
(A4) 13 : !((get_my_p_pcb())->dspflg)
(A5) 14 : !locked

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.4. 条件網羅表
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

         (A1) (A2) (A3) (A4) (A5)
(a-1)     T    T   D/F  D/F   T
(a-2)     F    F    T   D/F   F
(a-3)     T    F    F    T    T
(a-4)     T    F    F    T    T
(b)       T    F    F    F    T
(F-a-1)   T    T   D/F  D/F   T
(F-a-2)   F    F    T   D/F   F
(F-a-3)   F    F    T   D/F   F
(F-a-4)   T    F    F    T    T
(F-a-5)   T    F    F    T    T
(F-b)     T    F    F    F    T
---------------------------------
網羅      O    O    O    O    O

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

3. ホワイトボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
必要なし．



以上．
