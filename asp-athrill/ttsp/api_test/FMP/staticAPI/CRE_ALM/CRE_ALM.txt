
	CRE_ALM テストシート

----------------------------------------------------------------------
 TTSP
     TOPPERS Test Suite Package

 Copyright (C) 2009-2011 by Center for Embedded Computing Systems
             Graduate School of Information Science, Nagoya Univ., JAPAN
 Copyright (C) 2009-2011 by Digital Craft Inc.
 Copyright (C) 2009-2011 by NEC Communication Systems, Ltd.
 Copyright (C) 2009-2011 by FUJISOFT INCORPORATED
 Copyright (C) 2009-2010 by Mitsuhiro Matsuura

 上記著作権者は，以下の (1)〜(3) の条件を満たす場合に限り，本ドキュメ
 ント（本ドキュメントを改変したものを含む．以下同じ）を使用・複製・改
 変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 (1) 本ドキュメントを利用する場合には，上記の著作権表示，この利用条件
     および下記の無保証規定が，そのままの形でドキュメント中に含まれて
     いること．
 (2) 本ドキュメントを改変する場合には，ドキュメントを改変した旨の記述
     を，改変後のドキュメント中に含めること．ただし，改変後のドキュメ
     ントが，TOPPERSプロジェクト指定の開発成果物である場合には，この限
     りではない．
 (3) 本ドキュメントの利用により直接的または間接的に生じるいかなる損害
     からも，上記著作権者およびTOPPERSプロジェクトを免責すること．また，
     本ドキュメントのユーザまたはエンドユーザからのいかなる理由に基づ
     く請求からも，上記著作権者およびTOPPERSプロジェクトを免責すること．

 本ドキュメントは，無保証で提供されているものである．上記著作権者およ
 びTOPPERSプロジェクトは，本ドキュメントに関して，特定の使用目的に対す
 る適合性も含めて，いかなる保証も行わない．また，本ドキュメントの利用
 により直接的または間接的に生じたいかなる損害に関しても，その責任を負
 わない．

 $Id: CRE_ALM.txt 2 2012-05-09 02:23:52Z nces-shigihara $
----------------------------------------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

0. API仕様

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

CRE_ALM		アラームハンドラの生成〔S〕
acre_alm	アラームハンドラの生成〔TD〕

【静的API】
	CRE_ALM(ID almid, { ATR almatr, intptr_t exinf, ALMHDR almhdr })

【C言語API】
	ER_ID almid = acre_alm(const T_CALM *pk_calm)

【パラメータ】
	ID			almid		生成するアラームハンドラのID番号（CRE_ALM
							の場合）
	T_CALM *	pk_calm		アラームハンドラの生成情報を入れたパケット
							へのポインタ（静的APIを除く）

　＊アラームハンドラの生成情報（パケットの内容）
	ATR			almatr		アラームハンドラ属性
	intptr_t	exinf		アラームハンドラの拡張情報
	ALMHDR		almhdr		アラームハンドラの先頭番地

【リターンパラメータ】
	ER_ID		almid		生成されたアラームハンドラのID番号（正の値）
							またはエラーコード

【エラーコード】
	E_CTX〔s〕		コンテキストエラー（非タスクコンテキストからの呼出
					し，CPUロック状態からの呼出し）
	E_RSATR			予約属性（almatrが不正または使用できない，属する保
					護ドメインかクラスが不正）
	E_PAR			パラメータエラー（almhdrが不正）
	E_OACV〔sP〕	オブジェクトアクセス違反（システム状態に対する管理
					操作が許可されていない）
	E_MACV〔sP〕	メモリアクセス違反（pk_calmが指すメモリ領域への読出
					しアクセスが許可されていない）
	E_NOID〔sD〕	ID番号不足（割り付けられるアラームハンドラIDがない）
	E_OBJ			オブジェクト状態エラー（almidで指定したアラームハン
					ドラが登録済み：CRE_ALMの場合）

【機能】

各パラメータで指定したアラームハンドラ生成情報に従って，アラームハンド
ラを生成する．対象アラームハンドラは，動作していない状態に初期化される．

静的APIにおいては，almidはオブジェクト識別名，almatrは整数定数式パラメー
タ，exinfとalmhdrは一般定数式パラメータである．

保護機能対応カーネルにおいて，CRE_ALMは，カーネルドメインの囲みの中に記
述しなければならない．そうでない場合には，E_RSATRエラーとなる．また，
acre_almで，生成するアラームハンドラが属する保護ドメインとしてカーネル
ドメイン以外を指定した場合には，E_RSATRエラーとなる．

マルチプロセッサ対応カーネルでグローバルタイマ方式を用いている場合で，
生成するアラームハンドラの属するクラスの割付け可能プロセッサが，システ
ム時刻管理プロセッサのみでない場合には，E_RSATRエラーとなる．

【TOPPERS/ASPカーネルにおける規定】

ASPカーネルでは，CRE_ALMのみをサポートする．ただし，動的生成機能拡張パッ
ケージでは，acre_almもサポートする．

【TOPPERS/FMPカーネルにおける規定】

FMPカーネルでは，CRE_ALMのみをサポートする．

【μITRON4.0仕様との関係】

almhdrのデータ型をALMHDRに変更した．


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

1. 仕様ベースのブラックボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.1. エラー条件のテストケース(FMP)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(F-a) 対象アラームハンドラを属させるクラスの囲みの外に記述した場合，
      E_RSATRエラーが返ること．(ASP:a，EX_NEW_STATE)

(F-b) グローバルタイマ方式を用いている場合で，生成するアラームハンドラ
      の属するクラスの割付け可能プロセッサが，システム時刻管理プロセッ
      サのみでない場合には，E_RSATRが返ること．(ASP:a，EX_NEW_STATE)

【備考】
・(F-b)はグローバルタイマ方式のみ実施する．

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.2. 正常条件のテストケース(FMP)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(F-c) スレーブプロセッサで各パラメータで指定したアラームハンドラ生成情
      報に従って，アラームハンドラが生成されること．対象アラームハンド
      ラは，動作していない状態に初期化されること．(ASP:b，EX_OTHER_PRC)


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

2. ソースコードの条件網羅確認

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.1. ソースコード
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
[A] kernel.tf

00 : $ 
01 : $  アラームハンドラ
02 : $ 
03 : /*$NL$
04 : $SPC$*  Alarm Handler Functions$NL$
05 : $SPC$*/$NL$
06 : $NL$
07 : 
08 : $ クラス関連のチェック
09 : $FOREACH almid ALM.ID_LIST$
10 : $	// クラスの囲みに入れられているかのチェック
11 : 	$IF !LENGTH(ALM.CLASS[almid])$
12 : 		$ERROR ALM.TEXT_LINE[almid]$E_RSATR: $FORMAT(_("illegal class id of `%1%\' in %2%"), almid, "CRE_ALM")$$END$
13 : 	$END$
14 : 
15 : $	// グローバルタイマ方式の場合のチェック
16 : 	$IF TOPPERS_SYSTIM_GLOBAL$
17 : $		// 初期割付けプロセッサがシステム時刻管理プロセッサ以外ならエラー
18 : 		$IF CLASS_AFFINITY_INI[ALM.CLASS[almid]] != TOPPERS_SYSTIM_PRCID$
19 : 			$ERROR ALM.TEXT_LINE[almid]$E_RSATR: $FORMAT(_("illegal class id(initial affinity) of `%1%\' in %2%"), almid, "CRE_ALM")$$END$
20 : 		$END$
21 : $		// 割付け可能プロセッサにをシステム時刻管理プロセッサ以外が含まれていればエラー
22 : 		$IF (CLASS_AFFINITY_MASK[ALM.CLASS[almid]] & ~(1 << (TOPPERS_SYSTIM_PRCID - 1))) != 0$
23 : 			$ERROR ALM.TEXT_LINE[almid]$E_RSATR: $FORMAT(_("illegal class id(affinity) of `%1%\' in %2%"), almid, "CRE_ALM")$$END$
24 : 		$END$
25 : 	$END$
26 : 
27 : $END$
28 : 
29 : $ アラームハンドラID番号の最大値
30 : const ID _kernel_tmax_almid = (TMIN_ALMID + TNUM_ALMID - 1);$NL$
31 : $NL$
32 : 
33 : $ アラームハンドラ初期化ブロックの生成
34 : $IF LENGTH(ALM.ID_LIST)$
35 : 	const ALMINIB _kernel_alminib_table[TNUM_ALMID] = {$NL$
36 : 	$JOINEACH almid ALM.ID_LIST ",\n"$
37 : $		// almatrが（TA_NULL）でない場合（E_RSATR）
38 : 		$IF ALM.ALMATR[almid] != 0$
39 : 			$ERROR ALM.TEXT_LINE[almid]$E_RSATR: $FORMAT(_("illegal %1% `%2%\' of `%3%\' in %4%"), "almatr", ALM.ALMATR[almid], almid, "CRE_ALM")$$END$
40 : 		$END$
41 : 
42 : $		// アラームハンドラ初期化ブロック
43 : 		$IF TOPPERS_SYSTIM_LOCAL$
44 : 			$TAB${ ($ALM.ALMATR[almid]$), (intptr_t)($ALM.EXINF[almid]$), ($ALM.ALMHDR[almid]$), $CLASS_AFFINITY_INI[ALM.CLASS[almid]]$, (uint_t)($CLASS_AFFINITY_MASK[ALM.CLASS[almid]]$) }
45 : 		$ELSE$
46 : 			$TAB${ ($ALM.ALMATR[almid]$), (intptr_t)($ALM.EXINF[almid]$), ($ALM.ALMHDR[almid]$) }
47 : 		$END$
48 : 	$END$$NL$
49 : 	};$NL$
50 : 	$NL$
51 : 
52 : $	// アラームハンドラ管理ブロック
53 : 	$FOREACH almid ALM.ID_LIST$
54 : 		$IF ISFUNCTION("GENERATE_ALMCB")$
55 : 			$GENERATE_ALMCB(almid)$
56 : 		$ELSE$
57 : 			ALMCB _kernel_almcb_$almid$;$NL$
58 : 		$END$
59 : 	$END$$NL$
60 : 
61 : $	// アラームハンドラ管理ブロックアクセステーブル
62 : 	ALMCB* const _kernel_p_almcb_table[TNUM_ALMID] = {$NL$
63 : 	$JOINEACH almid ALM.ID_LIST ",\n"$
64 : 		$TAB$&_kernel_almcb_$almid$
65 : 	$END$
66 : 	$NL$
67 : 	};$NL$
68 : 
69 : $ELSE$
70 : 	TOPPERS_EMPTY_LABEL(const ALMINIB, _kernel_alminib_table);$NL$
71 : 	TOPPERS_EMPTY_LABEL(ALMCB* const, _kernel_p_almcb_table);$NL$
72 : $END$
73 : $NL$


[B] kernel_check.tf

00 : $	// アラームハンドラの先頭番地のチェック
01 : 	$alminib = SYMBOL("_kernel_alminib_table")$
02 : 	$FOREACH almid ALM.ID_LIST$
03 : 		$almhdr = PEEK(alminib + offsetof_ALMINIB_almhdr, 4)$
04 : 		$IF LENGTH(CHECK_FUNC_ALIGN) && (almhdr & (CHECK_FUNC_ALIGN - 1))$
05 : 			$ERROR ALM.TEXT_LINE[almid]$E_PAR: 
06 : 				$FORMAT(_("%1% `%2%\' of `%3%\' in %4% is not aligned"),
07 : 				"almhdr", ALM.ALMHDR[almid], almid, "CRE_ALM")$$END$
08 : 		$END$
09 : 		$IF LENGTH(CHECK_FUNC_NONNULL) && (almhdr == 0)$
10 : 			$ERROR ALM.TEXT_LINE[almid]$E_PAR: 
11 : 				$FORMAT(_("%1% `%2%\' of `%3%\' in %4% is null"),
12 : 				"almhdr", ALM.ALMHDR[almid], almid, "CRE_ALM")$$END$
13 : 		$END$
14 : 		$alminib = alminib + sizeof_ALMINIB$
15 : 	$END$
16 : $END$

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.2. マクロを展開したAPIと呼び出す内部関数
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
必要なし．

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.3. 条件式
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(A1) 11 : !LENGTH(ALM.CLASS[almid])
(A2) 16 : TOPPERS_SYSTIM_GLOBAL
(A3) 18 : CLASS_AFFINITY_INI[ALM.CLASS[almid]] != TOPPERS_SYSTIM_PRCID
(A4) 22 : (CLASS_AFFINITY_MASK[ALM.CLASS[almid]] & ~(1 << (TOPPERS_SYSTIM_PRCID - 1))) != 0
(A5) 38 : ALM.ALMATR[almid] != 0
(A6) 43 : TOPPERS_SYSTIM_LOCAL
(A7) 54 : ISFUNCTION("GENERATE_ALMCB")

(B1) 04 : almhdr & (CHECK_FUNC_ALIGN - 1)
(B2) 09 : almhdr == 0

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.4. 条件網羅表
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

       (A1) (A2) (A3) (A4) (A5) (A6) (A7) (B1) (B2)
[TOPPERS_SYSTIM_GLOBAL]
(a)     F    T    F    F    T    D    D    D    D
(b)     F    T    F    F    F    F    ?    T    F
(c)     F    T    F    F    F    F    ?    F    F
(d)     F    T    F    F    F    F    ?    F    F
(W_a)   F    T    F    F    F    F    ?    F    T
(F-a)   T    D    D    D    D    D    D    D    D
(F-b)   F    T    F    T    D    D    D    D    D
(F-c)   F    T    F    F    F    F    ?    F    F

[TOPPERS_SYSTIM_LOCAL]
(a)     F    F    D    D    T    D    D    D    D
(b)     F    F    D    D    F    T    ?    T    F
(c)     F    F    D    D    F    T    ?    F    F
(d)     F    F    D    D    F    T    ?    F    F
(W_a)   F    F    D    D    F    T    ?    F    T
(F-a)   T    D    D    D    D    D    D    D    D
(F-c)   F    F    D    D    F    T    ?    F    F
---------------------------------------------------
網羅    O    O    X    O    O    O    X    O    O

【備考】
・(A3)(A7)はターゲット依存のためホワイトボックステストを実施しない．

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

3. ホワイトボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
必要なし



以上．
