
	irel_wai テストシート

----------------------------------------------------------------------
 TTSP
     TOPPERS Test Suite Package

 Copyright (C) 2009-2011 by Center for Embedded Computing Systems
             Graduate School of Information Science, Nagoya Univ., JAPAN
 Copyright (C) 2009-2011 by Digital Craft Inc.
 Copyright (C) 2009-2011 by NEC Communication Systems, Ltd.
 Copyright (C) 2009-2011 by FUJISOFT INCORPORATED
 Copyright (C) 2009-2010 by Mitsuhiro Matsuura

 上記著作権者は，以下の (1)〜(3) の条件を満たす場合に限り，本ドキュメ
 ント（本ドキュメントを改変したものを含む．以下同じ）を使用・複製・改
 変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 (1) 本ドキュメントを利用する場合には，上記の著作権表示，この利用条件
     および下記の無保証規定が，そのままの形でドキュメント中に含まれて
     いること．
 (2) 本ドキュメントを改変する場合には，ドキュメントを改変した旨の記述
     を，改変後のドキュメント中に含めること．ただし，改変後のドキュメ
     ントが，TOPPERSプロジェクト指定の開発成果物である場合には，この限
     りではない．
 (3) 本ドキュメントの利用により直接的または間接的に生じるいかなる損害
     からも，上記著作権者およびTOPPERSプロジェクトを免責すること．また，
     本ドキュメントのユーザまたはエンドユーザからのいかなる理由に基づ
     く請求からも，上記著作権者およびTOPPERSプロジェクトを免責すること．

 本ドキュメントは，無保証で提供されているものである．上記著作権者およ
 びTOPPERSプロジェクトは，本ドキュメントに関して，特定の使用目的に対す
 る適合性も含めて，いかなる保証も行わない．また，本ドキュメントの利用
 により直接的または間接的に生じたいかなる損害に関しても，その責任を負
 わない．

 $Id: irel_wai.txt 2 2012-05-09 02:23:52Z nces-shigihara $
----------------------------------------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

0. API仕様

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

rel_wai		強制的な待ち解除〔T〕
irel_wai	強制的な待ち解除〔I〕

【C言語API】
	ER ercd = rel_wai(ID tskid)
	ER ercd = irel_wai(ID tskid)

【パラメータ】
	ID			tskid		対象タスクのID番号

【リターンパラメータ】
	ER			ercd		正常終了（E_OK）またはエラーコード

【エラーコード】
	E_CTX			コンテキストエラー（非タスクコンテキストからの呼出
					し：rel_waiの場合，タスクコンテキストからの呼出し：
					irel_waiの場合，CPUロック状態からの呼出し）
	E_NOSPT			未サポート機能（対象タスクが制約タスク）
	E_ID			不正ID番号（tskidが不正）
	E_NOEXS〔D〕	オブジェクト未登録（対象タスクが未登録）
	E_OACV〔P〕		オブジェクトアクセス違反（対象タスクに対する通常操
					作2が許可されていない：rel_waiの場合）
	E_OBJ			オブジェクト状態エラー（対象タスクが待ち状態でない）

【機能】

tskidで指定したタスク（対象タスク）を，強制的に待ち解除する．具体的な振
舞いは以下の通り．

対象タスクが待ち状態である場合には，対象タスクが待ち解除される．待ち解
除されたタスクには，待ち状態となったサービスコールからE_RLWAIが返る．

対象タスクが待ち状態でない場合には，E_OBJエラーとなる．


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

1. 仕様ベースのブラックボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.1. エラー条件のテストケース(FMP)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.2. 正常条件のテストケース(FMP)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━



■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

2. ソースコードの条件網羅確認

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.1. ソースコード
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ER
irel_wai(ID tskid)
{
	TCB		*p_tcb;
	ER		ercd;
	bool_t	dspreq = false;
	PCB		*p_pcb;

	LOG_IREL_WAI_ENTER(tskid);
	CHECK_INTCTX_UNL();
	CHECK_TSKID(tskid);
	p_tcb = get_tcb(tskid);

	i_lock_cpu();
#if TTYPE_KLOCK != G_KLOCK
  retry:
#endif /* TTYPE_KLOCK != G_KLOCK */
	p_pcb = i_acquire_tsk_lock(p_tcb);
	if (!TSTAT_WAITING(p_tcb->tstat)) {
		ercd = E_OBJ;
	}
	else {
#if TTYPE_KLOCK == G_KLOCK
		dspreq = wait_release(p_tcb);
#else /* TTYPE_KLOCK != G_KLOCK */
		if (!TSTAT_WAIT_WOBJ(p_tcb->tstat)) {
			/* オブジェクト待ちでない場合 */
			dspreq = wait_release(p_tcb);
		}
		else {
			/*
			 * オブジェクト待ちの場合
			 * デッドロック回避のため，ロックを取得し直す 
			 */
			WOBJCB *p_wobjcb = p_tcb->p_wobjcb;
			p_tcb->pend_relwai = true;
			release_tsk_lock(p_pcb);
			/*
			 * あらためて
			 *   オブジェクトロック -> タスクロック
			 * の順でロックを取得 
			 */
			t_acquire_obj_lock(&GET_OBJLOCK(p_wobjcb));
			if ((p_pcb = t_acquire_nested_tsk_lock(p_tcb, &GET_OBJLOCK(p_wobjcb))) == NULL){
				goto retry;
			}

			/* タスクの状態が変化していないかチェック */
			if (!(p_tcb->pend_relwai)) {
				/* 既に他の箇所で待ち解除処理がなされた */
				release_nested_tsk_lock(p_pcb);
				release_obj_lock(&GET_OBJLOCK(p_wobjcb));
				t_unlock_cpu();
				ercd = E_OBJ;
				goto error_exit;
			}
			p_tcb->pend_relwai = false;
			dspreq = wait_release(p_tcb);
			release_obj_lock(&GET_OBJLOCK(p_wobjcb));
		}
#endif /* TTYPE_KLOCK != G_KLOCK */
		if (dspreq){
			if (dispatch_request(p_pcb)) {
				(get_my_p_pcb())->reqflg = true;
			}
		}
		ercd = E_OK;
	}
	release_tsk_lock(p_pcb);
	i_unlock_cpu();

  error_exit:
	LOG_IREL_WAI_LEAVE(ercd);
	return(ercd);
}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.2. マクロを展開したAPIと呼び出す内部関数
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
[A] irel_wai(TTYPE_KLOCK != G_KLOCK)

00 : ER
01 : irel_wai(ID tskid)
02 : {
03 : 	TCB		*p_tcb;
04 : 	ER		ercd;
05 : 	bool_t	dspreq = false;
06 : 	PCB		*p_pcb;
07 : 
08 : 	if (!sense_intctx_unl()) {
09 : 		ercd = E_CTX;
10 : 		goto error_exit;
11 : 	}
12 : 	if (!(TMIN_TSKID <= (tskid) && (tskid) <= tmax_tskid)) {
13 : 		ercd = E_ID;
14 : 		goto error_exit;
15 : 	}
16 : 	p_tcb = (p_tcb_table[((uint_t)((tskid) - TMIN_TSKID))]);
17 : 
18 : 	i_lock_cpu();
19 :   retry:
20 : 
21 : 	p_pcb = i_acquire_tsk_lock(p_tcb);
22 : 	if (!(((p_tcb->tstat) & TS_WAITING) != 0U)) {
23 : 		ercd = E_OBJ;
24 : 	}
25 : 	else {
26 : 		if (!(((p_tcb->tstat) & TS_WAIT_MASK) >= TS_WAIT_RDTQ)) {
27 : 			/* オブジェクト待ちでない場合 */
28 : 			dspreq = wait_release(p_tcb);
29 : 		}
30 : 		else {
31 : 			/*
32 : 			 * オブジェクト待ちの場合
33 : 			 * デッドロック回避のため，ロックを取得し直す 
34 : 			 */
35 : 			WOBJCB *p_wobjcb = p_tcb->p_wobjcb;
36 : 			p_tcb->pend_relwai = true;
37 : 			release_tsk_lock(p_pcb);
38 : 			/*
39 : 			 * あらためて
40 : 			 *   オブジェクトロック -> タスクロック
41 : 			 * の順でロックを取得 
42 : 			 */
43 : 			t_acquire_obj_lock(&GET_OBJLOCK(p_wobjcb));
44 : 			if ((p_pcb = t_acquire_nested_tsk_lock(p_tcb, &GET_OBJLOCK(p_wobjcb))) == NULL){
45 : 				goto retry;
46 : 			}
47 : 
48 : 			/* タスクの状態が変化していないかチェック */
49 : 			if (!(p_tcb->pend_relwai)) {
50 : 				/* 既に他の箇所で待ち解除処理がなされた */
51 : 				release_nested_tsk_lock(p_pcb);
52 : 				release_obj_lock(&GET_OBJLOCK(p_wobjcb));
53 : 				t_unlock_cpu();
54 : 				ercd = E_OBJ;
55 : 				goto error_exit;
56 : 			}
57 : 			p_tcb->pend_relwai = false;
58 : 			dspreq = wait_release(p_tcb);
59 : 			release_obj_lock(&GET_OBJLOCK(p_wobjcb));
60 : 		}
61 : 		if (dspreq){
62 : 			if (dispatch_request(p_pcb)) {
63 : 				(get_my_p_pcb())->reqflg = true;
64 : 			}
65 : 		}
66 : 		ercd = E_OK;
67 : 	}
68 : 	release_tsk_lock(p_pcb);
69 : 	i_unlock_cpu();
70 : 
71 :   error_exit:
72 : 	return(ercd);
73 : }

[B] irel_wai(TTYPE_KLOCK == G_KLOCK)
00 : ER
01 : irel_wai(ID tskid)
02 : {
03 : 	TCB		*p_tcb;
04 : 	ER		ercd;
05 : 	bool_t	dspreq = false;
06 : 	PCB		*p_pcb;
07 : 
08 : 	if (!sense_intctx_unl()) {
09 : 		ercd = E_CTX;
10 : 		goto error_exit;
11 : 	}
12 : 	if (!(TMIN_TSKID <= (tskid) && (tskid) <= tmax_tskid)) {
13 : 		ercd = E_ID;
14 : 		goto error_exit;
15 : 	}
16 : 	p_tcb = (p_tcb_table[((uint_t)((tskid) - TMIN_TSKID))]);
17 : 
18 : 	i_lock_cpu();
19 : 	p_pcb = i_acquire_tsk_lock(p_tcb);
20 : 	if (!(((p_tcb->tstat) & TS_WAITING) != 0U)) {
21 : 		ercd = E_OBJ;
22 : 	}
23 : 	else {
24 : 		dspreq = wait_release(p_tcb);
25 : 		if (dspreq){
26 : 			if (dispatch_request(p_pcb)) {
27 : 				(get_my_p_pcb())->reqflg = true;
28 : 			}
29 : 		}
30 : 		ercd = E_OK;
31 : 	}
32 : 	release_tsk_lock(p_pcb);
33 : 	i_unlock_cpu();
34 : 
35 :   error_exit:
36 : 	LOG_IREL_WAI_LEAVE(ercd);
37 : 	return(ercd);
38 : }


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.3. 条件式
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(A1) 08 : !sense_intctx_unl()
(A2) 12 : TMIN_TSKID <= (tskid)
(A3) 12 : (tskid) <= tmax_tskid)
(A4) 22 : !(((p_tcb->tstat) & TS_WAITING) != 0U)
(A5) 26 : !(((p_tcb->tstat) & TS_WAIT_MASK) >= TS_WAIT_RDTQ)
(A6) 49 : !(p_tcb->pend_relwai)
(A7) 61 : dspreq
(A8) 62 : dispatch_request(p_pcb)

(B1) 08 : !sense_intctx_unl()
(B2) 12 : TMIN_TSKID <= (tskid)
(B3) 12 : (tskid) <= tmax_tskid)
(B4) 20 : !(((p_tcb->tstat) & TS_WAITING) != 0U)
(B5) 25 : dspreq
(B6) 26 : dispatch_request(p_pcb)

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.4. 条件網羅表
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
[TTYPE_KLOCK != G_KLOCK]

           (A1) (A2) (A3) (A4) (A5) (A6) (A7) (A8)
(a-1)       T    D    D    D    D    D    D    D
(a-2)       T    D    D    D    D    D    D    D
(b-1)       F    F   D/T   D    D    D    D    D
(b-2)       F    T    F    D    D    D    D    D
(c-1)       F    T    T    T    D    D    D    D
(c-2)       F    T    T    T    D    D    D    D
(c-3)       F    T    T    T    D    D    D    D
(c-4)       F    T    T    T    D    D    D    D
(d-1-1)     F    T    T    F    T    D    T    T
(d-1-2)     F    T    T    F    T    D    F    D
(d-1-3)     F    T    T    F    T    D    F    D
(d-2)       F    T    T    F    T    D    F    D
(d-3)       F    T    T    F    T    D    F    D
(d-4)       F    T    T    F    T    D    F    D
(d-5)       F    T    T    F    T    D    T    T
(e-1-1)     F    T    T    F    T    D    T    T
(e-1-2)     F    T    T    F    T    D    F    D
(e-1-3)     F    T    T    F    T    D    F    D
(e-2)       F    T    T    F    T    D    F    D
(e-3)       F    T    T    F    T    D    F    D
(e-4)       F    T    T    F    T    D    F    D
(e-5)       F    T    T    F    T    D    T    T
(f-1-1)     F    T    T    F    F    F    T    T
(f-1-2)     F    T    T    F    F    F    F    D
(f-1-3)     F    T    T    F    F    F    F    D
(f-2)       F    T    T    F    F    F    F    D
(f-3)       F    T    T    F    F    F    F    D
(f-4)       F    T    T    F    F    F    F    D
(f-5)       F    T    T    F    F    F    T    T
(g-1-1)     F    T    T    F    F    F    T    T
(g-1-2)     F    T    T    F    F    F    F    D
(g-1-3)     F    T    T    F    F    F    F    D
(g-2)       F    T    T    F    F    F    F    D
(g-3)       F    T    T    F    F    F    F    D
(g-4)       F    T    T    F    F    F    F    D
(g-5)       F    T    T    F    F    F    T    T
(F-a-1)     T    D    D    D    D    D    D    D
(F-a-2)     T    D    D    D    D    D    D    D
(F-a-3)     T    D    D    D    D    D    D    D
(F-a-4)     T    D    D    D    D    D    D    D
(F-b-1)     F    T    T    T    D    D    D    D
(F-b-2)     F    T    T    T    D    D    D    D
(F-c-1)     F    T    T    T    D    D    D    D
(F-c-2)     F    T    T    T    D    D    D    D
(F-c-3)     F    T    T    T    D    D    D    D
(F-c-4)     F    T    T    T    D    D    D    D
(F-c-5-1)   F    T    T    T    D    D    D    D
(F-c-5-2)   F    T    T    T    D    D    D    D
(F-c-5-3)   F    T    T    T    D    D    D    D
(F-c-5-4)   F    T    T    T    D    D    D    D
(F-c-5-5)   F    T    T    T    D    D    D    D
(F-d-1-1)   F    T    T    F    T    D    T    F
(F-d-1-2)   F    T    T    F    T    D    F    D
(F-d-1-3)   F    T    T    F    T    D    F    D
(F-d-1-4)   F    T    T    F    T    D    T    F
(F-d-1-5)   F    T    T    F    T    D    T    F
(F-d-1-6)   F    T    T    F    T    D    T    F
(F-d-2)     F    T    T    F    T    D    F    D
(F-d-3)     F    T    T    F    T    D    F    D
(F-d-4)     F    T    T    F    T    D    F    D
(F-d-5-1)   F    T    T    F    T    D    T    F
(F-d-5-2)   F    T    T    F    T    D    T    F
(F-e-1-1)   F    T    T    F    T    D    T    F
(F-e-1-2)   F    T    T    F    T    D    F    D
(F-e-1-3)   F    T    T    F    T    D    F    D
(F-e-1-4)   F    T    T    F    T    D    T    F
(F-e-1-5)   F    T    T    F    T    D    T    F
(F-e-1-6)   F    T    T    F    T    D    T    F
(F-e-2)     F    T    T    F    T    D    F    D
(F-e-3)     F    T    T    F    T    D    F    D
(F-e-4)     F    T    T    F    T    D    F    D
(F-e-5-1)   F    T    T    F    T    D    T    F
(F-e-5-2)   F    T    T    F    T    D    T    F
(F-f-1-1)   F    T    T    F    F    F    T    F
(F-f-1-2)   F    T    T    F    F    F    F    D
(F-f-1-3)   F    T    T    F    F    F    F    D
(F-f-1-4)   F    T    T    F    F    F    T    F
(F-f-1-5)   F    T    T    F    F    F    T    F
(F-f-1-6)   F    T    T    F    F    F    T    F
(F-f-2)     F    T    T    F    F    F    F    D
(F-f-3)     F    T    T    F    F    F    F    D
(F-f-4)     F    T    T    F    F    F    F    D
(F-f-5-1)   F    T    T    F    F    F    T    F
(F-f-5-2)   F    T    T    F    F    F    T    F
(F-g-1-1)   F    T    T    F    F    F    T    F
(F-g-1-2)   F    T    T    F    F    F    F    D
(F-g-1-3)   F    T    T    F    F    F    F    D
(F-g-1-4)   F    T    T    F    F    F    T    F
(F-g-1-5)   F    T    T    F    F    F    T    F
(F-g-1-6)   F    T    T    F    F    F    T    F
(F-g-2)     F    T    T    F    F    F    F    D
(F-g-3)     F    T    T    F    F    F    F    D
(F-g-4)     F    T    T    F    F    F    F    D
(F-g-5-1)   F    T    T    F    F    F    T    F
(F-g-5-2)   F    T    T    F    F    F    T    F
--------------------------------------------------
網羅        O    O    O    O    O    X    O    O


[TTYPE_KLOCK == G_KLOCK]

           (B1) (B2) (B3) (B4) (B5) (B6)
(a-1)       T    D    D    D    D    D
(a-2)       T    D    D    D    D    D
(b-1)       F    F   D/T   D    D    D
(b-2)       F    T    F    D    D    D
(c-1)       F    T    T    T    D    D
(c-2)       F    T    T    T    D    D
(c-3)       F    T    T    T    D    D
(c-4)       F    T    T    T    D    D
(d-1-1)     F    T    T    F    T    T
(d-1-2)     F    T    T    F    F    D
(d-1-3)     F    T    T    F    F    D
(d-2)       F    T    T    F    F    D
(d-3)       F    T    T    F    F    D
(d-4)       F    T    T    F    F    D
(d-5)       F    T    T    F    T    T
(e-1-1)     F    T    T    F    T    T
(e-1-2)     F    T    T    F    F    D
(e-1-3)     F    T    T    F    F    D
(e-2)       F    T    T    F    F    D
(e-3)       F    T    T    F    F    D
(e-4)       F    T    T    F    F    D
(e-5)       F    T    T    F    T    T
(f-1-1)     F    T    T    F    T    T
(f-1-2)     F    T    T    F    F    D
(f-1-3)     F    T    T    F    F    D
(f-2)       F    T    T    F    F    D
(f-3)       F    T    T    F    F    D
(f-4)       F    T    T    F    F    D
(f-5)       F    T    T    F    T    T
(g-1-1)     F    T    T    F    T    T
(g-1-2)     F    T    T    F    F    D
(g-1-3)     F    T    T    F    F    D
(g-2)       F    T    T    F    F    D
(g-3)       F    T    T    F    F    D
(g-4)       F    T    T    F    F    D
(g-5)       F    T    T    F    T    T
(F-a-1)     T    D    D    D    D    D
(F-a-2)     T    D    D    D    D    D
(F-a-3)     T    D    D    D    D    D
(F-a-4)     T    D    D    D    D    D
(F-b-1)     F    T    T    T    D    D
(F-b-2)     F    T    T    T    D    D
(F-c-1)     F    T    T    T    D    D
(F-c-2)     F    T    T    T    D    D
(F-c-3)     F    T    T    T    D    D
(F-c-4)     F    T    T    T    D    D
(F-c-5-2)   F    T    T    T    D    D
(F-c-5-3)   F    T    T    T    D    D
(F-c-5-4)   F    T    T    T    D    D
(F-c-5-5)   F    T    T    T    D    D
(F-d-1-1)   F    T    T    F    T    F
(F-d-1-2)   F    T    T    F    F    D
(F-d-1-3)   F    T    T    F    F    D
(F-d-1-4)   F    T    T    F    T    F
(F-d-1-5)   F    T    T    F    T    F
(F-d-2)     F    T    T    F    F    D
(F-d-3)     F    T    T    F    F    D
(F-d-4)     F    T    T    F    F    D
(F-d-5-1)   F    T    T    F    T    F
(F-e-1-1)   F    T    T    F    T    F
(F-e-1-2)   F    T    T    F    F    D
(F-e-1-3)   F    T    T    F    F    D
(F-e-1-4)   F    T    T    F    T    F
(F-e-1-5)   F    T    T    F    T    F
(F-e-2)     F    T    T    F    F    D
(F-e-3)     F    T    T    F    F    D
(F-e-4)     F    T    T    F    F    D
(F-e-5-1)   F    T    T    F    T    F
(F-f-1-1)   F    T    T    F    T    F
(F-f-1-2)   F    T    T    F    F    D
(F-f-1-3)   F    T    T    F    F    D
(F-f-1-4)   F    T    T    F    T    F
(F-f-1-5)   F    T    T    F    T    F
(F-f-2)     F    T    T    F    F    D
(F-f-3)     F    T    T    F    F    D
(F-f-4)     F    T    T    F    F    D
(F-f-5-1)   F    T    T    F    T    F
(F-g-1-1)   F    T    T    F    T    F
(F-g-1-2)   F    T    T    F    F    D
(F-g-1-3)   F    T    T    F    F    D
(F-g-1-4)   F    T    T    F    T    F
(F-g-1-5)   F    T    T    F    T    F
(F-g-2)     F    T    T    F    F    D
(F-g-3)     F    T    T    F    F    D
(F-g-4)     F    T    T    F    F    D
(F-g-5-1)   F    T    T    F    T    F
----------------------------------------
網羅        O    O    O    O    O    O

【備考】
・(A6)のテストケースはタイミング依存のテストなのでホワイトボックステス
トとしては実施しない．

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

3. ホワイトボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
必要なし．



以上．
