
	sns_tex テストシート

----------------------------------------------------------------------
 TTSP
     TOPPERS Test Suite Package

 Copyright (C) 2009-2011 by Center for Embedded Computing Systems
             Graduate School of Information Science, Nagoya Univ., JAPAN
 Copyright (C) 2009-2011 by Digital Craft Inc.
 Copyright (C) 2009-2011 by NEC Communication Systems, Ltd.
 Copyright (C) 2009-2011 by FUJISOFT INCORPORATED
 Copyright (C) 2009-2010 by Mitsuhiro Matsuura

 上記著作権者は，以下の (1)〜(3) の条件を満たす場合に限り，本ドキュメ
 ント（本ドキュメントを改変したものを含む．以下同じ）を使用・複製・改
 変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 (1) 本ドキュメントを利用する場合には，上記の著作権表示，この利用条件
     および下記の無保証規定が，そのままの形でドキュメント中に含まれて
     いること．
 (2) 本ドキュメントを改変する場合には，ドキュメントを改変した旨の記述
     を，改変後のドキュメント中に含めること．ただし，改変後のドキュメ
     ントが，TOPPERSプロジェクト指定の開発成果物である場合には，この限
     りではない．
 (3) 本ドキュメントの利用により直接的または間接的に生じるいかなる損害
     からも，上記著作権者およびTOPPERSプロジェクトを免責すること．また，
     本ドキュメントのユーザまたはエンドユーザからのいかなる理由に基づ
     く請求からも，上記著作権者およびTOPPERSプロジェクトを免責すること．

 本ドキュメントは，無保証で提供されているものである．上記著作権者およ
 びTOPPERSプロジェクトは，本ドキュメントに関して，特定の使用目的に対す
 る適合性も含めて，いかなる保証も行わない．また，本ドキュメントの利用
 により直接的または間接的に生じたいかなる損害に関しても，その責任を負
 わない．

 $Id: sns_tex.txt 2 2012-05-09 02:23:52Z nces-shigihara $
----------------------------------------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

0. API仕様

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

sns_tex		タスク例外処理禁止状態の参照〔TI〕

【C言語API】
	bool_t state = sns_tex()

【パラメータ】
	なし

【リターンパラメータ】
	bool_t		state		タスク例外処理禁止状態

【機能】

実行状態のタスクのタスク例外処理禁止フラグを参照する．具体的な振舞いは
以下の通り．

実行状態のタスクが，タスク例外処理禁止状態の場合にtrue，タスク例外処理
許可状態の場合にfalseが返る．sns_texを非タスクコンテキストから呼び出し
た場合で，実行状態のタスクがない場合には，trueが返る．

マルチプロセッサ対応カーネルにおいては，サービスコールを呼び出した処理
単位を実行しているプロセッサにおいて実行状態のタスクのタスク例外処理禁
止フラグを参照する．

【補足説明】

sns_texをタスクコンテキストから呼び出した場合，実行状態のタスクは自タス
クに一致する．


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

1. 仕様ベースのブラックボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.1. エラー条件のテストケース(FMP)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.2. 正常条件のテストケース(FMP)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━



■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

2. ソースコードの条件網羅確認

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.1. ソースコード
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
bool_t
sns_tex(void)
{
	bool_t	state;
	TCB		*p_runtsk;
	bool_t	locked;

	LOG_SNS_TEX_ENTER();

	/*
	 *  PCBへアクセスするためCPUロック状態とする
	 */
	locked = t_sense_lock();
	if (!locked) {
		t_lock_cpu();
	}
	p_runtsk = (get_my_p_pcb())->p_runtsk;
	state = (p_runtsk != NULL && p_runtsk->enatex) ? false : true;
	if (!locked) {
		t_unlock_cpu();
	}

	LOG_SNS_TEX_LEAVE(state);

	return(state);
}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.2. マクロを展開したAPIと呼び出す内部関数
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
[A] sns_tex

00 : bool_t
01 : sns_tex(void)
02 : {
03 : 	bool_t	state;
04 : 	TCB		*p_runtsk;
05 : 	bool_t	locked;
06 : 
07 : 	/*
08 : 	 *  PCBへアクセスするためCPUロック状態とする
09 : 	 */
10 : 	locked = t_sense_lock();
12 : 	if (!locked) {
13 : 		t_lock_cpu();
14 : 	}
15 : 	p_runtsk = (get_my_p_pcb())->p_runtsk;
16 : 	state = (p_runtsk != NULL && p_runtsk->enatex) ? false : true;
17 : 	if (!locked) {
18 : 		t_unlock_cpu();
19 : 	}
20 : 
21 : 	return(state);
22 : }

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.3. 条件式
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(A1) 12 : !locked
(A2) 16 : p_runtsk != NULL
(A3) 16 : p_runtsk->enatex
(A4) 17 : !locked

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.4. 条件網羅表
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

           (A1) (A2) (A3) (A4)
(a-1)       T    T    F    T
(a-2)       T    T    T    T
(b-1)       T    T    F    T
(b-2)       T    T    T    T
(b-3)       T    F    D    T
(F-a-1-1)   T    T    F    T
(F-a-1-2)   F    T    F    F
(F-a-1-3)   F    T    F    F
(F-a-1-4)   T    T    F    T
(F-a-1-5)   T    T    F    T
(F-a-2-1)   T    T    T    T
(F-a-2-2)   F    T    T    F
(F-a-2-3)   F    T    T    F
(F-a-2-4)   T    T    T    T
(F-a-2-5)   T    T    T    T
(F-b-1-1)   T    T    F    T
(F-b-1-2)   T    T    F    T
(F-b-1-3)   T    T    F    T
(F-b-2-1)   T    T    T    T
(F-b-2-2)   T    T    T    T
(F-b-2-3)   T    T    T    T
(F-b-3)     T    F    D    T
------------------------------
網羅        O    O    O    O

【備考】
・(b-3)と(F-b-3)の(A3)は，(A2)よりp_runtsk == NULLであるため，D/Tとな
  らない．


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

3. ホワイトボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
必要なし．



以上．
