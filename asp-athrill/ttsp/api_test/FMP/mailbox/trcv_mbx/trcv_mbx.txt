
	trcv_mbx テストシート

----------------------------------------------------------------------
 TTSP
     TOPPERS Test Suite Package

 Copyright (C) 2009-2011 by Center for Embedded Computing Systems
             Graduate School of Information Science, Nagoya Univ., JAPAN
 Copyright (C) 2009-2011 by Digital Craft Inc.
 Copyright (C) 2009-2011 by NEC Communication Systems, Ltd.
 Copyright (C) 2009-2011 by FUJISOFT INCORPORATED
 Copyright (C) 2009-2010 by Mitsuhiro Matsuura

 上記著作権者は，以下の (1)〜(3) の条件を満たす場合に限り，本ドキュメ
 ント（本ドキュメントを改変したものを含む．以下同じ）を使用・複製・改
 変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 (1) 本ドキュメントを利用する場合には，上記の著作権表示，この利用条件
     および下記の無保証規定が，そのままの形でドキュメント中に含まれて
     いること．
 (2) 本ドキュメントを改変する場合には，ドキュメントを改変した旨の記述
     を，改変後のドキュメント中に含めること．ただし，改変後のドキュメ
     ントが，TOPPERSプロジェクト指定の開発成果物である場合には，この限
     りではない．
 (3) 本ドキュメントの利用により直接的または間接的に生じるいかなる損害
     からも，上記著作権者およびTOPPERSプロジェクトを免責すること．また，
     本ドキュメントのユーザまたはエンドユーザからのいかなる理由に基づ
     く請求からも，上記著作権者およびTOPPERSプロジェクトを免責すること．

 本ドキュメントは，無保証で提供されているものである．上記著作権者およ
 びTOPPERSプロジェクトは，本ドキュメントに関して，特定の使用目的に対す
 る適合性も含めて，いかなる保証も行わない．また，本ドキュメントの利用
 により直接的または間接的に生じたいかなる損害に関しても，その責任を負
 わない．

 $Id: trcv_mbx.txt 2 2012-05-09 02:23:52Z nces-shigihara $
----------------------------------------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

0. API仕様

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

rcv_mbx		メールボックスからの受信〔Tp〕
prcv_mbx	メールボックスからの受信（ポーリング）〔Tp〕
trcv_mbx	メールボックスからの受信（タイムアウト付き）〔Tp〕

【C言語API】
	ER ercd = rcv_mbx(ID mbxid, T_MSG **ppk_msg)
	ER ercd = prcv_mbx(ID mbxid, T_MSG **ppk_msg)
	ER ercd = trcv_mbx(ID mbxid, T_MSG **ppk_msg, TMO tmout)

【パラメータ】
	ID			mbxid		対象メールボックスのID番号
	T_MSG **	ppk_msg		受信メッセージの先頭番地を入れるメモリ領域
							へのポインタ
	TMO			tmout		タイムアウト時間（trcv_mbxの場合）

【リターンパラメータ】
	ER			ercd		正常終了（E_OK）またはエラーコード
	T_MSG *		ppk_msg		受信メッセージの先頭番地

【エラーコード】
	E_CTX			コンテキストエラー（非タスクコンテキストからの呼出
					し，CPUロック状態からの呼出し，ディスパッチ保留状態
					からの呼出し：prcv_mbxを除く）
	E_NOSPT			未サポート機能（制約タスクからの呼出し：prcv_mbxを除
					く）
	E_ID			不正ID番号（mbxidが不正）
	E_PAR			パラメータエラー（tmoutが不正：trcv_mbxの場合）
	E_NOEXS〔D〕	オブジェクト未登録（対象メールボックスが未登録）
	E_TMOUT			ポーリング失敗またはタイムアウト（rcv_mbxを除く）
	E_RLWAI			待ち禁止状態または待ち状態の強制解除（prcv_mbxを除く）
	E_DLT			待ちオブジェクトの削除または再初期化（prcv_mbxを除く）

【機能】

mbxidで指定したメールボックス（対象メールボックス）からメッセージを受信
する．受信したメッセージの先頭番地は，ppk_msgで指定したメモリ領域に返さ
れる．具体的な振舞いは以下の通り．

対象メールボックスのメッセージキューにメッセージがつながれている場合に
は，メッセージキューの先頭につながれたメッセージが取り出され，ppk_msgで
指定したメモリ領域に返される．

対象メールボックスのメッセージキューにメッセージがつながれていない場合
には，自タスクはメールボックスからの受信待ち状態となり，対象メールボッ
クスの待ち行列につながれる．


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

1. 仕様ベースのブラックボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.1. エラー条件のテストケース(FMP)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.2. 正常条件のテストケース(FMP)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━



■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

2. ソースコードの条件網羅確認

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.1. ソースコード
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ER
trcv_mbx(ID mbxid, T_MSG **ppk_msg, TMO tmout)
{
	MBXCB	*p_mbxcb;
	ER		ercd;
	PCB		*my_p_pcb;
	TCB		*p_runtsk;

	LOG_TRCV_MBX_ENTER(mbxid, ppk_msg, tmout);
	CHECK_TSKCTX_UNL();
	CHECK_MBXID(mbxid);
	CHECK_TMOUT(tmout);
	p_mbxcb = get_mbxcb(mbxid);

	t_lock_cpu();
	my_p_pcb = get_my_p_pcb();
	T_CHECK_DISPATCH(my_p_pcb);

  retry:
	t_acquire_obj_lock(&GET_OBJLOCK(p_mbxcb));
	if (p_mbxcb->pk_head != NULL) {
		*ppk_msg = p_mbxcb->pk_head;
		p_mbxcb->pk_head = (*ppk_msg)->pk_next;
		release_obj_lock(&GET_OBJLOCK(p_mbxcb));
		ercd = E_OK;
	}
	else if (tmout == TMO_POL) {
		release_obj_lock(&GET_OBJLOCK(p_mbxcb));
		ercd = E_TMOUT;
	}
	else {
		if ((my_p_pcb = t_acquire_nested_tsk_lock_self(&GET_OBJLOCK(p_mbxcb))) == NULL){
			goto retry;
		}
		p_runtsk = my_p_pcb->p_runtsk;
		p_runtsk->tstat = (TS_WAITING | TS_WAIT_MBX);
		wobj_make_wait_tmout((WOBJCB *) p_mbxcb, tmout, p_runtsk);
		release_nested_tsk_lock(my_p_pcb);
		release_obj_lock(&GET_OBJLOCK(p_mbxcb));
		dispatch();
		ercd = p_runtsk->wercd;
		if (ercd == E_OK) {
			*ppk_msg = p_runtsk->winfo_obj.mbx.pk_msg;
		}
	}
	t_unlock_cpu();

  error_exit:
	LOG_TRCV_MBX_LEAVE(ercd, *ppk_msg);
	return(ercd);
}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.2. マクロを展開したAPIと呼び出す内部関数
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
[A] trcv_mbx

00 : ER
01 : trcv_mbx(ID mbxid, T_MSG **ppk_msg, TMO tmout)
02 : {
03 : 	MBXCB	*p_mbxcb;
04 : 	ER		ercd;
05 : 	PCB		*my_p_pcb;
06 : 	TCB		*p_runtsk;
07 : 
08 : 	if (!sense_tskctx_unl()) {
09 : 		ercd = E_CTX;
10 : 		goto error_exit;
11 : 	}
12 : 	if (!(TMIN_MBXID <= (mbxid) && (mbxid) <= tmax_mbxid)) {
13 : 		ercd = E_ID;
14 : 		goto error_exit;
15 : 	}
16 : 	if (!(TMO_FEVR <= (tmout))) {
17 : 		ercd = E_PAR;
18 : 		goto error_exit;
19 : 	}
20 : 	p_mbxcb = p_mbxcb_table[(uint_t)((mbxid) - TMIN_MBXID)];
21 : 
22 : 	t_lock_cpu();
23 : 	my_p_pcb = get_my_p_pcb();
24 : 	if (!(my_p_pcb->dspflg)) {
25 : 		ercd = E_CTX;
26 : 		t_unlock_cpu();
27 : 		goto error_exit;
28 : 	}
29 : 
30 :   retry:
31 : 	t_acquire_obj_lock(&GET_OBJLOCK(p_mbxcb));
32 : 	if (p_mbxcb->pk_head != NULL) {
33 : 		*ppk_msg = p_mbxcb->pk_head;
34 : 		p_mbxcb->pk_head = (*ppk_msg)->pk_next;
35 : 		release_obj_lock(&GET_OBJLOCK(p_mbxcb));
36 : 		ercd = E_OK;
37 : 	}
38 : 	else if (tmout == TMO_POL) {
39 : 		release_obj_lock(&GET_OBJLOCK(p_mbxcb));
40 : 		ercd = E_TMOUT;
41 : 	}
42 : 	else {
43 : 		if ((my_p_pcb = t_acquire_nested_tsk_lock_self(&GET_OBJLOCK(p_mbxcb))) == NULL){
44 : 			goto retry;
45 : 		}
46 : 		p_runtsk = my_p_pcb->p_runtsk;
47 : 		p_runtsk->tstat = (TS_WAITING | TS_WAIT_MBX);
48 : 		wobj_make_wait_tmout((WOBJCB *) p_mbxcb, tmout, p_runtsk);
49 : 		release_nested_tsk_lock(my_p_pcb);
50 : 		release_obj_lock(&GET_OBJLOCK(p_mbxcb));
51 : 		dispatch();
52 : 		ercd = p_runtsk->wercd;
53 : 		if (ercd == E_OK) {
54 : 			*ppk_msg = p_runtsk->winfo_obj.mbx.pk_msg;
55 : 		}
56 : 	}
57 : 	t_unlock_cpu();
58 : 
59 :   error_exit:
60 : 	return(ercd);
61 : }

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.3. 条件式
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(A1) 08 : !sense_tskctx_unl()
(A2) 12 : TMIN_MBXID <= (mbxid)
(A3) 12 : (mbxid) <= tmax_mbxid
(A4) 16 : !(TMO_FEVR <= (tmout))
(A5) 24 : !(my_p_pcb->dspflg)
(A6) 32 : p_mbxcb->pk_head != NULL
(A7) 38 : tmout == TMO_POL
(A8) 53 : ercd == E_OK

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.4. 条件網羅表
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

           (A1) (A2) (A3) (A4) (A5) (A6) (A7) (A8)
(a-1)       T    D    D    D    D    D    D    D
(a-2)       T    D    D    D    D    D    D    D
(a-3)       F    T    T    F    T    D    D    D
(a-4)       F    T    T    F    T    D    D    D
(b-1)       F    F   D/T   D    D    D    D    D
(b-2)       F    T    F    D    D    D    D    D
(c)         F    T    T    T    D    D    D    D
(d)         F    T    T    F    F    F    F    F
(e)         F    T    T    F    F    F    F    F
(f)         F    T    T    F    F    F    F    T
(g-1)       F    T    T    F    F    T    D    D
(g-2)       F    T    T    F    F    F    T    D
(h-1)       F    T    T    F    F    T    D    D
(h-2)       F    T    T    F    F    F    F    D
(i-1-1)     F    T    T    F    F    T    D    D
(i-1-2)     F    T    T    F    F    T    D    D
(i-2-1-1)   F    T    T    F    F    F    F    D
(i-2-1-2)   F    T    T    F    F    F    F    D
(i-2-1-3)   F    T    T    F    F    F    F    D
(i-2-1-4)   F    T    T    F    F    F    F    D
(i-2-2-1)   F    T    T    F    F    F    F    D
(i-2-2-2)   F    T    T    F    F    F    F    D
(i-2-2-3)   F    T    T    F    F    F    F    D
(i-2-2-4)   F    T    T    F    F    F    F    D
(i-3)       F    T    T    F    F    F    F    F
(F-a)       T    D    D    D    D    D    D    D
(F-b)       F    T    T    F    F    F    F    F
(F-c)       F    T    T    F    F    F    F    F
(F-d)       F    T    T    F    F    F    F    T
(F-e-1-1)   F    T    T    F    F    F    F    D
(F-e-1-2)   F    T    T    F    F    F    F    D
(F-e-1-3)   F    T    T    F    F    F    F    D
(F-e-2-1)   F    T    T    F    F    F    F    D
(F-e-2-2)   F    T    T    F    F    F    F    D
(F-e-2-3)   F    T    T    F    F    F    F    D
--------------------------------------------------
網羅        O    O    O    O    O    0    0    0


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

3. ホワイトボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
必要なし．



以上．
