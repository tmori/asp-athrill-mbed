
	snd_mbx テストシート

----------------------------------------------------------------------
 TTSP
     TOPPERS Test Suite Package

 Copyright (C) 2009-2011 by Center for Embedded Computing Systems
             Graduate School of Information Science, Nagoya Univ., JAPAN
 Copyright (C) 2009-2011 by Digital Craft Inc.
 Copyright (C) 2009-2011 by NEC Communication Systems, Ltd.
 Copyright (C) 2009-2011 by FUJISOFT INCORPORATED
 Copyright (C) 2009-2010 by Mitsuhiro Matsuura

 上記著作権者は，以下の (1)〜(3) の条件を満たす場合に限り，本ドキュメ
 ント（本ドキュメントを改変したものを含む．以下同じ）を使用・複製・改
 変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 (1) 本ドキュメントを利用する場合には，上記の著作権表示，この利用条件
     および下記の無保証規定が，そのままの形でドキュメント中に含まれて
     いること．
 (2) 本ドキュメントを改変する場合には，ドキュメントを改変した旨の記述
     を，改変後のドキュメント中に含めること．ただし，改変後のドキュメ
     ントが，TOPPERSプロジェクト指定の開発成果物である場合には，この限
     りではない．
 (3) 本ドキュメントの利用により直接的または間接的に生じるいかなる損害
     からも，上記著作権者およびTOPPERSプロジェクトを免責すること．また，
     本ドキュメントのユーザまたはエンドユーザからのいかなる理由に基づ
     く請求からも，上記著作権者およびTOPPERSプロジェクトを免責すること．

 本ドキュメントは，無保証で提供されているものである．上記著作権者およ
 びTOPPERSプロジェクトは，本ドキュメントに関して，特定の使用目的に対す
 る適合性も含めて，いかなる保証も行わない．また，本ドキュメントの利用
 により直接的または間接的に生じたいかなる損害に関しても，その責任を負
 わない．

 $Id: snd_mbx.txt 2 2012-05-09 02:23:52Z nces-shigihara $
----------------------------------------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

0. API仕様

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

snd_mbx		メールボックスへの送信〔Tp〕

【C言語API】
	ER ercd = snd_mbx(ID mbxid, T_MSG *pk_msg)

【パラメータ】
	ID			mbxid		対象メールボックスのID番号
	T_MSG		*pk_msg		送信メッセージの先頭番地

【リターンパラメータ】
	ER			ercd		正常終了（E_OK）またはエラーコード

【エラーコード】
	E_CTX			コンテキストエラー（非タスクコンテキストからの呼出
					し，CPUロック状態からの呼出し）
	E_ID			不正ID番号（mbxidが不正）
	E_PAR			パラメータエラー（メッセージヘッダ中のmsgpriが不正）
	E_NOEXS〔D〕	オブジェクト未登録（対象メールボックスが未登録）

【機能】

mbxidで指定したメールボックス（対象メールボックス）に，pk_msgで指定した
メッセージを送信する．具体的な振舞いは以下の通り．

対象メールボックスの待ち行列にタスクが存在する場合には，待ち行列の先頭
のタスクが，pk_msgで指定したメッセージを受信し，待ち解除される．待ち解
除されたタスクには，待ち状態となったサービスコールからE_OKが返る．

対象メールボックスの待ち行列にタスクが存在しない場合には，pk_msgで指定
したメッセージが，メールボックス属性のTA_MPRI指定の有無によって指定され
る順序で，メッセージキューにつなぐ．

対象メールボックスがTA_MPRI属性である場合には，pk_msgで指定したメッセー
ジの先頭のメッセージヘッダ中のmsgpriフィールドの値が，TMIN_MPRI以上で，
対象メールボックスに送信できるメッセージ優先度の最大値以下でなければな
らない．


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

1. 仕様ベースのブラックボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.1. エラー条件のテストケース(FMP)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.2. 正常条件のテストケース(FMP)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━



■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

2. ソースコードの条件網羅確認

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.1. ソースコード
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ER
snd_mbx(ID mbxid, T_MSG *pk_msg)
{
	MBXCB	*p_mbxcb;
	TCB		*p_tcb;
	ER		ercd;
	bool_t	dspreq = false;
	PCB		*p_pcb;

	LOG_SND_MBX_ENTER(mbxid, pk_msg);
	CHECK_TSKCTX_UNL();
	CHECK_MBXID(mbxid);
	p_mbxcb = get_mbxcb(mbxid);
	CHECK_PAR((p_mbxcb->p_mbxinib->mbxatr & TA_MPRI) == 0U
					|| (TMIN_MPRI <= MSGPRI(pk_msg)
							&& MSGPRI(pk_msg) <= p_mbxcb->p_mbxinib->maxmpri));

	t_lock_cpu();
  retry:
	t_acquire_obj_lock(&GET_OBJLOCK(p_mbxcb));
	if (!queue_empty(&(p_mbxcb->wait_queue))) {
		p_tcb = (TCB *) queue_delete_next(&(p_mbxcb->wait_queue));
		if ((p_pcb = t_acquire_nested_tsk_lock(p_tcb, &GET_OBJLOCK(p_mbxcb))) == NULL){
			goto retry;
		}
		((WINFO_MBX *)(&(p_tcb->winfo_obj)))->pk_msg = pk_msg;
		if (wait_complete(p_tcb)) {
			dspreq = dispatch_request(p_pcb);
		}
		release_nested_tsk_lock(p_pcb);
		ercd = E_OK;
	}
	else if ((p_mbxcb->p_mbxinib->mbxatr & TA_MPRI) != 0U) {
		enqueue_msg_pri(&(p_mbxcb->pk_head), pk_msg);
		ercd = E_OK;
	}
	else {
		pk_msg->pk_next = NULL;
		if (p_mbxcb->pk_head != NULL) {
			p_mbxcb->pk_last->pk_next = pk_msg;
		}
		else {
			p_mbxcb->pk_head = pk_msg;
		}
		p_mbxcb->pk_last = pk_msg;
		ercd = E_OK;
	}
	ercd = E_OK;
	release_obj_lock(&GET_OBJLOCK(p_mbxcb));
	if (dspreq) {
		dispatch();
	}
	t_unlock_cpu();

  error_exit:
	LOG_SND_MBX_LEAVE(ercd);
	return(ercd);
}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.2. マクロを展開したAPIと呼び出す内部関数
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
[A] snd_mbx

00 : ER
01 : snd_mbx(ID mbxid, T_MSG *pk_msg)
02 : {
03 : 	MBXCB	*p_mbxcb;
04 : 	TCB		*p_tcb;
05 : 	ER		ercd;
06 : 	bool_t	dspreq = false;
07 : 	PCB		*p_pcb;
08 : 
09 : 	if (!sense_tskctx_unl()) {
10 : 		ercd = E_CTX;
11 : 		goto error_exit;
12 : 	}
13 : 	if (!(TMIN_MBXID <= (mbxid) && (mbxid) <= tmax_mbxid)) {
14 : 		ercd = E_ID;
15 : 		goto error_exit;
16 : 	}
17 : 	p_mbxcb = p_mbxcb_table[(uint_t)((mbxid) - TMIN_MBXID)];
18 : 	if (!((p_mbxcb->p_mbxinib->mbxatr & TA_MPRI) == 0U
19 : 							|| (TMIN_MPRI <= ((T_MSG_PRI *) pk_msg)->msgpri
20 : 									&& ((T_MSG_PRI *) pk_msg)->msgpri <= p_mbxcb->p_mbxinib->maxmpri))) {
21 : 		ercd = E_PAR;
22 : 		goto error_exit;
23 : 	}
24 : 	
25 : 	t_lock_cpu();
26 :   retry:
27 : 	t_acquire_obj_lock(&GET_OBJLOCK(p_mbxcb));
28 : 	if (!queue_empty(&(p_mbxcb->wait_queue))) {
29 : 		p_tcb = (TCB *) queue_delete_next(&(p_mbxcb->wait_queue));
30 : 		if ((p_pcb = t_acquire_nested_tsk_lock(p_tcb, &GET_OBJLOCK(p_mbxcb))) == NULL){
31 : 			goto retry;
32 : 		}
33 : 		((WINFO_MBX *)(&(p_tcb->winfo_obj)))->pk_msg = pk_msg;
34 : 		if (wait_complete(p_tcb)) {
35 : 			dspreq = dispatch_request(p_pcb);
36 : 		}
37 : 		release_nested_tsk_lock(p_pcb);
38 : 		ercd = E_OK;
39 : 	}
40 : 	else if ((p_mbxcb->p_mbxinib->mbxatr & TA_MPRI) != 0U) {
41 : 		enqueue_msg_pri(&(p_mbxcb->pk_head), pk_msg);
42 : 		ercd = E_OK;
43 : 	}
44 : 	else {
45 : 		pk_msg->pk_next = NULL;
46 : 		if (p_mbxcb->pk_head != NULL) {
47 : 			p_mbxcb->pk_last->pk_next = pk_msg;
48 : 		}
49 : 		else {
50 : 			p_mbxcb->pk_head = pk_msg;
51 : 		}
52 : 		p_mbxcb->pk_last = pk_msg;
53 : 		ercd = E_OK;
54 : 	}
55 : 	ercd = E_OK;
56 : 	release_obj_lock(&GET_OBJLOCK(p_mbxcb));
57 : 	if (dspreq) {
58 : 		dispatch();
59 : 	}
60 : 	t_unlock_cpu();
61 : 
62 :   error_exit:
63 : 	return(ercd);
64 : }


[B] enqueue_msg_pri

00 : Inline void
01 : enqueue_msg_pri(T_MSG **ppk_prevmsg_next, T_MSG *pk_msg)
02 : {
03 : 	T_MSG	*pk_nextmsg;
04 : 
05 : 	while ((pk_nextmsg = *ppk_prevmsg_next) != NULL) {
06 : 		if (((T_MSG_PRI *) pk_nextmsg)->msgpri > ((T_MSG_PRI *) pk_msg)->msgpri) {
07 : 			break;
08 : 		}
09 : 		ppk_prevmsg_next = &(pk_nextmsg->pk_next);
10 : 	}
11 : 	pk_msg->pk_next = pk_nextmsg;
12 : 	*ppk_prevmsg_next = pk_msg;
13 : }

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.3. 条件式
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(A1)  09 : !sense_tskctx_unl()
(A2)  13 : TMIN_MBXID <= (mbxid)
(A3)  13 : (mbxid) <= tmax_mbxid
(A4)  18 : (p_mbxcb->p_mbxinib->mbxatr & TA_MPRI) == 0U
(A5)  19 : TMIN_MPRI <= ((T_MSG_PRI *) pk_msg)->msgpri
(A6)  20 : ((T_MSG_PRI *) pk_msg)->msgpri <= p_mbxcb->p_mbxinib->maxmpri
(A7)  28 : !queue_empty(&(p_mbxcb->wait_queue))
(A8)  34 : wait_complete(p_tcb)
(A9)  40 : (p_mbxcb->p_mbxinib->mbxatr & TA_MPRI) != 0U
(A10) 46 : p_mbxcb->pk_head != NULL
(A11) 57 : dspreq

(B1)  05 : (pk_nextmsg = *ppk_prevmsg_next) != NULL
(B2)  06 : ((T_MSG_PRI *) pk_nextmsg)->msgpri > ((T_MSG_PRI *) pk_msg)->msgpri

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.4. 条件網羅表
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

             (A1) (A2) (A3) (A4) (A5) (A6) (A7) (A8) (A9) (B1) (B2) (A10)(A11)
(a-1)         T    D    D    D    D    D    D    D    D    D    D    D    D
(a-2)         T    D    D    D    D    D    D    D    D    D    D    D    D
(b-1)         F    F   D/T   D    D    D    D    D    D    D    D    D    D
(b-2)         F    T    F    D    D    D    D    D    D    D    D    D    D
(c-1)         F    T    T    F    F   D/T   D    D    D    D    D    D    D
(c-2)         F    T    T    F    T    F    D    D    D    D    D    D    D
(d-1-1-1)     F    T    T    T   D/F  D/F   T    T    D    D    D    D    T
(d-1-1-2)     F    T    T    T   D/F  D/F   T    F    D    D    D    D    F
(d-1-1-3)     F    T    T    T   D/F  D/F   T    F    D    D    D    D    F
(d-1-2)       F    T    T    T   D/F  D/F   T    F    D    D    D    D    F
(d-1-3)       F    T    T    T   D/F  D/F   T    F    D    D    D    D    F
(d-1-4)       F    T    T    T   D/F  D/F   T    F    D    D    D    D    F
(d-2-1-1)     F    T    T    T   D/F  D/F   T    T    D    D    D    D    T
(d-2-1-2)     F    T    T    T   D/F  D/F   T    F    D    D    D    D    F
(d-2-1-3)     F    T    T    T   D/F  D/F   T    F    D    D    D    D    F
(d-2-2)       F    T    T    T   D/F  D/F   T    F    D    D    D    D    F
(d-2-3)       F    T    T    T   D/F  D/F   T    F    D    D    D    D    F
(d-2-4)       F    T    T    T   D/F  D/F   T    F    D    D    D    D    F
(e-1-1)       F    T    T    T   D/F  D/F   F    D    F    D    D    F    F
(e-1-2)       F    T    T    T   D/F  D/F   F    D    F    D    D    T    F
(e-2-1)       F    T    T    F    T    T    F    D    T    F    D    D    F
(e-2-2)       F    T    T    F    T    T    F    D    T    T    T    D    F
(e-2-3)       F    T    T    F    T    T    F    D    T   TT   FT    D    F
(e-2-4)       F    T    T    F    T    T    F    D    T   TTF  FF    D    F
(W-a)         F    T    T    F    T    T    F    D    T   TTTF FFF   D    F
(F-a)         T    D    D    D    D    D    D    D    D    D    D    D    D
(F-b-1-1-1)   F    T    T    T   D/F  D/F   T    T    D    D    D    D    F
(F-b-1-1-2)   F    T    T    T   D/F  D/F   T    F    D    D    D    D    F
(F-b-1-1-3)   F    T    T    T   D/F  D/F   T    F    D    D    D    D    F
(F-b-1-1-4)   F    T    T    T   D/F  D/F   T    T    D    D    D    D    F
(F-b-1-1-5)   F    T    T    T   D/F  D/F   T    T    D    D    D    D    F
(F-b-1-1-6)   F    T    T    T   D/F  D/F   T    T    D    D    D    D    F
(F-b-1-2)     F    T    T    T   D/F  D/F   T    F    D    D    D    D    F
(F-b-1-3)     F    T    T    T   D/F  D/F   T    F    D    D    D    D    F
(F-b-1-4)     F    T    T    T   D/F  D/F   T    F    D    D    D    D    F
(F-b-1-5-1)   F    T    T    T   D/F  D/F   T    T    D    D    D    D    F
(F-b-1-5-2)   F    T    T    T   D/F  D/F   T    T    D    D    D    D    F
(F-b-1-5-3)   F    T    T    T   D/F  D/F   T    F    D    D    D    D    F
(F-b-2-1-1)   F    T    T    T   D/F  D/F   T    T    D    D    D    D    F
(F-b-2-1-2)   F    T    T    T   D/F  D/F   T    F    D    D    D    D    F
(F-b-2-1-3)   F    T    T    T   D/F  D/F   T    F    D    D    D    D    F
(F-b-2-1-4)   F    T    T    T   D/F  D/F   T    T    D    D    D    D    F
(F-b-2-1-5)   F    T    T    T   D/F  D/F   T    T    D    D    D    D    F
(F-b-2-1-6)   F    T    T    T   D/F  D/F   T    T    D    D    D    D    F
(F-b-2-2)     F    T    T    T   D/F  D/F   T    F    D    D    D    D    F
(F-b-2-3)     F    T    T    T   D/F  D/F   T    F    D    D    D    D    F
(F-b-2-4)     F    T    T    T   D/F  D/F   T    F    D    D    D    D    F
(F-b-2-5-1)   F    T    T    T   D/F  D/F   T    T    D    D    D    D    F
(F-b-2-5-2)   F    T    T    T   D/F  D/F   T    T    D    D    D    D    F
(F-b-2-5-3)   F    T    T    T   D/F  D/F   T    F    D    D    D    D    F
------------------------------------------------------------------------------
網羅          O    O    O    O    O    O    O    O    O    O    O    O    O


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

3. ホワイトボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
必要なし．



以上．
