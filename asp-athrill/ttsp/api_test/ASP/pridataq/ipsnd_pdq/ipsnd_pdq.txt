
	ipsnd_pdq テストシート

----------------------------------------------------------------------
 TTSP
     TOPPERS Test Suite Package

 Copyright (C) 2009-2011 by Center for Embedded Computing Systems
             Graduate School of Information Science, Nagoya Univ., JAPAN
 Copyright (C) 2009-2011 by Digital Craft Inc.
 Copyright (C) 2009-2011 by NEC Communication Systems, Ltd.
 Copyright (C) 2009-2011 by FUJISOFT INCORPORATED
 Copyright (C) 2009-2010 by Mitsuhiro Matsuura

 上記著作権者は，以下の (1)〜(3) の条件を満たす場合に限り，本ドキュメ
 ント（本ドキュメントを改変したものを含む．以下同じ）を使用・複製・改
 変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 (1) 本ドキュメントを利用する場合には，上記の著作権表示，この利用条件
     および下記の無保証規定が，そのままの形でドキュメント中に含まれて
     いること．
 (2) 本ドキュメントを改変する場合には，ドキュメントを改変した旨の記述
     を，改変後のドキュメント中に含めること．ただし，改変後のドキュメ
     ントが，TOPPERSプロジェクト指定の開発成果物である場合には，この限
     りではない．
 (3) 本ドキュメントの利用により直接的または間接的に生じるいかなる損害
     からも，上記著作権者およびTOPPERSプロジェクトを免責すること．また，
     本ドキュメントのユーザまたはエンドユーザからのいかなる理由に基づ
     く請求からも，上記著作権者およびTOPPERSプロジェクトを免責すること．

 本ドキュメントは，無保証で提供されているものである．上記著作権者およ
 びTOPPERSプロジェクトは，本ドキュメントに関して，特定の使用目的に対す
 る適合性も含めて，いかなる保証も行わない．また，本ドキュメントの利用
 により直接的または間接的に生じたいかなる損害に関しても，その責任を負
 わない．

 $Id: ipsnd_pdq.txt 2 2012-05-09 02:23:52Z nces-shigihara $
----------------------------------------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

0. API仕様

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

snd_pdq		優先度データキューへの送信〔T〕
psnd_pdq	優先度データキューへの送信（ポーリング）〔T〕
ipsnd_pdq	優先度データキューへの送信（ポーリング）〔I〕
tsnd_pdq	優先度データキューへの送信（タイムアウト付き）〔T〕

【C言語API】
	ER ercd = snd_pdq(ID pdqid, intptr_t data, PRI datapri)
	ER ercd = psnd_pdq(ID pdqid, intptr_t data, PRI datapri)
	ER ercd = ipsnd_pdq(ID pdqid, intptr_t data, PRI datapri)
	ER ercd = tsnd_pdq(ID pdqid, intptr_t data, PRI datapri, TMO tmout)

【パラメータ】
	ID			pdqid		対象優先度データキューのID番号
	intptr_t	data		送信データ
	PRI			datapri		送信データの優先度
	TMO			tmout		タイムアウト時間（tsnd_pdqの場合）

【リターンパラメータ】
	ER			ercd		正常終了（E_OK）またはエラーコード

【エラーコード】
	E_CTX			コンテキストエラー（非タスクコンテキストからの呼出
					し：ipsnd_pdqを除く，タスクコンテキストからの呼出し：
					ipsnd_pdqの場合，CPUロック状態からの呼出し，ディス
					パッチ保留状態からの呼出し：snd_pdqとtsnd_pdqの場合）
	E_NOSPT			未サポート機能（制約タスクからの呼出し：snd_pdqと
					tsnd_pdqの場合）
	E_ID			不正ID番号（pdqidが不正）
	E_PAR			パラメータエラー（datapriが不正，tmoutが不正：
					tsnd_pdqのみ）
	E_NOEXS〔D〕	オブジェクト未登録（対象優先度データキューが未登録）
	E_OACV〔P〕		オブジェクトアクセス違反（対象優先度データキューに
					対する通常操作1が許可されていない：ipsnd_pdqを除く）
	E_TMOUT			ポーリング失敗またはタイムアウト（snd_pdqを除く）
	E_RLWAI			待ち禁止状態または待ち状態の強制解除（snd_pdqと
					tsnd_pdqの場合）
	E_DLT			待ちオブジェクトの削除または再初期化（snd_pdqと
					tsnd_pdqの場合）

【機能】

pdqidで指定した優先度データキュー（対象優先度データキュー）に，dataで指
定したデータを，datapriで指定した優先度で送信する．具体的な振舞いは以下
の通り．

対象優先度データキューの受信待ち行列にタスクが存在する場合には，受信待
ち行列の先頭のタスクが，dataで指定したデータを受信し，待ち解除される．
待ち解除されたタスクには，待ち状態となったサービスコールからE_OKが返る．

対象優先度データキューの受信待ち行列にタスクが存在せず，優先度データ
キュー管理領域にデータを格納するスペースがある場合には，dataで指定した
データが，datapriで指定したデータの優先度順で優先度データキュー管理領域
に格納される．

対象優先度データキューの受信待ち行列にタスクが存在せず，優先度データ
キュー管理領域にデータを格納するスペースがない場合には，自タスクは優先
度データキューへの送信待ち状態となり，対象優先度データキューの送信待ち
行列につながれる．

datapriは，TMIN_DPRI以上で，対象データキューに送信できるデータ優先度の
最大値以下でなければならない．


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

1. 仕様ベースのブラックボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.1. エラー条件のテストケース
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(a) 不正なコンテキスト状態で呼出す場合．

    (a-1) タスクコンテキストから呼び出して，E_CTXエラーが返ること．

    (a-2) CPUロック状態で呼び出して，E_CTXエラーが返ること．

(b) pdqidが不正の時にE_IDが返ること．

    (b-1) pdqidが許容される最小値-1(=0)の時にE_IDが返ること．

    (b-2) pdqidが許容される最大値+1(TNUM_PDQID+1)の時にE_IDが返ること．

(c) datapriが不正の時にE_PARが返ること．

    (c-1) datapriが許容される最小値-1(TMIN_DPRI-1)の時に
          E_PARが返ること．

    (c-2) datapriが許容される最大値+1(DATA_PRI_MAX+1)の時に
          E_PARが返ること．

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.2. 正常条件のテストケース
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(d) ポーリング失敗の時に，E_TMOUTが返ること．

(e) 対象優先度データキューの受信待ち行列にタスクが存在する場合，
    受信待ち行列の先頭のタスクが，dataで指定したデータを受信し，
    待ち解除されること．
    (対象タスクとは，待ちタスクの待ち解除されたタスクのことを示す．)

    (e-1) 待ちタスクが1つの場合．(格納数は0)

          (e-1-1) 対象タスクの優先度が，実行状態のタスクより高い場合，
                  実行状態になること．

                  (e-1-1-1) 実行状態になること．

                  (e-1-1-2) ディスパッチ禁止状態の場合，
                            実行可能状態になること．

                  (e-1-1-3) 割込み優先度マスクが全解除でない場合，
                            実行可能状態になること．

          (e-1-2) 対象タスクの優先度が実行状態のタスクより低い場合，
                  実行可能状態となり，同じ優先度のタスクの最後に
                  つながれること．

          (e-1-3) 対象タスクの優先度が実行状態のタスクと同じ場合，
                  実行可能状態となり，同じ優先度のタスクの最後に
                  つながれること．

          (e-1-4) 対象タスクが，二重待ち状態の場合，強制待ちとなること．

          (e-1-5) 実行状態のタスクが存在しない場合，
                  対象タスクが実行状態となること．

    (e-2) 待ちタスクが2つの場合．(格納数は3)

          (e-2-1) 対象タスクの優先度が，実行状態のタスクより高い場合，
                  実行状態になること．

                  (e-2-1-1) 実行状態になること．

                  (e-2-1-2) ディスパッチ禁止状態の場合，
                            実行可能状態になること．

                  (e-2-1-3) 割込み優先度マスクが全解除でない場合，
                            実行可能状態になること．

          (e-2-2) 対象タスクの優先度が実行状態のタスクより低い場合，
                  実行可能状態となり，同じ優先度のタスクの最後に
                  つながれること．

          (e-2-3) 対象タスクの優先度が実行状態のタスクと同じ場合，
                  実行可能状態となり，同じ優先度のタスクの最後に
                  つながれること．

          (e-2-4) 対象タスクが，二重待ち状態の場合，強制待ちとなること．

          (e-2-5) 実行状態のタスクが存在しない場合，
                  対象タスクが実行状態となること．

(f) 対象優先度データキューの受信待ち行列にタスクが存在しなく，優先度
    データキュー管理領域にデータを格納するスペースがある場合には，
    dataで指定したデータが，datapriで指定したデータの優先度順で優先度
    データキュー管理領域に格納されること．

    (f-1) データがない場合は，先頭に格納されること．

    (f-2) 優先度データキューにデータ優先度が中→低の順でデータがあり，
          データ優先度が高のデータを送信する場合は，先頭に格納される
          こと．

    (f-3) 優先度データキューにデータ優先度が中→低の順でデータがあり，
          データ優先度が中のデータを送信する場合は，同じ優先度の
          データの最後につながれること．

    (f-4) 優先度データキューにデータ優先度が高→中の順でデータがあり，
          データ優先度が低のデータを送信する場合は，データの最後に
          つながれること．

【備考】

・「datapriは，TMIN_DPRI以上で，対象データキューに送信できるデータ優
  先度の最大値以下でなければならない．」は，エラーになる場合をテスト対
  象とする．


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

2. ソースコードの条件網羅確認

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.1. ソースコード
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ER
ipsnd_pdq(ID pdqid, intptr_t data, PRI datapri)
{
	PDQCB	*p_pdqcb;
	bool_t	reqdsp;
	ER		ercd;

	LOG_IPSND_PDQ_ENTER(pdqid, data, datapri);
	CHECK_INTCTX_UNL();
	CHECK_PDQID(pdqid);
	p_pdqcb = get_pdqcb(pdqid);
	CHECK_PAR(TMIN_DPRI <= datapri && datapri <= p_pdqcb->p_pdqinib->maxdpri);

	i_lock_cpu();
	if (send_pridata(p_pdqcb, data, datapri, &reqdsp)) {
		if (reqdsp) {
			reqflg = true;
		}
		ercd = E_OK;
	}
	else {
		ercd = E_TMOUT;
	}
	i_unlock_cpu();

  error_exit:
	LOG_IPSND_PDQ_LEAVE(ercd);
	return(ercd);
}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.2. マクロを展開したAPIと呼び出す内部関数
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
[A] ipsnd_pdq

00 : ER
01 : ipsnd_pdq(ID pdqid, intptr_t data, PRI datapri)
02 : {
03 : 	PDQCB	*p_pdqcb;
04 : 	bool_t	reqdsp;
05 : 	ER		ercd;
06 : 
07 : 	if (!sense_contex() || i_sense_lock()) {
08 :               ercd = E_CTX;
09 :               goto error_exit;
10 :    }
11 :    if (!((TMIN_PDQID <= (pdqid) && (pdqid) <= tmax_pdqid))) {
12 :               ercd = E_ID;
13 :               goto error_exit;  
14 :    }
15 : 	p_pdqcb = &(pdqcb_table[(uint_t)((pdqid) - TMIN_PDQID)])
16 : 	if(!(TMIN_DPRI <= datapri && datapri <= p_pdqcb->p_pdqinib->maxdpri)){
17 :                 ercd = E_PAR;
18 :                 goto error_exit;
19 :     }
20 : 
21 : 	i_lock_cpu();
22 : 	if (send_pridata(p_pdqcb, data, datapri, &reqdsp)) {
23 : 		if (reqdsp) {
24 : 			reqflg = true;
25 : 		}
26 : 		ercd = E_OK;
27 : 	}
28 : 	else {
29 : 		ercd = E_TMOUT;
30 : 	}
31 : 	i_unlock_cpu();
32 : 
33 :   error_exit:
34 : 	return(ercd);
35 : }

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.3. 条件式
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(A1) 07 : !sense_context()
(A2) 07 : t_sense_lock()
(A3) 11 : TMIN_PDQID <= (pdqid)
(A4) 11 : (pdqid) <= tmax_pdqid
(A5) 16 : TMIN_DPRI <= datapri
(A6) 16 : datapri <= p_pdqcb->p_pdqinib->maxdpri
(A7) 22 : send_pridata(p_pdqcb, data, datapti, &reqdsp)
(A8) 23 : reqdsp

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.4. 条件網羅表
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

           (A1) (A2) (A3) (A4) (A5) (A6) (A7) (A8)
(a-1)       T   D/F   D    D    D    D    D    D  
(a-2)       F    T    D    D    D    D    D    D  
(b-1)       F    F    F   D/T   D    D    D    D  
(b-2)       F    F    T    F    D    D    D    D  
(c-1)       F    F    T    T    F   D/T   D    D  
(c-2)       F    F    T    T    T    F    D    D  
(d)         F    F    T    T    T    T    F    D  
(e-1-1-1)   F    F    T    T    T    T    T    T  
(e-1-1-2)   F    F    T    T    T    T    T    F  
(e-1-1-3)   F    F    T    T    T    T    T    F  
(e-1-2)     F    F    T    T    T    T    T    F  
(e-1-3)     F    F    T    T    T    T    T    F  
(e-1-4)     F    F    T    T    T    T    T    F  
(e-1-5)     F    F    T    T    T    T    T    T  
(e-2-1-1)   F    F    T    T    T    T    T    T  
(e-2-1-2)   F    F    T    T    T    T    T    F  
(e-2-1-3)   F    F    T    T    T    T    T    F  
(e-2-2)     F    F    T    T    T    T    T    F  
(e-2-3)     F    F    T    T    T    T    T    F  
(e-2-4)     F    F    T    T    T    T    T    F  
(e-2-5)     F    F    T    T    T    T    T    T  
(f-1)       F    F    T    T    T    T    T    F  
(f-2)       F    F    T    T    T    T    T    F  
(f-3)       F    F    T    T    T    T    T    F  
(f-4)       F    F    T    T    T    T    T    F  
--------------------------------------------------
網羅        O    O    O    O    O    O    O    O  


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

3. ホワイトボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
必要なし．


以上．
