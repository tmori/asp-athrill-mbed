
	DEF_INH テストシート

----------------------------------------------------------------------
 TTSP
     TOPPERS Test Suite Package

 Copyright (C) 2009-2011 by Center for Embedded Computing Systems
             Graduate School of Information Science, Nagoya Univ., JAPAN
 Copyright (C) 2009-2011 by Digital Craft Inc.
 Copyright (C) 2009-2011 by NEC Communication Systems, Ltd.
 Copyright (C) 2009-2011 by FUJISOFT INCORPORATED
 Copyright (C) 2009-2010 by Mitsuhiro Matsuura

 上記著作権者は，以下の (1)〜(3) の条件を満たす場合に限り，本ドキュメ
 ント（本ドキュメントを改変したものを含む．以下同じ）を使用・複製・改
 変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 (1) 本ドキュメントを利用する場合には，上記の著作権表示，この利用条件
     および下記の無保証規定が，そのままの形でドキュメント中に含まれて
     いること．
 (2) 本ドキュメントを改変する場合には，ドキュメントを改変した旨の記述
     を，改変後のドキュメント中に含めること．ただし，改変後のドキュメ
     ントが，TOPPERSプロジェクト指定の開発成果物である場合には，この限
     りではない．
 (3) 本ドキュメントの利用により直接的または間接的に生じるいかなる損害
     からも，上記著作権者およびTOPPERSプロジェクトを免責すること．また，
     本ドキュメントのユーザまたはエンドユーザからのいかなる理由に基づ
     く請求からも，上記著作権者およびTOPPERSプロジェクトを免責すること．

 本ドキュメントは，無保証で提供されているものである．上記著作権者およ
 びTOPPERSプロジェクトは，本ドキュメントに関して，特定の使用目的に対す
 る適合性も含めて，いかなる保証も行わない．また，本ドキュメントの利用
 により直接的または間接的に生じたいかなる損害に関しても，その責任を負
 わない．

 $Id: DEF_INH.txt 2 2012-05-09 02:23:52Z nces-shigihara $
----------------------------------------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

0. API仕様

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

DEF_INH		割込みハンドラの定義〔S〕
def_inh		割込みハンドラの定義〔TD〕

【静的API】
	DEF_INH(INHNO inhno, { ATR inhatr, INTHDR inthdr })

【C言語API】
	ER ercd = def_inh(INHNO inhno, const T_DINH *pk_dinh)

【パラメータ】
	INHNO		inhno		割込みハンドラ番号
	T_DINH *	pk_dinh		割込みハンドラの定義情報を入れたパケットへ
							のポインタ（静的APIを除く）

　＊割込みハンドラの定義情報（パケットの内容）
	ATR			inhatr		割込みハンドラ属性
	INTHDR		inthdr		割込みハンドラの先頭番地

【リターンパラメータ】
	ER			ercd		正常終了（E_OK）またはエラーコード

【エラーコード】
	E_CTX〔s〕		コンテキストエラー（非タスクコンテキストからの呼出
					し，CPUロック状態からの呼出し）
	E_RSATR			予約属性（inhatrが不正または使用できない，属する保
					護ドメインかクラスが不正）
	E_OACV〔sP〕	オブジェクトアクセス違反（システム状態に対する管理
					操作が許可されていない）
	E_MACV〔sP〕	メモリアクセス違反（pk_dinhが指すメモリ領域への読出
					しアクセスが許可されていない）
	E_PAR			パラメータエラー（inhno，inthdrが不正）
	E_OBJ			オブジェクト状態エラー（条件については機能の項を参
					照すること）

【機能】

inhnoで指定した割込みハンドラ番号（対象割込みハンドラ番号）に対して，各
パラメータで指定した割込みハンドラ定義情報に従って，割込みハンドラを定
義する．ただし，def_inhにおいてpk_dinhをNULLにした場合には，対象割込み
ハンドラ番号に対する割込みハンドラの定義を解除する．

静的APIにおいては，inhnoとinhatrは整数定数式パラメータ，inthdrは一般定
数式パラメータである．

割込みハンドラを定義する場合（DEF_INHの場合およびdef_inhにおいて
pk_dinhをNULL以外にした場合）には，次のエラーが検出される．

対象割込みハンドラ番号に対応する割込み要求ラインの属性が設定されていな
い場合には，E_OBJエラーとなる．また，対象割込みハンドラ番号に対してすで
に割込みハンドラが定義されている場合と，対象割込みハンドラ番号に対応す
る割込み番号を対象に割込みサービスルーチンが登録されている場合にも，
E_OBJエラーとなる．

ターゲット定義の拡張で，カーネル管理外の割込みに対しても割込みハンドラ
を定義できる場合には，次のエラーが検出される．カーネル管理外の割込みハ
ンドラを対象として，inhatrにTA_NONKERNELを指定しない場合には，E_OBJエラー
となる．逆に，カーネル管理の割込みハンドラを対象として，inhatrに
TA_NONKERNELを指定した場合にも，E_OBJエラーとなる．また，ターゲット定義
でカーネル管理外に固定されている割込みハンドラがある場合には，それを対
象割込みハンドラに指定して，inhatrにTA_NONKERNELを指定しない場合には，
E_RSATRエラーとなる．逆に，ターゲット定義でカーネル管理に固定されている
割込みハンドラがある場合には，それを対象割込みハンドラに指定して，
inhatrにTA_NONKERNELを指定した場合には，E_RSATRエラーとなる．

保護機能対応カーネルにおいて，DEF_INHは，カーネルドメインの囲みの中に記
述しなければならない．そうでない場合には，E_RSATRエラーとなる．また，
def_inhで割込みハンドラを定義する場合には，割込みハンドラの属する保護ド
メインを設定する必要はなく，割込みハンドラ属性にTA_DOM(domid)を指定した
場合にはE_RSATRエラーとなる．ただし，TA_DOM(TDOM_SELF)を指定した場合に
は，指定が無視され，E_RSATRエラーは検出されない．

マルチプロセッサ対応カーネルで，登録する割込みハンドラの属するクラスの
初期割付けプロセッサが，その割込みが要求されるプロセッサでない場合には，
E_RSATRエラーとなる．また，ターゲット定義で，割込みハンドラが属すること
ができるクラスに制限がある場合がある．登録する割込みハンドラの属するク
ラスが，ターゲット定義の制限に合致しない場合にも，E_RSATRエラーとなる．

割込みハンドラの定義を解除する場合（def_inhにおいてpk_dinhをNULLにした
場合）で，対象割込みハンドラ番号に対して割込みハンドラが定義されていな
い場合には，E_OBJエラーとなる．また，対象割込みハンドラ番号に対して定義
された割込みハンドラが，静的APIで定義されたものである場合には，ターゲッ
ト定義でE_OBJエラーとなる場合がある．

ターゲット定義で，対象割込みハンドラを定義（または定義解除）できない場
合には，E_PARエラーとなる．具体的には，マルチプロセッサ対応カーネルにお
いて，def_inhを呼び出したタスクが割り付けられているプロセッサから，対象
割込みハンドラを定義（または定義解除）できない場合が，これに該当する．

静的APIにおいて，inthdrが不正である場合にE_PARエラーが検出されるか否か
は，ターゲット定義である．

【TOPPERS/ASPカーネルにおける規定】

ASPカーネルでは，DEF_INHのみをサポートする．

【TOPPERS/FMPカーネルにおける規定】

FMPカーネルでは，DEF_INHのみをサポートする．

【TOPPERS/HRP2カーネルにおける規定】

HRP2カーネルでは，DEF_INHのみをサポートする．

【μITRON4.0仕様との関係】

inthdrのデータ型をINTHDRに変更した．

def_inhによって定義済みの割込みハンドラを再定義しようとした場合に，
E_OBJエラーとすることにした．割込みハンドラの定義を変更するには，一度定
義を解除してから，再度定義する必要がある．


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

1. 仕様ベースのブラックボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.1. エラー条件のテストケース
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(a) inhatrがTA_NULL(=0)でもTA_NONKERNEL(=0x02)でもない時にE_RSATRが返る
    こと．

(b) inhnoが不正のとき，E_PARが返ること．

(c) オブジェクト状態エラーのときE_OBJエラーとなること．

    (c-1) inhnoに対応する割込み要求ラインの属性が設定されていない場合．

    (c-2) inhnoに対応する割込みハンドラが定義されている場合．

    (c-3) inhnoに対応する割込み番号を対象に割込みサービスルーチンが登録
          されている場合．

【備考】
・inthdrの不正は必要に応じてターゲット依存部で検出するものなので，不正
  なinthdrが指定されたの場合のE_PARのテストは行わない．
  http://dev.toppers.jp/trac/asp/ticket/124

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.2. 正常条件のテストケース
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(d) 各パラメータの内容に従って割込みハンドラが生成され，該当する割込み
    を受け付けたらハンドラが動作すること．


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

2. ソースコードの条件網羅確認

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.1. ソースコード
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
[A] kernel.tf

00 : $ 割込みハンドラに関するエラーチェック
01 : $i = 0$
02 : $FOREACH inhno INH.ORDER_LIST$
03 : $	// inhnoがDEF_INHに対する割込みハンドラ番号として正しくない場合（E_PAR）
04 : 	$IF !LENGTH(FIND(INHNO_DEFINH_VALID, INH.INHNO[inhno]))$
05 : 		$ERROR INH.TEXT_LINE[inhno]$E_PAR: $FORMAT(_("illegal %1% `%2%\' in %3%"), "inhno", INH.INHNO[inhno], "DEF_INH")$$END$
06 : 	$END$
07 : 
08 : $	// inhnoがDEF_INHによって設定済みの場合（E_OBJ）
09 : 	$j = 0$
10 : 	$FOREACH inhno2 INH.ORDER_LIST$
11 : 		$IF INH.INHNO[inhno] == INH.INHNO[inhno2] && j < i$
12 : 			$ERROR INH.TEXT_LINE[inhno]$E_OBJ: $FORMAT(_("%1% `%2%\' in %3% is duplicated"), "inhno", INH.INHNO[inhno], "DEF_INH")$$END$
13 : 		$END$
14 : 		$j = j + 1$
15 : 	$END$
16 : 
17 : $	// inhatrが（TA_NULL）でない場合（E_RSATR）
18 : 	$IF (INH.INHATR[inhno] & ~TARGET_INHATR) != 0$
19 : 		$ERROR INH.TEXT_LINE[inhno]$E_RSATR: $FORMAT(_("illegal %1% `%2%\' of %3% `%4%\' in %5%"), "inhatr", INH.INHATR[inhno], "inhno", INH.INHNO[inhno], "DEF_INH")$$END$
20 : 	$END$
21 : 
22 : $	// カーネル管理に固定されているinhnoに対して，inhatrにTA_NONKERNEL
23 : $	//　が指定されている場合（E_RSATR）
24 : 	$IF LENGTH(FIND(INHNO_FIX_KERNEL, inhno))$
25 : 		$IF (INH.INHATR[inhno] & TA_NONKERNEL) != 0$
26 : 			$ERROR INH.TEXT_LINE[inhno]$E_RSATR: $FORMAT(_("%1% `%2%\' must not be non-kernel interrupt"), "inhno", INH.INHNO[inhno])$$END$
27 : 		$END$
28 : 	$END$
29 : 
30 : $	// カーネル管理外に固定されているinhnoに対して，inhatrにTA_NONKERNEL
31 : $	// が指定されていない場合（E_RSATR）
32 : 	$IF LENGTH(FIND(INHNO_FIX_NONKERNEL, inhno))$
33 : 		$IF (INH.INHATR[inhno] & TA_NONKERNEL) == 0$
34 : 			$ERROR INH.TEXT_LINE[inhno]$E_RSATR: $FORMAT(_("%1% `%2%\' must be non-kernel interrupt"), "inhno", INH.INHNO[inhno])$$END$
35 : 		$END$
36 : 	$END$
37 : 
38 : 	$IF LENGTH(INTNO[INH.INHNO[inhno]])$
39 : 		$intno = INTNO[INH.INHNO[inhno]]$
40 : $		// inhnoに対応するintnoに対するCFG_INTがない場合（E_OBJ）
41 : 		$IF !LENGTH(INT.INTNO[intno])$
42 : 			$ERROR INH.TEXT_LINE[inhno]$E_OBJ: $FORMAT(_("%1% `%2%\' corresponding to %3% `%4%\' is not configured with %5%"), "intno", INT.INTNO[intno], "inhno", INH.INHNO[inhno], "CFG_INT")$$END$
43 : 		$ELSE$
44 : 			$IF (INH.INHATR[inhno] & TA_NONKERNEL) == 0$
45 : $				// inhatrにTA_NONKERNELが指定されておらず，inhnoに対応
46 : $				// するintnoに対してCFG_INTで設定された割込み優先度が
47 : $				// TMIN_INTPRIよりも小さい場合（E_OBJ）
48 : 				$IF INT.INTPRI[intno] < TMIN_INTPRI$
49 : 					$ERROR INT.TEXT_LINE[intno]$E_OBJ: $FORMAT(_("%1% `%2%\' configured for %3% `%4%\' is higher than %5%"), "intpri", INT.INTPRI[intno], "inhno", INH.INHNO[inhno], "TMIN_INTPRI")$$END$
50 : 				$END$
51 : 			$ELSE$
52 : $				// inhatrにTA_NONKERNELが指定されており，inhnoに対応
53 : $				// するintnoに対してCFG_INTで設定された割込み優先度が
54 : $				// TMIN_INTPRI以上である場合（E_OBJ）
55 : 				$IF INT.INTPRI[intno] >= TMIN_INTPRI$
56 : 					$ERROR INT.TEXT_LINE[intno]$E_OBJ: $FORMAT(_("%1% `%2%\' configured for %3% `%4%\' is lower than or equal to %5%"), "intpri", INT.INTPRI[intno], "inhno", INH.INHNO[inhno], "TMIN_INTPRI")$$END$
57 : 				$END$
58 : 			$END$
59 : 		$END$
60 : 	$END$
61 : 	$i = i + 1$
62 : $END$


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.2. マクロを展開したAPIと呼び出す内部関数
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
必要なし．

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.3. 条件式
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(A1) 04 : !LENGTH(FIND(INHNO_DEFINH_VALID, INH.INHNO[inhno]))
(A2) 11 : INH.INHNO[inhno] == INH.INHNO[inhno2]
(A3) 11 : j < i
(A4) 18 : (INH.INHATR[inhno] & ~TARGET_INHATR) != 0
(A5) 41 : !LENGTH(INT.INTNO[intno])
(A6) 44 : (INH.INHATR[inhno] & TA_NONKERNEL) == 0
(A7) 48 : INT.INTPRI[intno] < TMIN_INTPRI
(A8) 55 : INT.INTPRI[intno] >= TMIN_INTPRI

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.4. 条件網羅表
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

      (A1) (A2) (A3) (A4) (A5) (A6) (A7) (A8)
(a)    F    T    F    T    D    D    D    D
(b)    T    D    D    D    D    D    D    D
(c-1)  F    T    F    F    T    D    D    D
(c-2)  F    TT   FT   D    D    D    D    D
(c-3)  F    T    F    F    F    T    F    D
(d)    F    T    F    F    F    T    F    D
---------------------------------------------
網羅   O    X    O    O    O    X    X    X

【備考】
・(A6)(A8)はターゲット依存のため除外する．
・(A2)(A7)の網羅をさせるために，以下にホワイトボックステストを実施する．

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

3. ホワイトボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
3.1. 条件網羅表
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
      (A1) (A2) (A3) (A4) (A5) (A6) (A7) (A8)
(W_a)  F    TF   FD   F    F    T    F    D
(W_b)  F    T    F    F    F    T    T    D
---------------------------------------------
網羅   O    O    O    O    O    X    O    X


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
3.2. テストケース
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(W_a) 以下の条件が成り立つ時．

  ・2個以上のDEF_INHを定義したとき．

(W_b) 以下の条件が成り立つ時．

  ・inhatrにTA_NONKERNELを指定していない場合．
  ・inhnoに対応するintnoに対してCFG_INTで設定された割込み優先度が
    TMIN_INTPRIよりも小さい場合



以上．
