
	DEF_EXC テストシート

----------------------------------------------------------------------
 TTSP
     TOPPERS Test Suite Package

 Copyright (C) 2009-2011 by Center for Embedded Computing Systems
             Graduate School of Information Science, Nagoya Univ., JAPAN
 Copyright (C) 2009-2011 by Digital Craft Inc.
 Copyright (C) 2009-2011 by NEC Communication Systems, Ltd.
 Copyright (C) 2009-2011 by FUJISOFT INCORPORATED
 Copyright (C) 2009-2010 by Mitsuhiro Matsuura

 上記著作権者は，以下の (1)〜(3) の条件を満たす場合に限り，本ドキュメ
 ント（本ドキュメントを改変したものを含む．以下同じ）を使用・複製・改
 変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 (1) 本ドキュメントを利用する場合には，上記の著作権表示，この利用条件
     および下記の無保証規定が，そのままの形でドキュメント中に含まれて
     いること．
 (2) 本ドキュメントを改変する場合には，ドキュメントを改変した旨の記述
     を，改変後のドキュメント中に含めること．ただし，改変後のドキュメ
     ントが，TOPPERSプロジェクト指定の開発成果物である場合には，この限
     りではない．
 (3) 本ドキュメントの利用により直接的または間接的に生じるいかなる損害
     からも，上記著作権者およびTOPPERSプロジェクトを免責すること．また，
     本ドキュメントのユーザまたはエンドユーザからのいかなる理由に基づ
     く請求からも，上記著作権者およびTOPPERSプロジェクトを免責すること．

 本ドキュメントは，無保証で提供されているものである．上記著作権者およ
 びTOPPERSプロジェクトは，本ドキュメントに関して，特定の使用目的に対す
 る適合性も含めて，いかなる保証も行わない．また，本ドキュメントの利用
 により直接的または間接的に生じたいかなる損害に関しても，その責任を負
 わない．

 $Id: DEF_EXC.txt 2 2012-05-09 02:23:52Z nces-shigihara $
----------------------------------------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

0. API仕様

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

DEF_EXC		CPU例外ハンドラの定義〔S〕
def_exc		CPU例外ハンドラの定義〔TD〕

【静的API】
	DEF_EXC(EXCNO excno, { ATR excatr, EXCHDR exchdr })

【C言語API】
	ER ercd = def_exc(EXCNO excno, const T_DEXC *pk_dexc)

【パラメータ】
	EXCNO		excno		CPU例外ハンドラ番号
	T_DEXC *	pk_dexc		CPU例外ハンドラの定義情報を入れたパケットへ
							のポインタ（静的APIを除く）

　＊CPU例外ハンドラの定義情報（パケットの内容）
	ATR			excatr		CPU例外ハンドラ属性
	EXCHDR		exchdr		CPU例外ハンドラの先頭番地

【リターンパラメータ】
	ER			ercd		正常終了（E_OK）またはエラーコード

【エラーコード】
	E_CTX〔s〕		コンテキストエラー（非タスクコンテキストからの呼出
					し，CPUロック状態からの呼出し）
	E_RSATR			予約属性（excatrが不正または使用できない，属する保
					護ドメインかクラスが不正）
	E_PAR			パラメータエラー（excno，exchdrが不正）
	E_OACV〔sP〕	オブジェクトアクセス違反（システム状態に対する管理
					操作が許可されていない）
	E_MACV〔sP〕	メモリアクセス違反（pk_dexcが指すメモリ領域への読出
					しアクセスが許可されていない）
	E_OBJ			オブジェクト状態エラー（定義済みのCPU例外ハンドラ番
					号に対する再定義，未定義のCPU例外ハンドラ番号に対す
					る定義解除）

【機能】

excnoで指定したCPU例外ハンドラ番号（対象CPU例外ハンドラ番号）に対して，
各パラメータで指定したCPU例外ハンドラ定義情報に従って，CPU例外ハンドラ
を定義する．ただし，def_excにおいてpk_dexcをNULLにした場合には，対象
CPU例外ハンドラ番号に対するCPU例外ハンドラの定義を解除する．

静的APIにおいては，excnoとexcatrは整数定数式パラメータ，exchdrは一般定
数式パラメータである．

CPU例外ハンドラを定義する場合（DEF_EXCの場合およびdef_excにおいて
pk_dexcをNULL以外にした場合）で，対象CPU例外ハンドラ番号に対してすでに
CPU例外ハンドラが定義されている場合には，E_OBJエラーとなる．

保護機能対応カーネルにおいて，DEF_EXCは，カーネルドメインの囲みの中に記
述しなければならない．そうでない場合には，E_RSATRエラーとなる．また，
def_excでCPU例外ハンドラを定義する場合には，CPU例外ハンドラの属する保護
ドメインを設定する必要はなく，CPU例外ハンドラ属性にTA_DOM(domid)を指定
した場合にはE_RSATRエラーとなる．ただし，TA_DOM(TDOM_SELF)を指定した場
合には，指定が無視され，E_RSATRエラーは検出されない．

マルチプロセッサ対応カーネルで，登録するCPU例外ハンドラの属するクラスの
初期割付けプロセッサが，そのCPU例外が発生するプロセッサでない場合には，
E_RSATRエラーとなる．

CPU例外ハンドラの定義を解除する場合（def_excにおいてpk_dexcをNULLにした
場合）で，対象CPU例外ハンドラ番号に対してCPU例外ハンドラが定義されてい
ない場合には，E_OBJエラーとなる．また，対象CPU例外ハンドラ番号に対して
定義されたCPU例外ハンドラが，静的APIで定義されたものである場合には，ター
ゲット定義でE_OBJエラーとなる場合がある．

静的APIにおいて，exchdrが不正である場合にE_PARエラーが検出されるか否か
は，ターゲット定義である．

【TOPPERS/ASPカーネルにおける規定】

ASPカーネルでは，DEF_EXCのみをサポートする．

【TOPPERS/FMPカーネルにおける規定】

FMPカーネルでは，DEF_EXCのみをサポートする．

【TOPPERS/HRP2カーネルにおける規定】

HRP2カーネルでは，DEF_EXCのみをサポートする．

【μITRON4.0仕様との関係】

def_excによって，定義済みのCPU例外ハンドラを再定義しようとした場合に，
E_OBJエラーとすることにした．


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

1. 仕様ベースのブラックボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.1. エラー条件のテストケース
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(a) excatrが不正の時にE_RSATRが返ること．

(b) excnoが不正の時にE_PARが返ること．

(c) excnoで指定したCPU例外ハンドラが登録済みのときにE_OBJが返ること．

【備考】
・exchdrの不正は必要に応じてターゲット依存部で検出するものなので，不正
  なexchdrが指定されたの場合のE_PARのテストは行わない．
  http://dev.toppers.jp/trac/asp/ticket/124

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.2. 正常条件のテストケース
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(d) 生成したCPU例外ハンドラが，CPU例外発生時に起動すること．

【備考】
・CPU例外ハンドラにはref_XXXのサービスコールが存在しないため，
  実際にCPU例外ハンドラが起動することのみ確認する．


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

2. ソースコードの条件網羅確認

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.1. ソースコード
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
[A] kernel.tf

00 : $ CPU例外ハンドラに関するエラーチェック
01 : $i = 0$
02 : $FOREACH excno EXC.ORDER_LIST$
03 : $	// excnoがDEF_EXCに対するCPU例外ハンドラ番号として正しくない場合（E_PAR）
04 : 	$IF !LENGTH(FIND(EXCNO_DEFEXC_VALID, EXC.EXCNO[excno]))$
05 : 		$ERROR EXC.TEXT_LINE[excno]$E_PAR: $FORMAT(_("illegal %1% `%2%\' in %3%"), "excno", EXC.EXCNO[excno], "DEF_EXC")$$END$
06 : 	$END$
07 : 
08 : $	// excnoがDEF_EXCによって設定済みの場合（E_OBJ）
09 : 	$j = 0$
10 : 	$FOREACH excno2 EXC.ORDER_LIST$
11 : 		$IF EXC.EXCNO[excno] == EXC.EXCNO[excno2] && j < i$
12 : 			$ERROR EXC.TEXT_LINE[excno]$E_OBJ: $FORMAT(_("%1% `%2%\' in %3% is duplicated"), "excno", EXC.EXCNO[excno], "DEF_EXC")$$END$
13 : 		$END$
14 : 		$j = j + 1$
15 : 	$END$
16 : 
17 : $	// excatrが（TA_NULL）でない場合（E_RSATR）
18 : 	$IF (EXC.EXCATR[excno] & ~TARGET_EXCATR) != 0$
19 : 		$ERROR EXC.TEXT_LINE[excno]$E_RSATR: $FORMAT(_("illegal %1% `%2%\' of %3% `%4%\' in %5%"), "excatr", EXC.EXCATR[excno], "excno", EXC.EXCNO[excno], "DEF_EXC")$$END$
20 : 	$END$
21 : 	$i = i + 1$
22 : $END$

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.2. マクロを展開したAPIと呼び出す内部関数
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
必要なし．

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.3. 条件式
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(A1) 04 : !LENGTH(FIND(EXCNO_DEFEXC_VALID, EXC.EXCNO[excno]))
(A2) 11 : EXC.EXCNO[excno] == EXC.EXCNO[excno2]
(A3) 11 : j < i
(A4) 18 : (EXC.EXCATR[excno] & ~TARGET_EXCATR) != 0

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.4. 条件網羅表
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

     (A1) (A2) (A3) (A4)
(a)   F    T    F    T
(b)   T    D    D    D
(c)   F    TT   FT   D
(d)   F    T    F    F
------------------------
網羅  O    X    O    O


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

3. ホワイトボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
3.1. 条件網羅表
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

      (A1) (A2) (A3) (A4)
(W-a)  F    TF   FD   F
-------------------------
網羅   O    O    O    O

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
3.2. テストケース
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(W_a) 以下の条件が成り立つ時．

  ・2個以上のDEF_EXCを定義したとき．



以上．
