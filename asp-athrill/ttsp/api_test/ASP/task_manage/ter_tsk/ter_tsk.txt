
	ter_tsk テストシート

----------------------------------------------------------------------
 TTSP
     TOPPERS Test Suite Package

 Copyright (C) 2009-2011 by Center for Embedded Computing Systems
             Graduate School of Information Science, Nagoya Univ., JAPAN
 Copyright (C) 2009-2011 by Digital Craft Inc.
 Copyright (C) 2009-2011 by NEC Communication Systems, Ltd.
 Copyright (C) 2009-2011 by FUJISOFT INCORPORATED
 Copyright (C) 2009-2010 by Mitsuhiro Matsuura

 上記著作権者は，以下の (1)〜(3) の条件を満たす場合に限り，本ドキュメ
 ント（本ドキュメントを改変したものを含む．以下同じ）を使用・複製・改
 変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 (1) 本ドキュメントを利用する場合には，上記の著作権表示，この利用条件
     および下記の無保証規定が，そのままの形でドキュメント中に含まれて
     いること．
 (2) 本ドキュメントを改変する場合には，ドキュメントを改変した旨の記述
     を，改変後のドキュメント中に含めること．ただし，改変後のドキュメ
     ントが，TOPPERSプロジェクト指定の開発成果物である場合には，この限
     りではない．
 (3) 本ドキュメントの利用により直接的または間接的に生じるいかなる損害
     からも，上記著作権者およびTOPPERSプロジェクトを免責すること．また，
     本ドキュメントのユーザまたはエンドユーザからのいかなる理由に基づ
     く請求からも，上記著作権者およびTOPPERSプロジェクトを免責すること．

 本ドキュメントは，無保証で提供されているものである．上記著作権者およ
 びTOPPERSプロジェクトは，本ドキュメントに関して，特定の使用目的に対す
 る適合性も含めて，いかなる保証も行わない．また，本ドキュメントの利用
 により直接的または間接的に生じたいかなる損害に関しても，その責任を負
 わない．

 $Id: ter_tsk.txt 2 2012-05-09 02:23:52Z nces-shigihara $
----------------------------------------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

0. API仕様

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

ter_tsk タスクの強制終了〔T〕

【C言語API】
    ER ercd = ter_tsk(ID tskid)

【パラメータ】
    ID          tskid       対象タスクのID番号

【リターンパラメータ】
    ER          ercd        正常終了(E_OK)またはエラーコード

【エラーコード】
    E_CTX           コンテキストエラー(非タスクコンテキストからの呼出
                    し，CPUロック状態からの呼出し)
    E_ID            不正ID番号(tskidが不正)
    E_NOEXS〔D〕    オブジェクト未登録(対象タスクが未登録)
    E_OACV〔P〕     オブジェクトアクセス違反(対象タスクに対する通常操
                    作2が許可されていない)
    E_ILUSE         サービスコール不正使用(対象タスクが自タスク)
    E_OBJ           オブジェクト状態エラー(対象タスクが休止状態，対象
                    タスクが自タスクと異なるプロセッサに割り付けられて
                    いる）

【機能】

tskidで指定したタスク(対象タスク)を終了させる．具体的な振舞いは以下の
通り．

対象タスクが休止状態でない場合には，対象タスクに対してタスク終了時に行
うべき処理が行われ，対象タスクは休止状態になる．さらに，対象タスクの起
動要求キューイング数が0でない場合には，対象タスクに対してタスク起動時に
行うべき処理が行われ，対象タスクは実行できる状態になる．またこの時，起動
要求キューイング数から1が減ぜられる．

対象タスクが休止状態である場合には，E_OBJエラーとなる．また，対象タスク
が自タスクの場合には，E_ILUSEエラーとなる．

マルチプロセッサ対応カーネルでは，対象タスクは，自タスクと同じプロセッ
サに割り付けられているタスクに限られる．対象タスクが自タスクと異なるプ
ロセッサに割り付けられている場合には，E_OBJエラーとなる．

【備考】マルチプロセッサの場合は，ここでは分析しない

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

1. 仕様ベースのブラックボックステスト(シングルプロセッサ)

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.1. エラー条件のテストケース
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(a) ディスパッチ保留状態で呼出す場合．

    (a-1) 非タスクコンテキストから呼び出して，E_CTXエラーが返ること．

    (a-2) CPUロック状態で呼び出して，E_CTXエラーが返ること．

(b) tskidが不正の時にE_IDが返ること．

    (b-1) tskidが許容される最小値-1(=0)の時にE_IDが返ること．

    (b-2) tskidが許容される最大値+1(TNUM_TSKID+1)の時にE_IDが返ること．

(c) 対象タスクが自タスクの時にE_ILUSEが返ること．

(d) 対象タスクが休止状態の時E_OBJが返ること.

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.2. 正常条件のテストケース
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(e) 対象タスクが休止状態でない場合かつ対象タスクの起動要求キューイング
    数が0の場合，対象タスクに対してタスク終了時に行うべき処理が行わ
    れ，対象タスクは休止状態になること．

   (e-1) 対象タスクが実行可能状態の場合は，休止状態になる．

   (e-2) 対象タスクが起床待ち状態の場合は，休止状態になる．

   (e-3) 対象タスクが時間経過待ち状態の場合は，休止状態になる．

   (e-4) 対象タスクがセマフォ資源待ち(タイムアウト無)の場合は，
         休止状態になる.

   (e-5) 対象タスクがセマフォ資源待ち(タイムアウト有)の場合は，
         休止状態になる.

   (e-6) 対象タスクが強制待ち状態の場合は，休止状態になる．

   (e-7) 対象タスクが二重待ち状態(起床待ち)の場合は，休止状態になる．

   (e-8) 対象タスクが二重待ち状態(時間経過待ち)の場合は，休止状態にな
         る．

(f) 対象タスクが休止状態でない場合かつ対象タスクの起動要求キューイング
    数が1である場合，対象タスクに対してタスク起動時に行うべき処理が行わ
    れ，対象タスクは実行できる状態になる．またこの時，起動要求キューイ
    ング数から1が減ぜられること．

    (f-1) 対象タスクが実行可能状態の場合は，実行可能状態になること．

    (f-2) 対象タスクが起床待ち状態場合

          (f-2-1) 対象タスクの優先度が自タスクより高い場合は，実行状態
                  になること．

                  (f-2-1-1) 実行状態になること．

                  (f-2-1-2) ディスパッチ禁止状態の場合は，
                            実行可能状態になる．

                  (f-2-1-3) 割込み優先度マスクが全解除でな
                            い場合，実行可能状態になる 

          (f-2-2) 対象タスクの優先度が自タスクよりより低い場合は，実行可
                  能状態になること．

          (f-2-3) 対象タスクの優先度が自タスクと同じ場合は，実行可
                  能状態になること．

    (f-3) 対象タスクが時間経過待ち状態場合．

          (f-3-1) 対象タスクの優先度が自タスクより高い場合は，実行状態
                  になること．

                  (f-3-1-1) 実行状態になること．

                  (f-3-1-2) ディスパッチ禁止状態の場合は，
                            実行可能状態になる．

                  (f-3-1-3) 割込み優先度マスクが全解除でな
                            い場合，実行可能状態になる 

          (f-3-2) 対象タスクの優先度が自タスクより低い場合は，実行可
                  能状態になること．

          (f-3-3) 対象タスクの優先度が自タスクと同じ場合は，実行可
                  能状態になること．

    (f-4) 対象タスクがセマフォ獲得待ち状態場合．(タイムアウト無)

          (f-4-1) 対象タスクの優先度が自タスクより高い場合は，実行状態
                  になること．

                  (f-4-1-1) 実行状態になること．

                  (f-4-1-2) ディスパッチ禁止状態の場合は，
                            実行可能状態になる．

                  (f-4-1-3) 割込み優先度マスクが全解除でな
                            い場合，実行可能状態になる 

          (f-4-2) 対象タスクの優先度が自タスクより低い場合は，実行可
                  能状態になること．

          (f-4-3) 対象タスクの優先度が自タスクと同じ場合は，実行可
                  能状態になること．

    (f-5) 対象タスクがセマフォ獲得待ち状態場合．(タイムアウト有)

          (f-5-1) 対象タスクの優先度が自タスクより高い場合は，実行状態
                  になること．

                  (f-5-1-1) 実行状態になること．

                  (f-5-1-2) ディスパッチ禁止状態の場合は，
                            実行可能状態になる．

                  (f-5-1-3) 割込み優先度マスクが全解除でな
                            い場合，実行可能状態になる 

          (f-5-2) 対象タスクの優先度が自タスクより低い場合は，実行可
                  能状態になること．

          (f-5-3) 対象タスクの優先度が自タスクと同じ場合は，実行可
                  能状態になること．

    (f-6) 対象タスクが強制待ち状態場合．

          (f-6-1) 対象タスクの優先度が自タスクより高い場合は，実行状態
                  になること．

                  (f-6-1-1) 実行状態になること．

                  (f-6-1-2) ディスパッチ禁止状態の場合は，
                            実行可能状態になる．

                  (f-6-1-3) 割込み優先度マスクが全解除でな
                            い場合，実行可能状態になる 

          (f-6-2) 対象タスクの優先度が自タスクより低い場合は，実行可
                  能状態になること．

          (f-6-3) 対象タスクの優先度が自タスクと同じ場合は，実行可
                  能状態になること．

    (f-7) 対象タスクが二重待ち状態場合．(起床待ち)

          (f-7-1) 対象タスクの優先度が自タスクより高い場合は，実行状態
                  になること．

                  (f-7-1-1) 実行状態になること．

                  (f-7-1-2) ディスパッチ禁止状態の場合は，
                            実行可能状態になる．

                  (f-7-1-3) 割込み優先度マスクが全解除でな
                            い場合，実行可能状態になる 

          (f-7-2) 対象タスクの優先度が自タスクより低い場合は，実行可
                  能状態になること．

          (f-7-3) 対象タスクの優先度が自タスクと同じ場合は，実行可
                  能状態になること．

    (f-8) 対象タスクが二重待ち状態場合．(時間経過待ち)

          (f-8-1) 対象タスクの優先度が自タスクより高い場合は，実行状態
                  になること．

                  (f-8-1-1) 実行状態になること．

                  (f-8-1-2) ディスパッチ禁止状態の場合は，
                            実行可能状態になる．

                  (f-8-1-3) 割込み優先度マスクが全解除でな
                            い場合，実行可能状態になる 

          (f-8-2) 対象タスクの優先度が自タスクより低い場合は，実行可
                  能状態になること．

          (f-8-3) 対象タスクの優先度が自タスクと同じ場合は，実行可
                  能状態になること．


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

2. ホワイトボックステスト(ターゲット非依存部，シングルプロセッサ)

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.1. ソースコード
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ER
ter_tsk(ID tskid)
{
	TCB		*p_tcb;
	ER		ercd;

	LOG_TER_TSK_ENTER(tskid);
	CHECK_TSKCTX_UNL();
	CHECK_TSKID(tskid);
	p_tcb = get_tcb(tskid);
	CHECK_NONSELF(p_tcb);

	t_lock_cpu();
	if (TSTAT_DORMANT(p_tcb->tstat)) {
		ercd = E_OBJ;
	}
	else {
		if (TSTAT_RUNNABLE(p_tcb->tstat)) {
			/*
			 *  p_tcbは自タスクでないため，（シングルプロセッサでは）実
			 *  行状態でなく，make_non_runnable(p_tcb)でタスクディスパッ
			 *  チが必要になることはない．
			 */
			(void) make_non_runnable(p_tcb);
		}
		else if (TSTAT_WAITING(p_tcb->tstat)) {
			wait_dequeue_wobj(p_tcb);
			wait_dequeue_tmevtb(p_tcb);
		}
		make_dormant(p_tcb);
		if (p_tcb->actque) {
			p_tcb->actque = false;
			if (make_active(p_tcb)) {
				dispatch();
			}
		}
		ercd = E_OK;
	}
	t_unlock_cpu();

  error_exit:
	LOG_TER_TSK_LEAVE(ercd);
	return(ercd);
}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.2. マクロを展開したAPIと呼び出す内部関数
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
[A] ter_tsk

00 : ER
01 : ter_tsk(ID tskid)
02 : {
03 : 	TCB		*p_tcb;
04 : 	ER		ercd;
05 : 
06 : 	if (sense_context() || t_sense_lock()) { 
07 : 	    ercd = E_CTX; 
08 : 	    goto error_exit;
09 : 	}
10 : 	if (!(TMIN_TSKID <= (tskid) && (tskid) <= tmax_tskid)) {
11 :           ercd = E_ID;
12 :           goto error_exit;
13 :    } 
14 : 	p_tcb = (&(tcb_table[((uint_t)((tskid) - TMIN_TSKID))]));
15 : 	if ((p_tcb) == p_runtsk) {  
16 :       ercd = E_ILUSE; /* サービスコール不正使用 */
17 : 	   goto error_exit;
18 : 	}
19 : 
20 : 	t_lock_cpu();
21 : 	if ((p_tcb->tstat) == TS_DORMANT){
22 : 		ercd = E_OBJ;
23 : 	}
24 : 	else {
25 : 		if (((p_tcb->tstat) & TS_RUNNABLE) != 0U) {
26 : 			/*
27 : 			 *  p_tcbは自タスクでないため，（シングルプロセッサでは）実
28 : 			 *  行状態でなく，make_non_runnable(p_tcb)でタスクディスパッ
29 : 			 *  チが必要になることはない．
30 : 			 */
31 : 			(void) make_non_runnable(p_tcb);
32 : 		}
33 : 		else if (((p_tcb->tstat) & TS_WAITING) != 0U) {
34 : 			wait_dequeue_wobj(p_tcb);
35 : 			wait_dequeue_tmevtb(p_tcb);
36 : 		}
37 : 		make_dormant(p_tcb);
38 : 		if (p_tcb->actque) {
39 : 			p_tcb->actque = false;
40 : 			if (make_active(p_tcb)) {
41 : 				dispatch();
42 : 			}
43 : 		}
39 : 		ercd = E_OK;
40 : 	}
41 : 	t_unlock_cpu();
42 : 
43 : 	error_exit:
44 : 	return(ercd);
45 : }

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.3. 条件式
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(A1)  06 : sense_context() 
(A2)  06 : t_sense_lock() 
(A3)  10 : TMIN_TSKID <= tskid 
(A4)  10 : tskid <= tmax_tskid 
(A5)  15 : (p_tcb) == p_runtsk 
(A6)  21 : (p_tcb->tstat) == TS_DORMANT
(A7)  25 : ((p_tcb->tstat) & TS_RUNNABLE) != 0U
(A8)  33 : ((p_tcb->tstat) & TS_WAITING) != 0U
(A9)  38 : p_tcb->actque
(A10) 40 : make_active(p_tcb)

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.4. 条件網羅の確認
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

           (A1) (A2) (A3) (A4) (A5) (A6) (A7) (A8) (A9) (A10)
(a-1)       T   D/F   D    D    D    D    D    D    D    D
(a-2)       F    T    D    D    D    D    D    D    D    D
(b-1)       F    F    F   D/T   D    D    D    D    D    D
(b-2)       F    F    T    F    D    D    D    D    D    D
(c)         F    F    T    T    T    D    D    D    D    D
(d)         F    F    T    T    F    T    D    D    D    D
(e-1)       F    F    T    T    F    F    T    D    F    D
(e-2)       F    F    T    T    F    F    F    T    F    D
(e-3)       F    F    T    T    F    F    F    T    F    D
(e-4)       F    F    T    T    F    F    F    T    F    D
(e-5)       F    F    T    T    F    F    F    T    F    D
(e-6)       F    F    T    T    F    F    F    F    F    D
(e-7)       F    F    T    T    F    F    F    T    F    D
(e-8)       F    F    T    T    F    F    F    T    F    D
(f-1)       F    F    T    T    F    F    T    D    T    F
(f-2-1-1)   F    F    T    T    F    F    F    T    T    T
(f-2-1-2)   F    F    T    T    F    F    F    T    T    F
(f-2-1-3)   F    F    T    T    F    F    F    T    T    F
(f-2-2)     F    F    T    T    F    F    F    T    T    F
(f-2-3)     F    F    T    T    F    F    F    T    T    F
(f-3-1-1)   F    F    T    T    F    F    F    T    T    T
(f-3-1-2)   F    F    T    T    F    F    F    T    T    F
(f-3-1-3)   F    F    T    T    F    F    F    T    T    F
(f-3-2)     F    F    T    T    F    F    F    T    T    F
(f-3-3)     F    F    T    T    F    F    F    T    T    F
(f-4-1-1)   F    F    T    T    F    F    F    T    T    T
(f-4-1-2)   F    F    T    T    F    F    F    T    T    F
(f-4-1-3)   F    F    T    T    F    F    F    T    T    F
(f-4-2)     F    F    T    T    F    F    F    T    T    F
(f-4-3)     F    F    T    T    F    F    F    T    T    F
(f-5-1-1)   F    F    T    T    F    F    F    T    T    T
(f-5-1-2)   F    F    T    T    F    F    F    T    T    F
(f-5-1-3)   F    F    T    T    F    F    F    T    T    F
(f-5-2)     F    F    T    T    F    F    F    T    T    F
(f-5-3)     F    F    T    T    F    F    F    T    T    F
(f-6-1-1)   F    F    T    T    F    F    F    F    T    T
(f-6-1-2)   F    F    T    T    F    F    F    F    T    F
(f-6-1-3)   F    F    T    T    F    F    F    F    T    F
(f-6-2)     F    F    T    T    F    F    F    F    T    F
(f-6-3)     F    F    T    T    F    F    F    F    T    F
(f-7-1-1)   F    F    T    T    F    F    F    T    T    T
(f-7-1-2)   F    F    T    T    F    F    F    T    T    F
(f-7-1-3)   F    F    T    T    F    F    F    T    T    F
(f-7-2)     F    F    T    T    F    F    F    T    T    F
(f-7-3)     F    F    T    T    F    F    F    T    T    F
(f-8-1-1)   F    F    T    T    F    F    F    T    T    T
(f-8-1-2)   F    F    T    T    F    F    F    T    T    F
(f-8-1-3)   F    F    T    T    F    F    F    T    T    F
(f-8-2)     F    F    T    T    F    F    F    T    T    F
(f-8-3)     F    F    T    T    F    F    F    T    T    F
---------------------------------------------------------------
網羅        O    O    O    O    O    O    O    O    O    O


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

3. ホワイトボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
必要なし．



以上．
