
	can_act テストシート

----------------------------------------------------------------------
 TTSP
     TOPPERS Test Suite Package

 Copyright (C) 2009-2011 by Center for Embedded Computing Systems
             Graduate School of Information Science, Nagoya Univ., JAPAN
 Copyright (C) 2009-2011 by Digital Craft Inc.
 Copyright (C) 2009-2011 by NEC Communication Systems, Ltd.
 Copyright (C) 2009-2011 by FUJISOFT INCORPORATED
 Copyright (C) 2009-2010 by Mitsuhiro Matsuura

 上記著作権者は，以下の (1)〜(3) の条件を満たす場合に限り，本ドキュメ
 ント（本ドキュメントを改変したものを含む．以下同じ）を使用・複製・改
 変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 (1) 本ドキュメントを利用する場合には，上記の著作権表示，この利用条件
     および下記の無保証規定が，そのままの形でドキュメント中に含まれて
     いること．
 (2) 本ドキュメントを改変する場合には，ドキュメントを改変した旨の記述
     を，改変後のドキュメント中に含めること．ただし，改変後のドキュメ
     ントが，TOPPERSプロジェクト指定の開発成果物である場合には，この限
     りではない．
 (3) 本ドキュメントの利用により直接的または間接的に生じるいかなる損害
     からも，上記著作権者およびTOPPERSプロジェクトを免責すること．また，
     本ドキュメントのユーザまたはエンドユーザからのいかなる理由に基づ
     く請求からも，上記著作権者およびTOPPERSプロジェクトを免責すること．

 本ドキュメントは，無保証で提供されているものである．上記著作権者およ
 びTOPPERSプロジェクトは，本ドキュメントに関して，特定の使用目的に対す
 る適合性も含めて，いかなる保証も行わない．また，本ドキュメントの利用
 により直接的または間接的に生じたいかなる損害に関しても，その責任を負
 わない．

 $Id: can_act.txt 2 2012-05-09 02:23:52Z nces-shigihara $
----------------------------------------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

0. API仕様

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

can_act		タスク起動要求のキャンセル〔T〕

【C言語API】
	ER_UINT	actcnt = can_act(ID tskid)

【パラメータ】
	ID			tskid		対象タスクのID番号

【リターンパラメータ】
	ER_UINT		actcnt		キューイングされていた起動要求の数（正の値
							または0）またはエラーコード

【エラーコード】
	E_CTX			コンテキストエラー（非タスクコンテキストからの呼出
					し，CPUロック状態からの呼出し）
	E_ID			不正ID番号（tskidが不正）
	E_NOEXS〔D〕	オブジェクト未登録（対象タスクが未登録）
	E_OACV〔P〕		オブジェクトアクセス違反（対象タスクに対する通常操
					作1が許可されていない）

【機能】

tskidで指定したタスク（対象タスク）に対する処理されていない起動要求をす
べてキャンセルし，キャンセルした起動要求の数を返す．具体的な振舞いは以
下の通り．

対象タスクの起動要求キューイング数が0に設定され，0に設定する前の起動要
求キューイング数が，サービスコールの返値として返される．また，マルチプ
ロセッサ対応カーネルにおいては，対象タスクの次回起動時の割付けプロセッ
サが未設定状態に戻される．

tskidにTSK_SELF（＝0）を指定すると，自タスクが対象タスクとなる．


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

1. 仕様ベースのブラックボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.1. エラー条件のテストケース
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(a) ディスパッチ保留状態で呼出す場合．

    (a-1) 非タスクコンテキストから呼び出して，E_CTXエラーが返ること．

    (a-2) CPUロック状態で呼び出して，E_CTXエラーが返ること．

(b) tskidが不正の時にE_IDが返ること．

    (b-1) tskidが許容される最小値-1(=-1)の時にE_IDが返ること．

    (b-2) tskidが許容される最大値+1(TNUM_TSKID+1)の時にE_IDが返ること．

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.2. 正常条件のテストケース
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(c) 対象タスクを自タスクとして呼び出す．

    (c-1) 自タスクの起動要求キューイング数が0の場合，
          起動要求キューイング数は0のままで，0が返ること．

    (c-2) 自タスクの起動要求キューイング数が1の場合，
          起動要求キューイング数が0となり，1が返ること．

(d) 対象タスクを他タスクとして呼び出す．

    (d-1) タスクが実行可能状態の場合．

          (d-1-1) 対象タスクの起動要求キューイング数が0の場合，
                  起動要求キューイング数は0のままで，0が返ること．

          (d-1-2) 対象起動要求キューイング数が1の場合，
                  起動要求キューイング数が0となり，1が返ること．

    (d-2) タスクが起床待ち状態の場合．

          (d-2-1) 対象タスクの起動要求キューイング数が0の場合，
                  起動要求キューイング数は0のままで，0が返ること．

          (d-2-2) 対象起動要求キューイング数が1の場合，
                  起動要求キューイング数が0となり，1が返ること．

    (d-3) タスクが時間経過待ち状態の場合．

          (d-3-1) 対象タスクの起動要求キューイング数が0の場合，
                  起動要求キューイング数は0のままで，0が返ること．

          (d-3-2) 対象起動要求キューイング数が1の場合，
                  起動要求キューイング数が0となり，1が返ること．

    (d-4) タスクがセマフォの資源獲得待ち(タイムアウト無)状態の場合．

          (d-4-1) 対象タスクの起動要求キューイング数が0の場合，
                  起動要求キューイング数は0のままで，0が返ること．

          (d-4-2) 対象起動要求キューイング数が1の場合，
                  起動要求キューイング数が0となり，1が返ること．

    (d-5) タスクがセマフォの資源獲得待ち(タイムアウト有)状態の場合．

          (d-5-1) 対象タスクの起動要求キューイング数が0の場合，
                  起動要求キューイング数は0のままで，0が返ること．

          (d-5-2) 対象起動要求キューイング数が1の場合，
                  起動要求キューイング数が0となり，1が返ること．

    (d-6) タスクが強制待ち状態の場合．

          (d-6-1) 対象タスクの起動要求キューイング数が0の場合，
                  起動要求キューイング数は0のままで，0が返ること．

          (d-6-2) 対象起動要求キューイング数が1の場合，
                  起動要求キューイング数が0となり，1が返ること．

    (d-7) タスクが二重待ち(起床待ち)状態の場合．

          (d-7-1) 対象タスクの起動要求キューイング数が0の場合，
                  起動要求キューイング数は0のままで，0が返ること．
                  
          (d-7-2) 対象タスクの起動要求キューイング数が1の場合，
                  起動要求キューイング数は1となり，1が返ること．

    (d-8) タスクが二重待ち(時間経過待ち)状態の場合．

          (d-8-1) 対象タスクの起動要求キューイング数が0の場合，
                  起動要求キューイング数は0のままで，0が返ること．

          (d-8-2) 対象起動要求キューイング数が1の場合，
                  起動要求キューイング数が0となり，1が返ること．

    (d-9) タスクが休止状態の場合，0が返ること．



■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

2. ソースコードの条件網羅確認

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.1. ソースコード
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ER_UINT
can_act(ID tskid)
{
	TCB		*p_tcb;
	ER_UINT	ercd;

	LOG_CAN_ACT_ENTER(tskid);
	CHECK_TSKCTX_UNL();
	CHECK_TSKID_SELF(tskid);
	p_tcb = get_tcb_self(tskid);

	t_lock_cpu();
	ercd = p_tcb->actque ? 1 : 0;
	p_tcb->actque = false;
	t_unlock_cpu();

  error_exit:
	LOG_CAN_ACT_LEAVE(ercd);
	return(ercd);
}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.2. マクロを展開したAPIと呼び出す内部関数
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
[A] can_act

00 : ER_UINT
01 : can_act(ID tskid)
02 : {
03 : 	TCB		*p_tcb; 
04 : 	ER_UINT	ercd; 
05 : 
06 : 	if (sense_context() || t_sense_lock()) {
07 : 		ercd = E_CTX; 
08 : 		goto error_exit; 
09 :     } 
10 :     if (!((TMIN_TSKID <= tskid && tskid <= tmax_tskid) 
11 :                                     || tskid == TSK_SELF)) { 
12 : 		ercd = E_ID; 
13 : 		goto error_exit; 
14 :     } 
15 :    p_tcb = ((tskid) == TSK_SELF ? p_runtsk
16 :                             : (&(tcb_table[((uint_t)((tskid) - TMIN_TSKID))])));
17 : 
18 : 	t_lock_cpu();
19 : 	ercd = p_tcb->actque ? 1 : 0;
20 : 	p_tcb->actque = false;
21 : 	t_unlock_cpu();
22 : 
23 : 	error_exit:
24 : 	return(ercd); 
25 : } 

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.3. 条件式
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(A1) 06 : sense_context()
(A2) 06 : t_sense_lock()
(A3) 10 : TMIN_TSKID <= tskid
(A4) 10 : tskid <= tmax_tskid
(A5) 11 : tskid == TSK_SELF
(A6) 15 : (tskid) == TSK_SELF
(A7) 19 : p_tcb->actque

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.4. 条件網羅の確認
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

         (A1) (A2) (A3) (A4) (A5) (A6) (A7)
(a-1)     T   D/F   D    D    D    D    D
(a-2)     F    T    D    D    D    D    D
(b-1)     F    F    F   D/T   F    D    D
(b-2)     F    F    T    F    F    D    D
(c-1)     F    F    F   D/T   T    T    F
(c-2)     F    F    F   D/T   T    T    T
(d-1-1)   F    F    T    T   D/F   F    F
(d-1-2)   F    F    T    T   D/F   F    T
(d-2-1)   F    F    T    T   D/F   F    F
(d-2-2)   F    F    T    T   D/F   F    T
(d-3-1)   F    F    T    T   D/F   F    F
(d-3-2)   F    F    T    T   D/F   F    T
(d-4-1)   F    F    T    T   D/F   F    F
(d-4-2)   F    F    T    T   D/F   F    T
(d-5-1)   F    F    T    T   D/F   F    F
(d-5-2)   F    F    T    T   D/F   F    T
(d-6-1)   F    F    T    T   D/F   F    F
(d-6-2)   F    F    T    T   D/F   F    T
(d-7-1)   F    F    T    T   D/F   F    F
(d-7-2)   F    F    T    T   D/F   F    T
(d-8-1)   F    F    T    T   D/F   F    F
(d-8-2)   F    F    T    T   D/F   F    T
(d-9)     F    F    T    T   D/F   F    F
------------------------------------------- 
網羅      O    O    O    O    O    O    O 


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

3. ホワイトボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
必要なし．



以上．
