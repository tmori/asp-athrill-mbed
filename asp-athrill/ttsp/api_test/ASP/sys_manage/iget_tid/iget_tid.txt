
	iget_tid テストシート

----------------------------------------------------------------------
 TTSP
     TOPPERS Test Suite Package

 Copyright (C) 2009-2011 by Center for Embedded Computing Systems
             Graduate School of Information Science, Nagoya Univ., JAPAN
 Copyright (C) 2009-2011 by Digital Craft Inc.
 Copyright (C) 2009-2011 by NEC Communication Systems, Ltd.
 Copyright (C) 2009-2011 by FUJISOFT INCORPORATED
 Copyright (C) 2009-2010 by Mitsuhiro Matsuura

 上記著作権者は，以下の (1)〜(3) の条件を満たす場合に限り，本ドキュメ
 ント（本ドキュメントを改変したものを含む．以下同じ）を使用・複製・改
 変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 (1) 本ドキュメントを利用する場合には，上記の著作権表示，この利用条件
     および下記の無保証規定が，そのままの形でドキュメント中に含まれて
     いること．
 (2) 本ドキュメントを改変する場合には，ドキュメントを改変した旨の記述
     を，改変後のドキュメント中に含めること．ただし，改変後のドキュメ
     ントが，TOPPERSプロジェクト指定の開発成果物である場合には，この限
     りではない．
 (3) 本ドキュメントの利用により直接的または間接的に生じるいかなる損害
     からも，上記著作権者およびTOPPERSプロジェクトを免責すること．また，
     本ドキュメントのユーザまたはエンドユーザからのいかなる理由に基づ
     く請求からも，上記著作権者およびTOPPERSプロジェクトを免責すること．

 本ドキュメントは，無保証で提供されているものである．上記著作権者およ
 びTOPPERSプロジェクトは，本ドキュメントに関して，特定の使用目的に対す
 る適合性も含めて，いかなる保証も行わない．また，本ドキュメントの利用
 により直接的または間接的に生じたいかなる損害に関しても，その責任を負
 わない．

 $Id: iget_tid.txt 2 2012-05-09 02:23:52Z nces-shigihara $
----------------------------------------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

0. API仕様

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

get_tid		実行状態のタスクIDの参照〔T〕
iget_tid	実行状態のタスクIDの参照〔I〕

【C言語API】
	ER ercd = get_tid(ID *p_tskid)
	ER ercd = iget_tid(ID *p_tskid)

【パラメータ】
	ID *		p_tskid		タスクIDを入れるメモリ領域へのポインタ

【リターンパラメータ】
	ER			ercd		正常終了（E_OK）またはエラーコード
	ID			tskid		タスクID

【エラーコード】
	E_CTX			コンテキストエラー（非タスクコンテキストからの呼出
					し：get_tidの場合，タスクコンテキストからの呼出し：
					iget_tidの場合，CPUロック状態からの呼出し）
	E_MACV〔P〕		メモリアクセス違反（p_tskidが指すメモリ領域への書込
					みアクセスが許可されていない）

【機能】

実行状態のタスク（get_tidの場合には自タスク）のID番号を参照する．参照し
たタスクIDは，p_tskidで指定したメモリ領域に返される．

iget_tidにおいて，実行状態のタスクがない場合には，TSK_NONE（＝0）が返さ
れる．

マルチプロセッサ対応カーネルにおいては，サービスコールを呼び出した処理
単位を実行しているプロセッサにおいて実行状態のタスクのID番号を参照する．


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

1. 仕様ベースのブラックボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.1. エラー条件のテストケース
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(a) 不正なコンテキスト状態で呼出す場合．

    (a-1) タスクコンテキストから呼び出して，E_CTXエラーが返ること．

    (a-2) CPUロック状態で呼び出して，E_CTXエラーが返ること．

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1.2. 正常条件のテストケース
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(b) 実行状態のタスクのID番号を参照し，参照したタスクIDをp_tskidで指定し
    たメモリ領域に返ること．

    (b-1) 実行状態のタスクがある場合，そのタスクIDが返る．

    (b-2) 実行状態のタスクがない場合，TSK_NONE(=0)が返る．


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

2. ソースコードの条件網羅確認

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.1. ソースコード
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
ER
iget_tid(ID *p_tskid)
{
    ER              ercd;

    LOG_IGET_TID_ENTER(p_tskid);
    CHECK_INTCTX_UNL();

    i_lock_cpu();
    *p_tskid = (p_runtsk == NULL) ? TSK_NONE : TSKID(p_runtsk);
    ercd = E_OK;
    i_unlock_cpu();

  error_exit:
    LOG_IGET_TID_LEAVE(ercd, *p_tskid);
    return(ercd);
}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.2. マクロを展開したAPIと呼び出す内部関数
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
[A] iget_tid

00 : ER
01 : iget_tid(ID *p_tskid)
02 : {
03 :     ER              ercd;
04 : 
05 :     if (!sense_context() || i_sense_lock()) {
06 :         ercd = E_CTX;
07 :         goto error_exit;
08 :     }
09 : 
10 :     i_lock_cpu();
11 :     *p_tskid = (p_runtsk == NULL) ? TSK_NONE : (ID)(((p_tcb) - tcb_table) + TMIN_TSKID);
12 :     ercd = E_OK;
13 :     i_unlock_cpu();
14 : 
15 : error_exit:
16 :     return(ercd);
17 : }

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.3. 条件式
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(A1)  05 :  sense_context()
(A2)  05 :  i_sense_lock()
(A3)  11 :  (p_runtsk == NULL)

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2.4. 条件網羅表
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

       (A1) (A2) (A3)
(a-1)   T   D/F   D
(a-2)   F    T    D
(b-1)   F    F    F
(b-2)   F    F    T
---------------------
網羅    O    O    O


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

3. ホワイトボックステスト

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
必要なし．



以上．
