
	TTG - TOPPERS Test Generator -
	パラメータ一覧

----------------------------------------------------------------------
 TTG
     TOPPERS Test Generator

 Copyright (C) 2009-2011 by Center for Embedded Computing Systems
             Graduate School of Information Science, Nagoya Univ., JAPAN
 Copyright (C) 2010-2011 by Graduate School of Information Science,
                            Aichi Prefectural Univ., JAPAN

 上記著作権者は，以下の (1)〜(3) の条件を満たす場合に限り，本ドキュメ
 ント(本ドキュメントを改変したものを含む．以下同じ)を使用・複製・改
 変・再配布(以下，利用と呼ぶ)することを無償で許諾する．
 (1) 本ドキュメントを利用する場合には，上記の著作権表示，この利用条件
     および下記の無保証規定が，そのままの形でドキュメント中に含まれて
     いること．
 (2) 本ドキュメントを改変する場合には，ドキュメントを改変した旨の記述
     を，改変後のドキュメント中に含めること．ただし，改変後のドキュメ
     ントが，TOPPERSプロジェクト指定の開発成果物である場合には，この限
     りではない．
 (3) 本ドキュメントの利用により直接的または間接的に生じるいかなる損害
     からも，上記著作権者およびTOPPERSプロジェクトを免責すること．また，
     本ドキュメントのユーザまたはエンドユーザからのいかなる理由に基づ
     く請求からも，上記著作権者およびTOPPERSプロジェクトを免責すること．

 本ドキュメントは，無保証で提供されているものである．上記著作権者およ
 びTOPPERSプロジェクトは，本ドキュメントに関して，特定の使用目的に対す
 る適合性も含めて，いかなる保証も行わない．また，本ドキュメントの利用
 により直接的または間接的に生じたいかなる損害に関しても，その責任を負
 わない．

 $Id: param.txt 2 2012-05-09 02:23:52Z nces-shigihara $
----------------------------------------------------------------------
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
このドキュメントの位置付け
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
このドキュメントは，TTG（TOPPERS Test Generator）の入力となるTESRYデー
タにおいて，処理・オブジェクトごとに設定できるパラメータとTTC（TOPPERS
 Test Checker）でチェックする内容，および補完内容をまとめたものである．

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
設定できるパラメータ一覧
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
＜種類＞
A: 必須(記述しないとエラー)
B: デフォルト値補完
C: 補完しない(記述なしの場合，テストプログラムでassertしない)

＜項目のタイプ凡例＞
*: pre_conditionでのみ指定可能なパラメータ
#: タスクが休止状態の場合でも指定可能とするパラメータ
@: カーネル実装上，記載してもテストプログラムで確認できないパラメータ
   (TTGによるテストプログラム生成処理に使用する)

＜入力値の型＞
b: 真偽値
s: 文字列
n: 数値
h: ハッシュ
a: 配列
N: Nil

-------------------------------------------------------------------------------------

(1) オブジェクト
全オブジェクト共通で以下のチェックが行われる
[エラーチェック]
T2_001: パラメータの型が想定されている型と異なる
T2_002: パラメータの値が有効値でない
T2_003: 変数名が命名規則に反している

(1.1) 処理単位
var属性を持つ処理単位には共通して以下のチェックが行われる

[エラーチェック]
T3_VAR001: 変数が構造体の場合にその構造体のメンバ以外を使用している
T3_VAR002: 変数がデータ型の場合にメンバを定義している
T3_VAR003: 変数が構造体の場合にvalue属性を定義している

※bootcntについて
bootcntはTTG内部で使用するための属性である．bootcntは指定した処理単位が
複数回実行される場合に，何回目の起動かを指定する．bootcntは前状態には指
定できず，前状態では一律0として扱われる．後状態には前状態の状態から起動
し直した回数を，初回の起動を0として，連番で記述する．処理単位が一度起動
した後に，起動していない状態に遷移した場合は，bootcntをインクリメントす
る必要がある．これは，起動する前のbootcntと，起動した際のbootcntを合わ
せるためである．例えば，タスクが前状態:休止状態→後状態1:実行状態→後状
態2:休止状態→後状態3:実行状態と遷移した場合，前状態・後状態1における
bootcntは0であり，後状態2・後状態3におけるbootcntは1となる，ということ
である．



(1.1.1) タスク（TASK）
種類 |    項目    |                  意味                  | 型 |    有効値    |   補完マクロ      |           備考
-----------------------------------------------------------------------------------------------------------------------------------
 A   | #  tskstat | タスクの状態                           | s  | ※1          |                   |
-----------------------------------------------------------------------------------------------------------------------------------
 B   |    tskpri  | タスクの現在優先度                     | n  | >= 1, <= 16  | TSK_PRI_MID       |
     |*#  itskpri | タスクの初期優先度                     | n  | >= 1, <= 16  | TSK_PRI_MID       |
     |*#  exinf   | タスクの拡張情報                       | n  | >= 0         | EXINF_A           |
     |*#  class   | 所属クラス                             | s  |              | CLS_SELF_ALL      | FMP限定
     | #  prcid   | 割付けプロセッサID                     | n  | >  0         | PRC_SELF          | FMP限定
     |    bootcnt | 起動回数                               | n  | >= 0         | -                 | 省略時 0
-----------------------------------------------------------------------------------------------------------------------------------
 C   | #  var     | 使用する変数                           | h  |              |                   | (1.3.2)を参照
     | #  actcnt  | 起動要求キューイング数                 | n  | 0, 1         |                   |
     |    wupcnt  | 起床要求キューイング数                 | n  | 0, 1         |                   |
     |    wobjid  | 待ち対象                               | sN |              |                   |
     |    porder  | レディキュー内順位                     | n  | >= 0         |                   |
     |    lefttmo | 相対・タイムアウト待ち時間             | n  | >= 0         |                   |
     | #  actprc  | タスクの次回起動時の割付けプロセッサID | sn | >= 0         |                   | FMP限定
     |  @ spinid  | 取得中のスピンロックID                 | s  |              |                   | FMP限定

[有効値]
※1        値         |           意味           |         備考
   --------------------------------------------------------------------
    running           | 実行状態                 |
    ready             | 実行可能状態             |
    waiting           | 待ち状態                 |
    suspended         | 強制待ち状態             |
    waiting-suspended | 二重待ち状態             |
    dormant           | 休止状態                 |
    running-suspended | 強制待ち状態[実行継続中] | FMP限定
    running-waitspin  | スピンロック取得待ち状態 | FMP限定

[エラーチェック]
T3_TSK001: 状態が待ち状態であるのに待ち対象が指定されていない
T3_TSK002: 状態が待ち状態で待ち対象がSLEEPの場合に起床要求キューイング数が指定されている
T3_TSK003: pre_conditionでDELAY待ちの時に相対時間が指定されていない
T3_TSK004: 待ち状態ではないのに待ち対象が指定されている
T3_TSK005: actcntが0であるのにactprcが設定されている
T3_TSK006: 状態がスピンロック取得待ちの時にspinidが指定されていない
T3_TSK007: 休止状態の場合に指定できないパラメータが指定されている

[備考]
・TA_ACT属性を指定可能とすると，テストプログラムで実行順序を制御でき
  ない可能性があるため，タスクの属性は指定できない(一律TA_NULLとする)
・running-waitspinは，他の処理単位が既に取得しているスピンロックに対し，
  loc_spn/iloc_spnを発行することで，スピンロックを取得するためにループ
  している状態である．TTGでは，十分にループしたことを確認するために
  対象スピンロックを取得している処理単位において，遅延処理を行う．
  遅延処理はfor文によるループで行い，ループする回数は，TTGの設定ファイル
  (configure.yaml)で設定可能である．


(1.1.2) アラームハンドラ（ALARM）
種類 |    項目   |                  意味                  | 型 |    有効値    |    補完マクロ     |          備考
-----------------------------------------------------------------------------------------------------------------------------------
 A   |   almstat | アラームハンドラの状態                 | s  | ※1          |                   |
     |   hdlstat | 処理単位動作状態                       | s  | ※2          |                   |
-----------------------------------------------------------------------------------------------------------------------------------
 B   |*  exinf   | 拡張情報                               | n  | >= 0         | EXINF_A           |
     |*  class   | 所属クラス                             | s  |              | CLS_SELF_ALL      | FMP限定
     |   prcid   | 割付けプロセッサID                     | n  | >  0         | PRC_SELF          | FMP限定
     |   bootcnt | 起動回数                               | n  | >= 0         | -                 | 省略時 0
-----------------------------------------------------------------------------------------------------------------------------------
 C   |   var     | 使用する変数                           | h  |              |                   | (1.3.2)を参照
     |   lefttim | 相対待ち時間                           | n  | >= 0         |                   |
     | @ spinid  | 取得中のスピンロックID                 | s  |              |                   | FMP限定

[有効値]
※1    値    |      意味      |         備考
   ----------------------------------------------------
    TALM_STA | 動作している   |
    TALM_STP | 動作していない |

※2        値         |           意味                               |         備考
   ------------------------------------------------------------------------------------------
    ACTIVATE          | 処理単位が起動している                       |
    STP               | 処理単位が起動していない                     |
    ACTIVATE-waitspin | 処理単位が起動している(スピンロック取得待ち) | FMP限定

[エラーチェック]
T3_ALM001: pre_conditionでTALM_STAの時にlefttimが指定されていない
T3_ALM002: hdlstatがACTIVATE-waitspinの時にspinidが指定されていない

[備考]
・ACTIVATE-waitspinに関しては，タスクの備考のrunning-waitspinを参照すること．


(1.1.3) 周期ハンドラ（CYCLE）
種類 |    項目   |                  意味                  | 型 |    有効値    |    補完マクロ     |          備考
-----------------------------------------------------------------------------------------------------------------------------------
 A   |   cycstat | 周期ハンドラの状態                     | s  | ※1          |                   |
     |   hdlstat | 処理単位動作状態                       | s  | ※2          |                   |
     |*  cyctim  | 周期                                   | n  | >= 0         |                   |
     |*  cycphs  | 位相                                   | n  | >= 0         |                   |
-----------------------------------------------------------------------------------------------------------------------------------
 B   |*  cycatr  | 周期ハンドラ属性                       | s  | ※3          | ANY_ATT_CYC       |
     |*  exinf   | 拡張情報                               | n  | >= 0         | EXINF_A           |
     |*  class   | 所属クラス                             | s  |              | CLS_SELF_ALL      | FMP限定
     |   prcid   | 割付けプロセッサID                     | n  | >  0         | PRC_SELF          | FMP限定
     |   bootcnt | 起動回数                               | n  | >= 0         | -                 | 省略時 0
-----------------------------------------------------------------------------------------------------------------------------------
 C   |   var     | 使用する変数                           | h  |              |                   | (1.3.2)を参照
     |   lefttim | 相対待ち時間                           | n  | >= 0         |                   |
     | @ spinid  | 取得中のスピンロックID                 | s  |              |                   | FMP限定

[有効値]
※1    値    |      意味      |         備考
   ----------------------------------------------------
    TCYC_STA | 動作している   |
    TCYC_STP | 動作していない |

※2        値         |           意味                               |         備考
   ------------------------------------------------------------------------------------------
    ACTIVATE          | 処理単位が起動している                       |
    STP               | 処理単位が起動していない                     |
    ACTIVATE-waitspin | 処理単位が起動している(スピンロック取得待ち) | FMP限定

※3    値   |                      意味                          |         備考
   -------------------------------------------------------------------------------------
    TA_NULL | 周期ハンドラの生成時に周期ハンドラを動作開始しない |
    TA_STA  | 周期ハンドラの生成時に周期ハンドラを動作開始する   |

[エラーチェック]
T3_CYC001: pre_conditionでlefttimが指定されている
T3_CYC002: hdlstatがACTIVATEの時にcycstatがTCYC_STAでない
T3_CYC003: hdlstatがACTIVATE-waitspinの時にspinidが指定されていない

[備考]
・ACTIVATE-waitspinに関しては，タスクの備考のrunning-waitspinを参照すること．


(1.1.4) タスク例外処理ルーチン（TASK_EXC）
種類 |    項目    |                  意味                  | 型 |    有効値    |    補完マクロ     |          備考
-----------------------------------------------------------------------------------------------------------------------------------
 A   |*#  task    | 関連タスク                             | s  |              |                   |
     |    texstat | タスク例外ハンドラの状態               | s  | ※1          |                   |
     | #  hdlstat | 処理単位動作状態                       | s  | ※2          |                   |
-----------------------------------------------------------------------------------------------------------------------------------
 B   |    bootcnt | 起動回数                               | n  | >= 0         | -                 | 省略時 0
-----------------------------------------------------------------------------------------------------------------------------------
 C   |    texptn  | 処理ルーチン起動時の例外要因           | n  | >= 0         |                   |
     |    pndptn  | 保留例外要因                           | n  | >= 0         |                   |
     | #  var     | 使用する変数                           | h  |              |                   | (1.3.2)を参照
     |  @ spinid  | 取得中のスピンロックID                 | s  |              |                   | FMP限定

[有効値]
※1    値    |        意味        |         備考
   ----------------------------------------------------
    TTEX_ENA | タスク例外許可状態 |
    TTEX_DIS | タスク例外禁止状態 |

※2        値         |           意味                               |         備考
   ------------------------------------------------------------------------------------------
    ACTIVATE          | 処理単位が起動している                       |
    STP               | 処理単位が起動していない                     |
    ACTIVATE-waitspin | 処理単位が起動している(スピンロック取得待ち) | FMP限定

[エラーチェック]
T3_TEX001: hdlstatがACTIVATEの時にtexptnが指定されていない
T3_TEX002: hdlstatがACTIVATEの時にtexptnが0
T3_TEX003: hdlstatがACTIVATEの時，pndptnが0でない かつ texstatがTTEX_ENA
T3_TEX004: hdlstatがACTIVATE-waitspinの時にspinidが指定されていない


(1.1.5) CPU例外ハンドラ（EXCEPTION）
種類 |    項目   |                  意味                  | 型 |    有効値    |    補完マクロ     |          備考
-----------------------------------------------------------------------------------------------------------------------------------
 A   |*  excno   | CPU例外ハンドラ番号                    | sn | >= 0         |                   |
     |   hdlstat | 処理単位動作状態                       | s  | ※1          |                   |
-----------------------------------------------------------------------------------------------------------------------------------
 B   |*  class   | 所属クラス                             | s  |              | CLS_SELF_ALL      | FMP限定
     |*  prcid   | 割付けプロセッサID                     | n  | >  0         | PRC_SELF          | FMP限定
     |   bootcnt | 起動回数                               | n  | >= 0         | -                 | 省略時 0
-----------------------------------------------------------------------------------------------------------------------------------
 C   |   var     | 使用する変数                           | h  |              |                   | (1.3.2)を参照
     | @ spinid  | 取得中のスピンロックID                 | s  |              |                   | FMP限定

[有効値]
※1        値         |           意味                               |         備考
   ------------------------------------------------------------------------------------------
    ACTIVATE          | 処理単位が起動している                       |
    STP               | 処理単位が起動していない                     |
    ACTIVATE-waitspin | 処理単位が起動している(スピンロック取得待ち) | FMP限定

[エラーチェック]
T3_EXC001: hdlstatがACTIVATE-waitspinの時にspinidが指定されていない

[備考]
・ACTIVATE-waitspinに関しては，タスクの備考のrunning-waitspinを参照すること．


(1.1.6) 割込みハンドラ（INTHDR）
種類 |    項目   |                  意味                  | 型 |    有効値    |    補完マクロ     |          備考
-----------------------------------------------------------------------------------------------------------------------------------
 A   |*  intno   | 割込み番号                             | sn | >= 0         |                   |
     |*  inhno   | 割込みハンドラ番号                     | sn | >= 0         |                   |
     |*@ intpri  | 割込み優先度                           | sn | <  0         |                   |
     | @ intstat | 割込み要求禁止フラグ                   | s  | ※1          |                   |
     |   hdlstat | 処理単位動作状態                       | s  | ※2          |                   |
-----------------------------------------------------------------------------------------------------------------------------------
 B   |*@ intatr  | 割込みハンドラ属性                     | s  | ※3          | ANY_ATT_INH       | CFG_INTに指定する属性
     |*  class   | 所属クラス                             | s  |              | CLS_SELF_ALL      | FMP限定
     |*  prcid   | 割付けプロセッサID                     | n  | >  0         | PRC_SELF          | FMP限定
     |   bootcnt | 起動回数                               | n  | >= 0         | -                 | 省略時 0
-----------------------------------------------------------------------------------------------------------------------------------
 C   |   var     | 使用する変数                           | h  |              |                   | (1.3.2)を参照
     | @ spinid  | 取得中のスピンロックID                 | s  |              |                   | FMP限定

[有効値]
※1     値    |        意味        |         備考
   ----------------------------------------------------
    TA_ENAINT | 割込み要求許可状態 |
    TA_DISINT | 割込み要求禁止状態 |

※2        値         |           意味                               |         備考
   ------------------------------------------------------------------------------------------
    ACTIVATE          | 処理単位が起動している                       |
    STP               | 処理単位が起動していない                     |
    ACTIVATE-waitspin | 処理単位が起動している(スピンロック取得待ち) | FMP限定

※3    値     |          意味            |         備考
   ------------------------------------------------------------
    TA_NULL   | 割込み禁止状態で起動する |
    TA_ENAINT | 割込み許可状態で起動する |

[エラーチェック]
T3_INH001: hdlstatがACTIVATEのとき，intstatがTA_ENAINTでない
T3_INH002: hdlstatがACTIVATE-waitspinの時にspinidが指定されていない

[備考]
・ACTIVATE-waitspinに関しては，タスクの備考のrunning-waitspinを参照すること．


(1.1.7) 割込みサービスルーチン（ISR）
種類 |    項目   |                  意味                  | 型 |    有効値    |    補完マクロ     |          備考
-----------------------------------------------------------------------------------------------------------------------------------
 A   |*  intno   | 割込み番号                             | sn | >= 0         |                   |
     |*@ intpri  | 割込み優先度                           | sn | <  0         |                   |
     | @ intstat | 割込み要求禁止フラグ                   | s  | ※1          |                   |
     |   hdlstat | 処理単位動作状態                       | s  | ※2          |                   |
-----------------------------------------------------------------------------------------------------------------------------------
 B   |*@ intatr  | 割込みハンドラ属性                     | s  | ※3          | ANY_ATT_ISR       | CFG_INTに指定する属性
     |*@ isrpri  | 割込みサービスルーチン優先度           | n  | >= 1, <= 16  | ISR_PRI_MID       |
     |*  exinf   | 拡張情報                               | n  | >= 0         | EXINF_A           |
     |*  class   | 所属クラス                             | s  |              | CLS_SELF_ONLY_SELF| FMP限定
     |*  prcid   | 割付けプロセッサID                     | n  | >  0         | PRC_SELF          | FMP限定
     |   bootcnt | 起動回数                               | n  | >= 0         | -                 | 省略時 0
-----------------------------------------------------------------------------------------------------------------------------------
 C   |   var     | 使用する変数                           | h  |              |                   | (1.3.2)を参照
     | @ spinid  | 取得中のスピンロックID                 | s  |              |                   | FMP限定

※ISRのみclassの補完マクロはCLS_SELF_ONLY_SELFとするのは，カーネル仕様上，
  ローカルIRCアーキテクチャでは割付可能プロセッサが限定されている必要が
  あるためである．

[有効値]
※1     値    |        意味        |         備考
   ----------------------------------------------------
    TA_ENAINT | 割込み要求許可状態 |
    TA_DISINT | 割込み要求禁止状態 |

※2        値         |           意味                               |         備考
   ------------------------------------------------------------------------------------------
    ACTIVATE          | 処理単位が起動している                       |
    STP               | 処理単位が起動していない                     |
    ACTIVATE-waitspin | 処理単位が起動している(スピンロック取得待ち) | FMP限定

※3    値     |          意味            |         備考
   ------------------------------------------------------------
    TA_NULL   | 割込み禁止状態で起動する |
    TA_ENAINT | 割込み許可状態で起動する |

[エラーチェック]
T3_ISR001: hdlstatがACTIVATEのとき，intstatがTA_ENAINTでない
T3_ISR002: hdlstatがACTIVATE-waitspinの時にspinidが指定されていない

[備考]
・ACTIVATE-waitspinに関しては，タスクの備考のrunning-waitspinを参照すること．


(1.1.8) 初期化ルーチン（INIRTN）
種類 |   項目   |                  意味                  | 型 |    有効値    |    補完マクロ     |          備考
----------------------------------------------------------------------------------------------------------------------------------
 A   |  do      | 処理内容                               | h  |              |                   |(2) 処理（do）と同じ(idを除く)
----------------------------------------------------------------------------------------------------------------------------------
 B   |* global  | グローバル初期化ルーチンであるか       | b  |              | -                 | FMP限定，省略時 false
     |* exinf   | 拡張情報                               | n  | >= 0         | EXINF_A           |
     |* class   | 所属クラス                             | s  |              | CLS_SELF_ALL      | FMP限定
     |* prcid   | 割付けプロセッサID                     | n  | >  0         | PRC_SELF          | FMP限定
----------------------------------------------------------------------------------------------------------------------------------
 C   |          |                                        |    |              |                   |
※初期化ルーチンはpre_conditionのみ指定可能で，以後のコンディションへ
  補完する必要はない．

[エラーチェック]
T3_INI001: グローバル初期化ルーチンで定義されたとき，classが指定されている
T3_INI002: グローバル初期化ルーチンで定義されたとき，prcidが指定されている


(1.1.9) 終了ルーチン（TERRTN）
種類 |   項目   |                  意味                  | 型 |    有効値    |    補完マクロ     |          備考
----------------------------------------------------------------------------------------------------------------------------------
 A   |  do      | 処理内容                               | h  |              |                   |(2) 処理（do）と同じ(idを除く)
----------------------------------------------------------------------------------------------------------------------------------
 B   |* global  | グローバル終了ルーチンであるか         | b  |              | -                 | FMP限定，省略時 false
     |* exinf   | 拡張情報                               | n  | >= 0         | EXINF_A           |
     |* class   | 所属クラス                             | s  |              | CLS_SELF_ALL      | FMP限定
     |* prcid   | 割付けプロセッサID                     | n  | >  0         | PRC_SELF          | FMP限定
----------------------------------------------------------------------------------------------------------------------------------
 C   |          |                                        |    |              |                   |
※終了ルーチンはpre_conditionのみ指定可能で，以後のコンディションへ
  補完する必要はない．

[エラーチェック]
T3_TER001: グローバル終了ルーチンで定義されたとき，classが指定されている
T3_TER002: グローバル終了ルーチンで定義されたとき，prcidが指定されている


(1.2) 同期・通信オブジェクト
wtsklist，stsklist，rtsklist属性を持つ処理単位には共通して以下のチェックが行われる

[エラーチェック]
T3_SCO001: wtsklist，stsklist，rtsklistのタスク名が重複している


(1.2.1) セマフォ（SEMAPHORE）
種類 |    項目   |                  意味                  | 型 |    有効値    |    補完マクロ     |          備考
----------------------------------------------------------------------------------------------------------------------------------
 A   |           |                                        |    |              |                   |
----------------------------------------------------------------------------------------------------------------------------------
 B   |* sematr   | セマフォ属性                           | s  | ※1          | ANY_ATT_SEM       |
     |* maxsem   | 最大資源数                             | n  | >= 0         | ANY_MAX_SEMCNT    |
     |* isemcnt  | 初期資源数                             | n  | >= 0         | ANY_INI_SEMCNT    |
     |  semcnt   | 現在資源数                             | n  | >= 0         | ANY_NOW_SEMCNT    |
     |* class    | 所属クラス                             | s  |              | CLS_SELF_ALL      | FMP限定
----------------------------------------------------------------------------------------------------------------------------------
 C   |  wtsklist | 待ちタスクのリスト                     | aN |              |                   | ※2

[有効値]
※1    値   |               意味               |         備考
   -------------------------------------------------------------------
    TA_NULL | オブジェクト属性を指定しない     |
    TA_TPRI | 待ち行列をタスクの優先度順にする |

[エラーチェック]
T3_SEM001: 初期資源数（isemcnt）が最大資源数（maxsem）より大きい
T3_SEM002: 現在資源数（semcnt）が最大資源数（maxsem）より大きい

[備考]
※2
   タスク名をキー，値は空の，要素1つのハッシュ，の配列
   例)
    wtsklist:
      - TASK1:
      - TASK3:
      - TASK2:


(1.2.2) イベントフラグ（EVENTFLAG）
種類 |    項目   |                  意味                  | 型 |    有効値    |    補完マクロ     |          備考
----------------------------------------------------------------------------------------------------------------------------------
 A   |           |                                        |    |              |                   |
----------------------------------------------------------------------------------------------------------------------------------
 B   |* flgatr   | イベントフラグ属性                     | s  | ※1          | ANY_ATT_FLG       |
     |* iflgptn  | 初期ビットパターン                     | n  | >= 0         | BIT_PATTERN_0A    |
     |  flgptn   | 現在ビットパターン                     | n  | >= 0         | BIT_PATTERN_A     |
     |* class    | 所属クラス                             | s  |              | CLS_SELF_ALL      | FMP限定
----------------------------------------------------------------------------------------------------------------------------------
 C   |  wtsklist | 待ちタスクのリスト                     | aN |              |                   | ※3
     |  waiptn   | 待ちビットパターン                     | n  | >= 0         |                   | wtsklistの要素
     |  wfmode   | 待ちモード                             | s  | ※2          |                   | wtsklistの要素
     |  var      | フラグパターン受信用変数名             | s  |              |                   | wtsklistの要素

[有効値]
※1    値   |                      意味                      |         備考
   ----------------------------------------------------------------------------------
    TA_NULL | オブジェクト属性を指定しない                   |
    TA_TPRI | 待ち行列をタスクの優先度順にする               |
    TA_WMUL | 複数タスクが待つのを許す                       |
    TA_CLR  | タスクの待ち解除時にイベントフラグをクリアする |

※2    値    |                      意味                                          |         備考
   ------------------------------------------------------------------------------------------------------
    TWF_ANDW | 待ちビットパターンに含まれるすべてののビットがセットされるのを待つ |
    TWF_ORW  | 待ちビットパターンに含まれるいずれかのビットがセットされるのを待つ |

[備考]
※3
   タスク名をキー，待ち条件を値として持つ，要素1つのハッシュ，の配列 
   例)
    wtsklist:
      - TASK1:
          waiptn: 0x05
          wfmode: TWF_ORW
          var:    flg1
      - TASK2:
          waiptn: 0x03
          wfmode: TWF_ANDW
          var:    flg2


(1.2.3) データキュー（DATAQUEUE）
種類 |    項目   |                  意味                  | 型 |    有効値    |    補完マクロ     |          備考
----------------------------------------------------------------------------------------------------------------------------------
 A   |           |                                        |    |              |                   |
----------------------------------------------------------------------------------------------------------------------------------
 B   |* dtqatr   | データキュー属性                       | s  | ※1          | ANY_ATT_DTQ       |
     |* dtqcnt   | 格納できるデータ数                     | n  | >= 0         | ANY_DATA_CNT      |
     |* class    | 所属クラス                             | s  |              | CLS_SELF_ALL      | FMP限定
----------------------------------------------------------------------------------------------------------------------------------
 C   |  stsklist | 送信待ちタスクのリスト                 | aN |              |                   | ※2
     |  rtsklist | 受信待ちタスクのリスト                 | aN |              |                   | ※3
     |  datalist | 管理領域のデータのリスト               | aN |              |                   | ※4
     |  data     | 送信待ちタスクの送信データ             | n  |              |                   | stsklist, datalistの要素
     |  var      | データ受信用変数名                     | s  |              |                   | rtsklistの要素


[有効値]
※1    値   |               意味               |         備考
   -------------------------------------------------------------------
    TA_NULL | オブジェクト属性を指定しない     |
    TA_TPRI | 待ち行列をタスクの優先度順にする |

[備考]
※2
   タスク名をキー，待ち条件を値として持つ，要素1つのハッシュ，の配列
   例)
    stsklist:
      - TASK1:
          data: 0x05
      - TASK2:
          data: 0x03

※3
   例)
    タスク名をキー，待ち条件を値として持つ，要素1つのハッシュ，の配列
    rtsklist : 
      - TASK2:
          var: data1
      - TASK3:

※4
   データの内容を持つ要素1つのハッシュ，の配列
   例)
    datalist:
      - data: 0x02
      - data: 0x03


[エラーチェック]
T3_DTQ001: 管理領域に空きがあるのに送信待ちタスクがいる
T3_DTQ002: 管理領域にデータを持っているのに受信待ちタスクがいる
T3_DTQ003: 管理領域以上のデータを持っている


(1.2.4) 優先度データキュー（P_DATAQUEUE）
種類 |    項目   |                  意味                  | 型 |    有効値    |    補完マクロ     |          備考
----------------------------------------------------------------------------------------------------------------------------------
 A   |           |                                        |    |              |                   |
----------------------------------------------------------------------------------------------------------------------------------
 B   |* pdqatr   | 優先度データキュー属性                 | s  | ※1          | ANY_ATT_PDQ       |
     |* maxdpri  | データ優先度の最大値                   | n  | >= 1, <= 16  | DATA_PRI_MAX      |
     |* pdqcnt   | 格納できるデータ数                     | n  | >= 0         | ANY_DATA_CNT      |
     |* class    | 所属クラス                             | s  |              | CLS_SELF_ALL      | FMP限定
----------------------------------------------------------------------------------------------------------------------------------
 C   |  stsklist | 送信待ちタスクのリスト                 | aN |              |                   | ※2
     |  rtsklist | 受信待ちタスクのリスト                 | aN |              |                   | ※3
     |  datalist | 管理領域のデータのリスト               | aN |              |                   | ※4
     |  data     | 送信待ちタスクの送信データ             | n  |              |                   | stsklist, datalistの要素
     |  datapri  | 送信待ちタスクの送信データの優先度     | n  | >= 1, <= 16  |                   | stsklist, datalistの要素
     |  var      | データ受信用変数名                     | s  |              |                   | rtsklistの要素
     |  varpri   | データ優先度受信用変数名               | s  |              |                   | rtsklistの要素

[有効値]
※1    値   |               意味               |         備考
   -------------------------------------------------------------------
    TA_NULL | オブジェクト属性を指定しない     |
    TA_TPRI | 待ち行列をタスクの優先度順にする |

[備考]
※2
   タスク名をキー，待ち条件を値として持つ，要素1つのハッシュ，の配列
   例)
    stsklist : 
      - TASK2:
          data:     DATA_A
          datapri:  DATA_PRI_HIGH

※3
   タスク名をキー，待ち条件を値として持つ，要素1つのハッシュ，の配列
   例)
    rtsklist : 
      - TASK2 :
          vardata: ttg_data
          varpri: ttg_pri
      - TASK3 :

※4
   データの内容を持つ要素1つのハッシュ，の配列
   例)
    datalist : 
      - data:     DATA_B
        datapri:  DATA_PRI_MID
      - data:     DATA_C
        datapri:  DATA_PRI_MID

[エラーチェック]
T3_PDQ001: 管理領域に空きがあるのに送信待ちタスクがいる
T3_PDQ002: 管理領域にデータを持っているのに受信待ちタスクがいる
T3_PDQ003: 管理領域以上のデータを持っている


(1.2.5) メールボックス（MAILBOX）
種類 |    項目   |                  意味                  | 型 |    有効値    |    補完マクロ     |          備考
----------------------------------------------------------------------------------------------------------------------------------
 A   |           |                                        |    |              |                   |
----------------------------------------------------------------------------------------------------------------------------------
 B   |* mbxatr   | メールボックス属性                     | s  | ※1          | ANY_ATT_MBX       |
     |* maxmpri  | メッセージ優先度の最大値               | n  | >= 1, <= 16  | MSG_PRI_MAX       |
     |* class    | 所属クラス                             | s  |              | CLS_SELF_ALL      | FMP限定
----------------------------------------------------------------------------------------------------------------------------------
 C   |  wtsklist | 受信待ちタスクのリスト                 | aN |              |                   | ※2
     |  msglist  | 受信待ちメッセージのリスト             | aN |              |                   | ※3
     |  var      | メッセージ受信用変数名                 | s  |              |                   | wtsklistの要素
     |  msg      | メッセージヘッダの変数名               | s  |              |                   | msglistの要素
     |  msgpri   | メッセージの優先度                     | n  | >= 1, <= 16  |                   | msglistの要素

[有効値]
※1    値   |                     意味                     |         備考
   -------------------------------------------------------------------------------
    TA_NULL | オブジェクト属性を指定しない                 |
    TA_TPRI | 待ち行列をタスクの優先度順にする             |
    TA_MPRI | メッセージキューをメッセージの優先度順にする |

[備考]
※2
   タスク名をキー，待ち条件を値として持つ，要素1つのハッシュ，の配列
   例)
    wtsklist:
      - TASK1:
          var: msg1
      - TASK2:
          var: msg2

※3
   メッセージヘッダの変数名(msg)と優先度(msgpri)をキーとして持つのハッシュの配列
   例)
    msglist :
      - msg: msg_pri
        msgpri: MSG_PRI_HIGH
      - msg: msg_pri2
        msgpri: MSG_PRI_MID

[エラーチェック]
T3_MBX001: メールボックスの属性がTA_MPRIの時に受信待ちメッセージリストのメッセージに
         : メッセージヘッダ変数名と優先度の属性が記述されていない
T3_MBX002: メールボックスの属性がTA_MPRI以外の時に受信待ちメッセージリストの
         : メッセージに優先度の属性が記述されている
T3_MBX003: msglistのリストに同一変数が二つ以上存在する


(1.2.6) 固定長メモリプール（MEMORYPOOL）
種類 |    項目   |                  意味                  | 型 |    有効値    |    補完マクロ     |          備考
----------------------------------------------------------------------------------------------------------------------------------
 A   |           |                                        |    |              |                   |
----------------------------------------------------------------------------------------------------------------------------------
 B   |* mpfatr   | 固定長メモリプール属性                 | s  | ※1          | ANY_ATT_MPF       |
     |* blkcnt   | 獲得できるブロックの初期数             | n  | >= 0         | ANY_INI_BLKCNT    |
     |  fblkcnt  | 獲得できるブロックの現在数             | n  | >= 0         | ANY_NOW_BLKCNT    |
     |* blksz    | ブロックのサイズ                       | n  | >= 0         | ANY_BLKSZ         |
     |* class    | 所属クラス                             | s  |              | CLS_SELF_ALL      | FMP限定
----------------------------------------------------------------------------------------------------------------------------------
 C   |  wtsklist | 受信待ちタスクのリスト                 | aN |              |                   |
     |  mpf      | メモリプールの先頭番地取得用変数       | s  |              |                   |
     |  var      | ブロック獲得用変数名                   | s  |              |                   | wtsklistの要素

[有効値]
※1    値   |               意味               |         備考
   -------------------------------------------------------------------
    TA_NULL | オブジェクト属性を指定しない     |
    TA_TPRI | 待ち行列をタスクの優先度順にする |

[備考]
※2
   タスク名をキー，待ち条件を値として持つ，要素1つのハッシュ，の配列
   例)
    wtsklist:
      - TASK1:
          var: blk1


(1.2.7) スピンロック（SPINLOCK）
種類 |     項目   |                  意味                  | 型 |    有効値    |    補完マクロ     |          備考
-----------------------------------------------------------------------------------------------------------------------------------
 A   |   spnstat  | スピンロックの状態                     | s  | ※1          |                   |
-----------------------------------------------------------------------------------------------------------------------------------
 B   |*  class    | 所属クラス                             | s  |              | CLS_SELF_ALL      | FMP限定
-----------------------------------------------------------------------------------------------------------------------------------
 C   | @ procid   | スピンロック取得元の処理単位           | s  |              |                   |

[有効値]
※1     値   |         意味         |         備考
   ----------------------------------------------------------
    TSPN_LOC | 取得されている状態   |
    TSPN_UNL | 取得されていない状態 |

[エラーチェック]
T3_SPN001: spnstatにTSPN_LOCが指定されている場合にprocidが指定されていない


(1.3) その他
(1.3.1) CPU状態（CPU_STATE）
種類 |    項目   |                  意味                  | 型 |    有効値    |    補完マクロ     |          備考
----------------------------------------------------------------------------------------------------------------------------------
 A   |           |                                        |    |              |                   |
----------------------------------------------------------------------------------------------------------------------------------
 B   |  chg_ipm  | 割込み禁止マスク                       | sn | <= 0         | -                 | 省略時 TIPM_ENAALL
     |  loc_cpu  | CPUロック                              | b  |              | -                 | 省略時 false
     |  dis_dsp  | ディスパッチ禁止                       | b  |              | -                 | 省略時 false
     |* prcid    | 割付けプロセッサID                     | n  | >  0         | PRC_SELF          | FMP限定
----------------------------------------------------------------------------------------------------------------------------------
 C   |           |                                        |    |              |                   |

[エラーチェック]
T3_CPU001: 【削除】loc_idが指定されている時にCPUロック状態でない

[備考]
・pre_conditionにおいてloc_cpuにtrueを指定した場合，TTGが生成する
  テストプログラムでは，同じプロセッサで実行状態の処理単位が
  ロックを取得することを意味する．
  例) 前状態に，実行状態のタスクと実行状態のアラームハンドラが存在する場合，
      タスクがCPUロック状態としてしまうと，アラームハンドラを起動できないため，
      アラームハンドラ起動後にiloc_cpuにより，CPUロック状態とする．
・CPU_STATEを指定したpre_condition/post_conditionに実行状態の
  処理単位が存在しない場合，TTGが生成するテストプログラムでは，
  CPU状態の参照は参照しない．ただし，実行状態の処理単位が存在しない
  プロセッサではCPU状態が変化することは，カーネル仕様上あり得ない．


(1.3.2) 変数（var）
種類 |    項目   |                  意味                  | 型 | 有効値 | 補完マクロ |                   備考
----------------------------------------------------------------------------------------------------------------------------------
 A   |* type     | 変数の型・構造体の名前                 | s  |        |            |
----------------------------------------------------------------------------------------------------------------------------------
 B   |           |                                        |    |        |            |
----------------------------------------------------------------------------------------------------------------------------------
 C   |  value    | 変数の値                               |    |        |            | typeがデータ型の場合
     |  (任意)   |                                        |    |        |            | typeが構造体の場合，そのフィールド名

[備考]
var以下を変数名をキーとするハッシュにし，それ以下に記述する．
例）
  var:
    変数名1:
      type: 変数の型名
      value: 値
    変数名2:
      type: 変数の型名
    変数名3:
      type: 変数の型名(構造体)
      フィールド名1: 値
      フィールド名2: 値


(2) 処理（do）
種類 |    項目   |                  意味                  | 型 |    有効値    |    補完マクロ     |          備考
----------------------------------------------------------------------------------------------------------------------------------
 A   |  id       | サービスコールを呼び出すオブジェクトID | s  |              |                   |
     |  syscall  | 呼び出すサービスコール                 | s  |              |                   |
----------------------------------------------------------------------------------------------------------------------------------
 B   |  gcov     | gcov取得フラグ                         | b  |              |                   | 省略時 true
----------------------------------------------------------------------------------------------------------------------------------
 C   |  ercd     | サービスコールの戻り値(ER型)           | s  |              |                   |
     |  eruint   | サービスコールの戻り値(ER_uint)        | sn |              |                   |
     |  bool     | サービスコールの戻り値(bool_t)         | b  |              |                   |
     |  code     | 実行する処理                           | s  |              |                   |

[エラーチェック]
T3_DO001: syscallかcodeが指定されている場合に発行元オブジェクトIDが記述されていない

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
補完ルール
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
pre_conditionのオブジェクトにおいて省略されたパラメータは前述のパラメ
ータ一覧に記載されているルールで補完する．

post_conditionのオブジェクトにおいて省略されたパラメータは，直前のコン
ディションの内容から補完が行われるが，以下のパラメータは例外とする．

(1) TASK: wobjid
  直前のtskstatがwaitingであり，現在のtskstatがwaiting以外の場合には
  wobjidを補完しない．
  ※waiting以外ではwobjidは意味を持たないため

(2) TASK: lefttmo
  直前のtskstatがwaitingであり，wobjidとlefttmoが指定されていて，
  現在のtskstatがwaiting以外もしくはwobjidが変化した場合は，lefttmoを
  補完しない．
  ※waitingからrunningなどへ変化した場合，lefttmoは意味を持たないため
  ※wobjidが変化した場合，lefttmoは必ず変化するため

(3) ALM: lefttim
  直前のalmstatがTALM_STAであり，lefttimが指定されていて，
  現在のalmstatがTALM_STPに変化した場合は，lefttimを補完しない．
  ※TALM_STPではlefttimは意味を持たないため

(4) TASK: porder
  直前の状態からtskstatが変化した場合，またはtskpriが変化した場合は，
  porderを補完しない.
  ※readyからrunningに変化した場合，porderが変化するため
  ※tskpriが変化した場合，porderが変化するため



以上．
