
	TTG - TOPPERS Test Generator -
	バリエーション判別仕様

----------------------------------------------------------------------
 TTG
     TOPPERS Test Generator

 Copyright (C) 2009-2011 by Center for Embedded Computing Systems
             Graduate School of Information Science, Nagoya Univ., JAPAN
 Copyright (C) 2010-2011 by Graduate School of Information Science,
                            Aichi Prefectural Univ., JAPAN

 上記著作権者は，以下の (1)〜(3) の条件を満たす場合に限り，本ドキュメ
 ント(本ドキュメントを改変したものを含む．以下同じ)を使用・複製・改
 変・再配布(以下，利用と呼ぶ)することを無償で許諾する．
 (1) 本ドキュメントを利用する場合には，上記の著作権表示，この利用条件
     および下記の無保証規定が，そのままの形でドキュメント中に含まれて
     いること．
 (2) 本ドキュメントを改変する場合には，ドキュメントを改変した旨の記述
     を，改変後のドキュメント中に含めること．ただし，改変後のドキュメ
     ントが，TOPPERSプロジェクト指定の開発成果物である場合には，この限
     りではない．
 (3) 本ドキュメントの利用により直接的または間接的に生じるいかなる損害
     からも，上記著作権者およびTOPPERSプロジェクトを免責すること．また，
     本ドキュメントのユーザまたはエンドユーザからのいかなる理由に基づ
     く請求からも，上記著作権者およびTOPPERSプロジェクトを免責すること．

 本ドキュメントは，無保証で提供されているものである．上記著作権者およ
 びTOPPERSプロジェクトは，本ドキュメントに関して，特定の使用目的に対す
 る適合性も含めて，いかなる保証も行わない．また，本ドキュメントの利用
 により直接的または間接的に生じたいかなる損害に関しても，その責任を負
 わない．

 $Id: variation.txt 2 2012-05-09 02:23:52Z nces-shigihara $
----------------------------------------------------------------------

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
このドキュメントの位置付け
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
このドキュメントはTESRY記法の構成要素であるバリエーションで設定できる項
目について説明する．また，バリエーションで設定した項目の値とconfigureフ
ァイルで指定した項目の値によってテストケースの実行可否を判別する条件も
説明する．

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
説明の方式
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
項目ごとに以下の要素について記述する．

  意味  : 項目の表す意味
  型    : 項目に設定できるデータ型
  有効値: 項目に設定できる有効値
  判定  : 項目の値とconfigureの対応する設定値の組み合わせによるテスト
          ケースの実行可否の判定表
            ○ … 実行可能
            × … 実行不可(除外される)

          凡例
                       | configureの項目名
                       | 設定値1 | 設定値2
            -------------------------------
             項目の値1 |   ○    |   ×
             項目の値2 |   ×    |   ○
             省略      |   ○    |   ○


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
バリエーションで設定できる項目
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
それぞれの項目について説明する．

(1) gcov_all
  意味  : テスト全体のGCOVを取得するか
  型    : 真偽値
  有効値:
       値  |                  意味
    ---------------------------------------------------
     true  | テスト全体のGCOVを取得する
     false | テスト全体のGCOVを取得しない
     省略  | falseの場合と同じ

  判定  :
    この項目はバリエーション判別には使用しない．


(2) gain_time
  意味  : 時間を進めるか
  型    : 真偽値
  有効値:
       値  |                  意味
    ---------------------------------------------------
     true  | 時間を進める
     false | 時間を止める(時間操作関数を使う)
     省略  | 条件によって可変

  判定  :
    この項目はテストケースを実行する際，時間を止めて制御するかどうかを
    判定するために用いられる．
    判定の際に以下の時間制御についての条件を考慮する．

   [時間制御条件]
     以下のいずれかの条件を満たす場合trueとする．いずれも満たさなかった
     場合はfalseとする．
     ・前状態でACTIVATEなタイムイベントハンドラが存在する
     ・タイムイベントハンドラが登場する(lefttimが指定されている)
     ・タイムアウト有りのオブジェクト待ちタスクが存在する
     ・タイムアウト有りの起床待ちタスクが存在する
     ・時間経過待ちタスクが存在する(lefttmoが指定されている)
     ・処理もしくは後状態にタイムティック指定されている
     ・ローカルタイマ方式指定時にプロセッサ番号が指定されている周期ハン
       ドラが登場する(FMP)
     ・前状態において，cycstatにTA_STAが指定されている周期ハンドラが存
       在する

    なお，all_gain_timeとfunc_timeはconfigureの設定項目である．
    表中の"-"はDon't careを意味する．


    all_gain_time | func_time |   gain_time   | 時間制御条件 | 判定結果
   ----------------------------------------------------------------------
        false     |   false   |       -       |      -       | ×(※1)
        false     |   true    |     true      |    true      | ×(※2)
        false     |   true    |     true      |    false     | ○(※6)
        false     |   true    | false or 省略 |      -       | ○(※5)
        true      |   false   | true or 省略  |    true      | ×(※3)
        true      |   false   | true or 省略  |    false     | ○(※6)
        true      |   false   |     false     |      -       | ×(※3，4)
        true      |   true    |     true      |    true      | ×(※2)
        true      |   true    |     true      |    false     | ○(※6)
        true      |   true    |     false     |      -       | ○(※5)
        true      |   true    |     省略      |    true      | ○(※5)
        true      |   true    |     省略      |    false     | ○(※6)

    ※1 … 時間を操作できないため1件も処理できずエラーとなる．
    ※2 … 時間を制御しないと実現できないテストケース．
    ※3 … 時間を制御できないテストケース．
    ※4 … 時間を止められないテストケース．
    ※5 … 時間を制御して実行．
    ※6 … 時間を流して実行．


(3) timer_arch
  意味  : タイマーアーキテクチャ
  型    : 文字列
  有効値:
        値  |              意味
    ------------------------------------------
     local  | ローカルタイマ方式のみ実行可能
     global | グローバルタイマ方式のみ実行可能
     省略   | どちらの方式でも実行可能

  判定  :
            |   timer_arch
            | local | global
    -------------------------
     local  |  ○   |  ×
     global |  ×   |  ○
     省略   |  ○   |  ○


(4) irc_arch
  意味  : IRCアーキテクチャ
  型    : 文字列
  有効値:
          値     |                        意味
    ------------------------------------------------------------------
     local       | ローカルIRCのみ実行可能
     global      | グローバルIRCのみ実行可能
     combination | グローバルIRC，ローカルIRCの両方をサポートしている
                 | 場合のみ実行可能
     省略        | いずれの場合でも実行可能

  判定  :
                 |          irc_arch
                 | local | global | combination
    --------------------------------------------
     local       |  ○   |   ×   |    ×
     global      |  ×   |   ○   |    ×
     combination |  ×   |   ×   |    ○
     省略        |  ○   |   ○   |    ○


(5) enable_exc_in_cpulock
  意味  : CPUロック中のCPU例外を発生するか
  型    : 真偽値
  有効値:
       値  |                         意味
    ------------------------------------------------------------------
     true  | CPUロック中のCPU例外をサポートしているターゲットのみ実行
           | 可能
     false | CPUロック中のCPU例外をサポートしていないターゲットも実行
           | 可能
     省略  | falseの場合と同じ

  判定  :
           | enable_exc_in_cpulock
           |   true   |   false
    -------------------------------
     true  |    ○    |    ×
     false |    ○    |    ○
     省略  |    ○    |    ○


(6) enable_chg_ipm_in_non_task
  意味  : 非タスクコンテキストからの割込み優先度マスク変更を行うか
  型    : 真偽値
  有効値:
       値  |                         意味
    ------------------------------------------------------------------
     true  | 非タスクコンテキストからの割込み優先度マスク変更をサポート
           | しているターゲットのみ実行可能
     false | 非タスクコンテキストからの割込み優先度マスク変更をサポート
           | していないターゲットも実行可能
     省略  | falseの場合と同じ

  判定  :
           | enable_chg_ipm_in_non_task
           |    true    |    false
    ------------------------------------
     true  |     ○     |      ×
     false |     ○     |      ○
     省略  |     ○     |      ○


(7) api_support_get_utm
  意味  : APIのget_utmを使用するか
  型    : 真偽値
  有効値:
       値  |                     意味
    ---------------------------------------------------------
     true  | get_utmをサポートしているターゲットのみ実行可能
     false | get_utmをサポートしていないターゲットも実行可能
     省略  | falseの場合と同じ

  判定  :
           | api_support_get_utm
           |  true  |  false
    -----------------------------
     true  |   ○   |   ×
     false |   ○   |   ○
     省略  |   ○   |   ○


(8) api_support_ena_int
  意味  : APIのena_intを使用するか
  型    : 真偽値
  有効値:
       値  |                     意味
    ---------------------------------------------------------
     true  | ena_intをサポートしているターゲットのみ実行可能
     false | ena_intをサポートしていないターゲットも実行可能
     省略  | falseの場合と同じ

  判定  :
           | api_support_ena_int
           |  true  |  false
    -----------------------------
     true  |   ○   |   ×
     false |   ○   |   ○
     省略  |   ○   |   ○


(9) api_support_dis_int
  意味  : APIのdis_intを使用するか
  型    : 真偽値
  有効値:
       値  |                     意味
    ---------------------------------------------------------
     true  | dis_intをサポートしているターゲットのみ実行可能
     false | dis_intをサポートしていないターゲットも実行可能
     省略  | falseの場合と同じ

  判定  :
           | api_support_dis_int
           |  true  |  false
    -----------------------------
     true  |   ○   |   ×
     false |   ○   |   ○
     省略  |   ○   |   ○
