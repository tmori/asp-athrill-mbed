
	TTG - TOPPERS Test Generator -
	TTCエラーチェック一覧

----------------------------------------------------------------------
 TTG
     TOPPERS Test Generator

 Copyright (C) 2009-2012 by Center for Embedded Computing Systems
             Graduate School of Information Science, Nagoya Univ., JAPAN
 Copyright (C) 2010-2011 by Graduate School of Information Science,
                            Aichi Prefectural Univ., JAPAN
 Copyright (C) 2012 by FUJISOFT INCORPORATED

 上記著作権者は，以下の (1)〜(3) の条件を満たす場合に限り，本ドキュメ
 ント(本ドキュメントを改変したものを含む．以下同じ)を使用・複製・改
 変・再配布(以下，利用と呼ぶ)することを無償で許諾する．
 (1) 本ドキュメントを利用する場合には，上記の著作権表示，この利用条件
     および下記の無保証規定が，そのままの形でドキュメント中に含まれて
     いること．
 (2) 本ドキュメントを改変する場合には，ドキュメントを改変した旨の記述
     を，改変後のドキュメント中に含めること．ただし，改変後のドキュメ
     ントが，TOPPERSプロジェクト指定の開発成果物である場合には，この限
     りではない．
 (3) 本ドキュメントの利用により直接的または間接的に生じるいかなる損害
     からも，上記著作権者およびTOPPERSプロジェクトを免責すること．また，
     本ドキュメントのユーザまたはエンドユーザからのいかなる理由に基づ
     く請求からも，上記著作権者およびTOPPERSプロジェクトを免責すること．

 本ドキュメントは，無保証で提供されているものである．上記著作権者およ
 びTOPPERSプロジェクトは，本ドキュメントに関して，特定の使用目的に対す
 る適合性も含めて，いかなる保証も行わない．また，本ドキュメントの利用
 により直接的または間接的に生じたいかなる損害に関しても，その責任を負
 わない．

 $Id: check_list.txt 2 2012-05-09 02:23:52Z nces-shigihara $
----------------------------------------------------------------------

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
このドキュメントの位置付け
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
このドキュメントは，TTC（TOPPERS Test Checker）において行うチェック処
理の内容についてまとめたものである．

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
チェック内容によるカテゴリの分類
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
TTCでは，チェック内容とそのスコープによってエラーチェックのカテゴリ分
けを行っている．内容は以下の表に示す．

 ID |    カテゴリ名     |                チェック内容
----------------------------------------------------------------------
 T0 | environment check | configureの設定
 T1 | basic check       | テストシナリオの構成
 T2 | attribute check   | オブジェクトの属性
 T3 | object check      | オブジェクト内の依存関係
 T4 | condition check   | コンディション内の依存関係
 T5 | scenario check    | テストシナリオ内の依存関係
 T6 | variation check   | バリエーション指定との関係
 T7 | multiple check    | テストシナリオ間の依存関係

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
チェック内容一覧
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
----------------------------------------------------------------------
(T0) environment check
----------------------------------------------------------------------
■configure.yamlのエラーチェック
  以下の条件を満たしているかチェックを行う

T0_001: configureの設定で記述されていない項目がある
T0_002: configureの設定値が指定された型と異なる
T0_003: configureの設定値が有効値でない
T0_004: マクロの設定値が指定された型と異なる
T0_005: マクロの設定値が有効値でない
T0_006: 時間操作関数がないのに全テストケース時間停止指定である
T0_007: 必要なマクロが定義されていない
T0_008: configureがHashでない
T0_009: マクロ定義部がHashでない
T0_010: configureに規定されていない項目が記述されている

【備考】
・T0_001，T0_010のconfigureで設定する項目とは，configure.yamlで定義して
  いる項目である
・T0_002，T0_003，T0_004，T0_005のチェックに用いる，型と有効値の条件は，
  configure.yamlを参照する
・T0_007の必要なマクロとは，configure.yamlで定義しているマクロである(マ
  クロを増やすことは可能)

----------------------------------------------------------------------
(T1) basic check
----------------------------------------------------------------------
■テストシナリオの構成チェック
  以下の条件を満たしているかチェックを行う

T1_001: 入力YAMLがHashではない
T1_002: 入力YAML内にテストシナリオが1つもない
T1_003: テストIDの文字列が不正
T1_004: テストシナリオがHashではない
T1_005: テストシナリオ内不正なキーが指定されている
T1_006: pre_conditionが存在しない
T1_007: pre_conditionがHashではない
T1_008: doが存在しない
T1_009: doのシーケンス番号が二重に定義されている
T1_010: doがHashかnilではない
T1_011: post_conditionのシーケンス番号が二重に定義されている
T1_012: post_conditionがHashかnilではない
T1_013: doとpost_conditionのシーケンス番号が対応していない
T1_014: タイムティック指定が0より小さい
T1_015: オブジェクトIDの文字列が不正
T1_016: オブジェクトがHashではない
T1_017: 指定されたオブジェクトタイプが定義されていない
T1_018: pre_condition内のオブジェクトにtype属性が定義されていない
T1_019: post_conditionで状態変化のないオブジェクトが記述されている
T1_020: post_condition内のオブジェクトにtype属性が定義されている
T1_021: variationがHashかnilではない
T1_022: オブジェクトで定義可能な属性以外が指定されている
T1_023: pre_conditionで指定必須な属性が指定されていない
T1_024: pre_conditionのみで指定可能な属性が指定されている
T1_025: pre_conditionで変数のtypeが指定されていない
T1_026: post_conditionで変数のtypeが指定されている
T1_027: noteが文字列ではない
T1_028: テストIDに予約語が使われている

----------------------------------------------------------------------
(T2) attribute check
----------------------------------------------------------------------
■各オブジェクトの属性チェック．
  各属性のチェック内容はparam.txtに記載

----------------------------------------------------------------------
(T3) object check
----------------------------------------------------------------------
■オブジェクト内の依存関係チェック
  各オブジェクトのチェック内容はparam.txtに記載

----------------------------------------------------------------------
(T4) condition check
----------------------------------------------------------------------
■コンディション内の依存関係チェック
  以下の条件を満たしているかチェックを行う

T4_001: pre_conditionで実行状態の処理単位が存在しない
T4_002: pre_conditionでタスクが存在しない
T4_003: pre_conditionでCPUロック状態の時に，タスクの優先度に対して実行状態が逆転している状態になっている
T4_004: pre_conditionでporderが逆転している状態になっている
T4_005: 初期化ルーチン，終了ルーチンがpre_condition以外で指定されている
T4_006: CPU_STATEが1つのプロセッサに2つ以上存在している
T4_007: 実行状態でない処理単位に変数のvalueが定義されている
      : (ただしタスクがrunningであっても非タスクがACTIVATEであればエラーとする)
T4_008: 同一コンディション内で実行状態のタスクが複数存在する
T4_009: 同一コンディション内で起動中の非タスクコンテキストが複数存在する
T4_010: 実行状態の処理単位が存在しない状態でCPU状態(CPUロック状態 | ディスパッチ禁止状態 | 割込み禁止マスク != 0)を指定している
T4_011: 【削除】アラームハンドラしかいないのにCPUロック以外のCPU状態が設定されている
T4_012: 【削除】タスクかアラームが動作していないのにCPUロック状態が設定されている
T4_013: 待ち状態における待ち対象オブジェクトが存在しない
T4_014: 同一優先度内でporderが連番でない
T4_015: 同一優先度内でporderがユニークでない
T4_016: ACTIVATEであるCPU例外ハンドラが存在するプロセッサに，実行中のタスクかタスク例外が存在しない
T4_017: 同一CPU例外ハンドラ番号に対するCPU例外ハンドラが複数定義されている
T4_018: 関連タスクの状態がdormantであるのにタスク例外が有効
T4_019: 関連タスクがdormantである場合に，指定不可なパラメータが指定されている
T4_020: 関連タスクがdormantでない場合にtexstatが指定されていない
T4_021: 関連タスクIDのオブジェクトが存在しない
T4_022: 関連タスクIDのオブジェクトがタスクでない
T4_023: inhnoが同じであるINTHDRが複数定義されている
T4_024: intnoが同じであるISRが複数定義されている場合にintstatが一致していない
T4_025: intnoが同じであるINTHDRとISRが定義されている
T4_026: 待ちタスクリストに登録されたタスクの待ち対象がこの待ちタスクリストを持つオブジェクトと異なる
T4_027: 待ちタスクリストに登録されたタスクが待ち状態か二重待ち状態でない
T4_028: 待ちタスクリストに登録されたオブジェクトが存在しない
T4_029: 待ちタスクリストに登録されたオブジェクトがタスクでない
T4_030: 待ちタスクリストに登録された待ち条件用変数がタスクにおいて適切な型で宣言されていない
T4_031: 待ちタスクリストに登録された待ち条件用変数がタスクで宣言されていない
T4_032: メモリプールの先頭番地を代入する変数を持つ処理単位が実行状態でない時にその変数を確認しようとしている
T4_033: メモリプールの先頭番地を代入する変数が適切な型でない
T4_034: pre_conditionでタスク例外処理ルーチンの起動条件を満たしているのにACTIVATEでない
T4_035: msglistのメッセージ受信用変数が適切な型で宣言されていない
T4_036: doでcodeが指定されている時に戻り値が指定されている
T4_037: doでsyscallとcodeが同時に指定されている
T4_038: ACTIVATEである割込みハンドラが存在するプロセッサに，実行中のタスクかタスク例外が存在しない
T4_039: ACTIVATEである割込みサービスルーチンが存在するプロセッサに，実行中のタスクかタスク例外が存在しない
T4_040: 【削除】pre_conditionにおいてACTIVATEなタスク例外が，タスク例外許可かつ保留例外要因が0でない
        (タスク例外からena_texとras_texを発行してしまい，無限ループしてしまう)
T4_041: 【削除】loc_idで指定されたオブジェクトが存在しない
T4_042: 【削除】loc_idで指定されたオブジェクトが処理単位でない
T4_043: 【削除】loc_idで指定された処理単位が実行状態でない
T4_044: 【削除】loc_idが指定されたCPU_STATEと同じプロセッサにACTIVATEなCPU例外ハンドラが存在しない
T4_045: 【削除】loc_idが指定されたCPU_STATEと同じプロセッサにCPU例外ハンドラ以外の実行中の処理単位が存在しない

[FMP限定]
T4_F001: スピンロック中にCPU_STATEが定義されていない
T4_F002: スピンロック中にCPUロックになっていない
T4_F003: スピンロック取得元オブジェクトが存在しない
T4_F004: スピンロック取得元オブジェクトが処理単位ではない
T4_F005: タスク状態がrunning-suspendedの時に以下の条件のいずれも満たしていない
         * CPU状態(ipm != 0 | loc_cpu = true | dis_dsp = true)
         * スピンロック中
         * ACTIVATEな非タスクが存在
T4_F006: スピンロックIDのオブジェクトが存在しない
T4_F007: スピンロックIDのオブジェクトがスピンロックではない

----------------------------------------------------------------------
(T5) scenario check
----------------------------------------------------------------------
■テストシナリオ内の依存関係チェック
  以下の条件を満たしているかチェックを行う

T5_001: post_conditionにpre_conditionで定義されていないオブジェクトIDが存在する
T5_002: post_conditionにpre_conditionで定義されていない変数が存在する
T5_003: doでAPIを発行するオブジェクトが存在しない
T5_004: doでAPIを発行するオブジェクトが処理単位でない
T5_005: doでAPIを発行するオブジェクトが同一タイムティック内の直前の状態で実行状態でない
T5_006: タイムティック指定で過去に戻る
T5_007: 【削除】post_conditionのタイムティック指定で過去に戻る
T5_008: CPUロック状態で時間が進む
T5_009: 【削除】CPU状態がchg_ipm!=0 の状態で時間が進む
T5_010: 非タスク実行中に時間が経過する
T5_011: 【削除】タイムイベントハンドラ実行中に時間が経過する
T5_012: 以下の条件を満たす場合エラーとする(エラーコード確認漏れ)
        * doにercd/bool/eruintのいずれも指定されていない
        * codeでなくsyscallを指定している
        * そのdoの後続の全てのコンディションにおいてAPIを発行した処理単位が1回以上runningあるいはACTIVATEになっている
          * APIを発行した処理単位がrunningのタスクの場合，以下の制約を設ける
            * 同一コンディション内に該当タスクに関連付けされたタスク例外がACTIVATEであればカウントしない
            * bootcntが直前のコンディションから増えている場合はカウントしない 
T5_013: 以下の条件を満たす場合エラーとする(確認できないエラーコード指定)
        * doにercd/bool/eruintのいずれかが指定されている
        * そのdoの後続の全てのコンディションにおいてAPIを発行した処理単位が1回もrunningあるいはACTIVATEになっていない
          * APIを発行した処理単位がrunningのタスクの場合，以下の制約を設ける
            * 同一コンディション内に該当タスクに関連付けされたタスク例外がACTIVATEであればカウントしない
            * bootcntが直前のコンディションから増えている場合はカウントしない 

[FMP限定]
T5_F001: タスク状態がrunning-suspendedの時，非タスクが実行状態ならばdoでapiを発行しているのはその非タスクか
T5_F002: プロセッサ番号を指定するマクロがPRC_OTHERとPRC_OTHER_1・PRC_OTHER_2のいずれかと同時に指定されている
T5_F003: pre_conditionおよび最後のpost_conditionに存在するタスクの状態がrunning-waitspinになっている
T5_F004: グローバルタイマ指定時，タイムイベントハンドラが複数のプロセッサで定義されている
       : (variationでlocalを指定している場合はチェック対象外)

----------------------------------------------------------------------
(T6) variation check
----------------------------------------------------------------------
■バリエーション指定との関係チェック
  以下の条件を満たしているかチェックを行う
  ※T6に関しては，条件に一致した場合エラーとせず，対象テストケースを
    除外するのみとし，除外したテストケースID一覧を出力する．
    ただし，T6_F002は除外せずに通常のエラーと同じとする

T6_001: 時間操作関数が必要なのに使用不可
T6_002: 割込み発生関数が必要なのに使用不可
T6_003: CPU例外発生関数が必要なのに使用不可
T6_004: CPUロック中にCPU例外発生のサポートがされていない
T6_005: 非タスクコンテキストからの割込み優先度マスク変更サポートがされていない
T6_006: APIのget_utmがサポートされていない
T6_007: APIのena_intがサポートされていない
T6_008: APIのdis_intがサポートされていない
T6_009: 【削除】設定した割込み番号の数よりも多く割込み番号が使用されている
T6_010: ena_int，dis_intのいずれかがサポートされていない時に割込みハンドラ・割込みサービスルーチンの状態が変化する
        (属性がTA_NULLの場合，状態はTA_DISINT・属性がTA_ENAINTの場合，状態はTA_ENAINTになる)
T6_011: 時間操作が必要なのに時間を進める指定がある(時間操作関数はある)

[FMP限定]
T6_F001: 設定したプロセッサ数より多いプロセッサが使用されている
T6_F002: 設定したスピンロック数より多いスピンロックが使用されている
T6_F003: 自プロセッサ割込みが発生させられないのにpre_conditionで過渡状態のタスクが登場する
T6_F004: IRCアーキテクチャがconfigureで指定された方式と異なる
T6_F005: タイマーアーキテクチャがconfigureで指定された方式と異なる

----------------------------------------------------------------------
(T7) multiple check
----------------------------------------------------------------------
■テストシナリオ間の依存関係チェック
  以下の条件を満たしているかチェックを行う

T7_001: テストIDが重複している

[テストシナリオ全体で以下の制約に反する]
T7_002: 同一割込み番号に対する割込みハンドラにおいて，以下のパラメータが異なる割込みハンドラが
      : 定義されてる(4つとも一致している必要がある)
      : → intatr，inhno，intpri，class
T7_003: 同一割込み番号に対する割込みサービスルーチンにおいて，以下のパラメータが異なる割込み
      : サービスルーチンが定義されてる(2つとも一致している必要がある)
      : → intatr，intpri
T7_004: 同一割込み番号に対するisrpriが同一のサービスルーチンにおいて，以下のパラメータが異なる
      : 割込みサービスルーチンが定義されてる (2つとも一致している必要がある)
      : → exinf，class
T7_005: 同一割込み番号に対して，割込みハンドラと割込みサービスルーチンが定義されている
T7_006: 同一CPU例外ハンドラ番号に対するCPU例外ハンドラにおいて，以下のパラメータが異なるCPU例外ハンドラが定義されてる
      : → class
T7_007: 【削除】割込み番号の使用数が設定値より超えている

[FMP限定]
T7_F001: スピンロックの数が設定値より超えている
