#!ruby -Ke
#
#  TTG
#      TOPPERS Test Generator
#
#  Copyright (C) 2009-2012 by Center for Embedded Computing Systems
#              Graduate School of Information Science, Nagoya Univ., JAPAN
#  Copyright (C) 2010-2011 by Digital Craft Inc.
#
#  上記著作権者は，以下の(1)〜(4)の条件を満たす場合に限り，本ソフトウェ
#  ア（本ソフトウェアを改変したものを含む．以下同じ）を使用・複製・改
#  変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
#  (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
#      権表示，この利用条件および下記の無保証規定が，そのままの形でソー
#      スコード中に含まれていること．
#  (2) 本ソフトウェアを，ライブラリ形式など，他のソフトウェア開発に使
#      用できる形で再配布する場合には，再配布に伴うドキュメント（利用
#      者マニュアルなど）に，上記の著作権表示，この利用条件および下記
#      の無保証規定を掲載すること．
#  (3) 本ソフトウェアを，機器に組み込むなど，他のソフトウェア開発に使
#      用できない形で再配布する場合には，次のいずれかの条件を満たすこ
#      と．
#    (a) 再配布に伴うドキュメント（利用者マニュアルなど）に，上記の著
#        作権表示，この利用条件および下記の無保証規定を掲載すること．
#    (b) 再配布の形態を，別に定める方法によって，TOPPERSプロジェクトに
#        報告すること．
#  (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
#      害からも，上記著作権者およびTOPPERSプロジェクトを免責すること．
#      また，本ソフトウェアのユーザまたはエンドユーザからのいかなる理
#      由に基づく請求からも，上記著作権者およびTOPPERSプロジェクトを
#      免責すること．
#
#  本ソフトウェアは，無保証で提供されているものである．上記著作権者お
#  よびTOPPERSプロジェクトは，本ソフトウェアに関して，特定の使用目的
#  に対する適合性も含めて，いかなる保証も行わない．また，本ソフトウェ
#  アの利用により直接的または間接的に生じたいかなる損害に関しても，そ
#  の責任を負わない．
#
#  $Id: ttj.rb 9 2012-09-11 01:47:48Z nces-shigihara $
#
if ($0 == __FILE__)
  TOOL_ROOT = File.expand_path(File.dirname(__FILE__) + "/../../")
  $LOAD_PATH.unshift(TOOL_ROOT)
end

require "ttj/bin/class/TTJModule.rb"

module TTJModule
  #===================================================================
  # クラス名: TTJ
  # 概　  要: TTJメインクラス
  #===================================================================
  class TTJ
    include TTJModule

    #=================================================================
    # 概要: 他モジュールからの実行
    #=================================================================
    def japanize_test_scenario(aTestScenarios)
      $aTestScenarios = aTestScenarios
      japanize_test_scenario_info()
    end

    #=================================================================
    # 概要: TTJ単体実行
    #=================================================================
    def TTJ_execution(aArgs)
      japanize_TTC_info(aArgs)
    end

    #=================================================================
    # 概  要: 画面出力
    #=================================================================
    def print_monitor()
      puts_monitor()
    end

    #=================================================================
    # 概  要: ファイル出力
    #=================================================================
    def print_file()
      create_file()
    end

  end
end

#=====================================================================
# main
#=====================================================================
if ($0 == __FILE__)
  require "ttc/bin/ttc.rb"
  require 'pp'

  #===================================================================
  # 概  要: TTJの単体テスト
  #===================================================================
  module TTJModule
    cTTJ = TTJ.new()
    cTTJ.TTJ_execution(ARGV)   # TTJ単体実行

    #cTTJ.print_monitor()  # 画面出力
    cTTJ.print_file()     # ファイル出力
  end
end
